{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Introduction | Paytools",
    "keywords": "Introduction Payetools is the first library of its kind to bring open-source capabilities to UK payroll processing via a robust, cross-platform framework written in C#. Payetools contains support for calculating the following: UK Income Tax (all jurisdictions) National Insurance Student Loans Pensions using Qualifying Earnings and Pensionable Pay earnings bases (under both Relief at Source and Net Pay Arrangement tax treatments) Compliance with National Minimum/Living Wage regulations The code passes HMRC tests for income tax, National Insurance, student loans and National Minimum Wage. Tests are included for 2022-2023 and 2023-2024 tax year rates and thresholds. Documentation This documentation is a work in progress. It is currently limited to the API reference, which is itself auto-generated from the XML comments in the Payetools source code. Further work to expand the set of examples and sample code will be provided in due course. Expand the Reference menu on the left hand side to view the individual namespaces within the Payetools library."
  },
  "api/Payetools.Common.Diagnostics.html": {
    "href": "api/Payetools.Common.Diagnostics.html",
    "title": "Namespace Payetools.Common.Diagnostics | Paytools",
    "keywords": "Namespace Payetools.Common.Diagnostics Classes InconsistentDataException Exception that is thrown when inconsistent data is detected, for example, when a tax code regime is invalid for the tax year in question. InvalidReferenceDataException Exception that is thrown when invalid reference data is provided."
  },
  "api/Payetools.Common.Diagnostics.InconsistentDataException.html": {
    "href": "api/Payetools.Common.Diagnostics.InconsistentDataException.html",
    "title": "Class InconsistentDataException | Paytools",
    "keywords": "Class InconsistentDataException Namespace Payetools.Common.Diagnostics Assembly Payetools.Common.dll Exception that is thrown when inconsistent data is detected, for example, when a tax code regime is invalid for the tax year in question. public class InconsistentDataException : Exception, ISerializable Inheritance object Exception InconsistentDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InconsistentDataException(string) Initialises a new instance of the InconsistentDataException class. public InconsistentDataException(string message) Parameters message string Human-readable text providing further details on the exception."
  },
  "api/Payetools.Common.Diagnostics.InvalidReferenceDataException.html": {
    "href": "api/Payetools.Common.Diagnostics.InvalidReferenceDataException.html",
    "title": "Class InvalidReferenceDataException | Paytools",
    "keywords": "Class InvalidReferenceDataException Namespace Payetools.Common.Diagnostics Assembly Payetools.Common.dll Exception that is thrown when invalid reference data is provided. public class InvalidReferenceDataException : Exception, ISerializable Inheritance object Exception InvalidReferenceDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidReferenceDataException(string, Exception) Initialises a new instance of the InvalidReferenceDataException class with the supplied inner exception. public InvalidReferenceDataException(string message, Exception innerException) Parameters message string Human-readable text providing further details on the exception. innerException Exception Inner exception. InvalidReferenceDataException(string) Initialises a new instance of the InvalidReferenceDataException class. public InvalidReferenceDataException(string message) Parameters message string Human-readable text providing further details on the exception."
  },
  "api/Payetools.Common.Extensions.DateOnlyExtensions.html": {
    "href": "api/Payetools.Common.Extensions.DateOnlyExtensions.html",
    "title": "Class DateOnlyExtensions | Paytools",
    "keywords": "Class DateOnlyExtensions Namespace Payetools.Common.Extensions Assembly Payetools.Common.dll Extension methods for instances of DateOnly. public static class DateOnlyExtensions Inheritance object DateOnlyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AgeAt(DateOnly, DateOnly) Calculates the age of a person on a certain date based on the supplied date of birth. Takes account of leap years, using the convention that someone born on 29th February in a leap year is not legally one year older until 1st March of a non-leap year. public static int AgeAt(this DateOnly dateOfBirth, DateOnly date) Parameters dateOfBirth DateOnly Individual's date of birth. date DateOnly Date at which to evaluate age at. Returns int Age of the individual in years (as an integer). Remarks This code is not guaranteed to be correct for non-UK locales, as some countries have skipped certain dates within living memory. ToMiddayUtcDateTime(DateOnly) Provides an equivalent DateTime to the supplied DateOnly with the time portion set to midday (12:00:00) UTC. This is used to minimise the possibility of dates being misinterpreted as the next or previous day due to the use of non-UTC timezones. public static DateTime ToMiddayUtcDateTime(this DateOnly date) Parameters date DateOnly DateOnly to convert to DateTime. Returns DateTime DateTime instance with the same date as the supplied DateOnly and time portion set to 12:00:00 UTC. ToPayDate(DateOnly, PayFrequency) Converts the supplied DateOnly to a PayDate based on the specified PayFrequency. public static PayDate ToPayDate(this DateOnly date, PayFrequency payFrequency) Parameters date DateOnly Date to obtain PayDate for. payFrequency PayFrequency Applicable pay frequency for this pay date. Returns PayDate PayDate for the supplied date and pay frequency. ToTaxYearEnding(DateOnly) Gets the TaxYearEnding value for the supplied DateOnly. public static TaxYearEnding ToTaxYearEnding(this DateOnly date) Parameters date DateOnly DateOnly to get the TaxYearEnding for. Returns TaxYearEnding Relevant TaxYearEnding for the supplied date. Exceptions ArgumentOutOfRangeException Thrown if the supplied date is outside the supported set of dates for this library. ToUk(DateOnly) Returns the date as a string in UK format (dd/mm/yyyy). public static string ToUk(this DateOnly date) Parameters date DateOnly Date to get string representation for. Returns string UK format date string."
  },
  "api/Payetools.Common.Extensions.DateTimeExtensions.html": {
    "href": "api/Payetools.Common.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | Paytools",
    "keywords": "Class DateTimeExtensions Namespace Payetools.Common.Extensions Assembly Payetools.Common.dll Extension methods for instances of DateTime. public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MiddayUtc(DateTime) Gets an instance of DateTime from the supplied DateTime but with the time portion set to midday (12:00:00) UTC. public static DateTime MiddayUtc(this DateTime dateTime) Parameters dateTime DateTime Source DateTime instance. Returns DateTime DateTime with the same date but time portion set to 12:00:00 UTC."
  },
  "api/Payetools.Common.Extensions.html": {
    "href": "api/Payetools.Common.Extensions.html",
    "title": "Namespace Payetools.Common.Extensions | Paytools",
    "keywords": "Namespace Payetools.Common.Extensions Classes DateOnlyExtensions Extension methods for instances of DateOnly. DateTimeExtensions Extension methods for instances of DateTime. IEnumerableExtensions Extension methods for instances of IEnumerable<T>. ImmutableListExtensions Extension methods for ImmutableList<T>."
  },
  "api/Payetools.Common.Extensions.IEnumerableExtensions.html": {
    "href": "api/Payetools.Common.Extensions.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | Paytools",
    "keywords": "Class IEnumerableExtensions Namespace Payetools.Common.Extensions Assembly Payetools.Common.dll Extension methods for instances of IEnumerable<T>. public static class IEnumerableExtensions Inheritance object IEnumerableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WithIndex<T>(IEnumerable<T>) Provides a new IEnumerable of tuples, where the first element of the tuple is the original item and the second element is the numeric index of the item, zero-based. public static IEnumerable<(T Value, int Index)> WithIndex<T>(this IEnumerable<T> source) Parameters source IEnumerable<T> Source IEnumerable. Returns IEnumerable<(T Value, int Index)> New IEnumerable of tuples as described above. Type Parameters T Type of item in original IEnumerable."
  },
  "api/Payetools.Common.Extensions.ImmutableListExtensions.html": {
    "href": "api/Payetools.Common.Extensions.ImmutableListExtensions.html",
    "title": "Class ImmutableListExtensions | Paytools",
    "keywords": "Class ImmutableListExtensions Namespace Payetools.Common.Extensions Assembly Payetools.Common.dll Extension methods for ImmutableList<T>. public static class ImmutableListExtensions Inheritance object ImmutableListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReplaceLast<T>(ImmutableList<T>, T) Replaces the last item in the list returning a new immutable list. public static ImmutableList<T> ReplaceLast<T>(this ImmutableList<T> list, T newValue) Parameters list ImmutableList<T> List to be updated. newValue T New value to inserted in place of the current last value. Returns ImmutableList<T> A new ImmutableList<T> with the last item in the list updated. Type Parameters T Type of object that the list contains."
  },
  "api/Payetools.Common.html": {
    "href": "api/Payetools.Common.html",
    "title": "Namespace Common | Paytools",
    "keywords": "Namespace Common The Payetools.Common namespace contains all the core payroll elements needed by the individual calculation libraries, such as Income Tax and National Insurance. Payetools.Common.Diagnostics Payetools.Common.Extensions Payetools.Common.Model Payetools.Common.Serialization"
  },
  "api/Payetools.Common.Model.CountriesForTaxPurposes.html": {
    "href": "api/Payetools.Common.Model.CountriesForTaxPurposes.html",
    "title": "Enum CountriesForTaxPurposes | Paytools",
    "keywords": "Enum CountriesForTaxPurposes Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents one or more countries within the United Kingdom for tax purposes. For example, Scotland has had its own thresholds and rates of income tax since 2016. Note that this enum is marked with the [Flags} attribute as it is possible to combine countries for situations where the same set of tax parameters applies to more than one country, e.g. England and Northern Ireland. [Flags] public enum CountriesForTaxPurposes Fields England = 1 England NorthernIreland = 2 Northern Ireland Scotland = 4 Scotland Wales = 8 Wales"
  },
  "api/Payetools.Common.Model.CountriesForTaxPurposesConverter.html": {
    "href": "api/Payetools.Common.Model.CountriesForTaxPurposesConverter.html",
    "title": "Class CountriesForTaxPurposesConverter | Paytools",
    "keywords": "Class CountriesForTaxPurposesConverter Namespace Payetools.Common.Model Assembly Payetools.Common.dll Converter that translates between the string format of countries based on ISO-3166 and CountriesForTaxPurposes enum values. public static class CountriesForTaxPurposesConverter Inheritance object CountriesForTaxPurposesConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToEnum(string?) Gets the CountriesForTaxPurposes enum value for the supplied country or space separated list of ISO-3166 countries, e.g., \"GB-ENG GB-NIR\". public static CountriesForTaxPurposes ToEnum(string? iso3166Countries) Parameters iso3166Countries string Space separated list of ISO-3166 countries. Returns CountriesForTaxPurposes Equivalent CountriesForTaxPurposes enum value. Exceptions ArgumentException Thrown if an invalid country value is supplied. ToString(CountriesForTaxPurposes) Gets the ISO-3166 sub-entity for the supplied country or countries enum value. public static string ToString(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes Instance of CountriesForTaxPurposes specifying one or more countries with the UK. Returns string Space separated ISO-3166 countries list, e.g., \"GB-ENG GB-NIR\"."
  },
  "api/Payetools.Common.Model.Gender.html": {
    "href": "api/Payetools.Common.Model.Gender.html",
    "title": "Enum Gender | Paytools",
    "keywords": "Enum Gender Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enum representing a person's gender. Note that HMRC only recognises the genders male and female for PAYE purposes, hence only two options (plus unknown) are provided. public enum Gender Fields Female = 2 Female Male = 1 Male Unknown = 0 Not known/undefined"
  },
  "api/Payetools.Common.Model.HmrcAccountsOfficeReference.html": {
    "href": "api/Payetools.Common.Model.HmrcAccountsOfficeReference.html",
    "title": "Class HmrcAccountsOfficeReference | Paytools",
    "keywords": "Class HmrcAccountsOfficeReference Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents an HMRC Accounts Office Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/accounts-office-reference/, which is formatted as follows: 3 numbers The letter 'P' 8 numbers, or 7 numbers and the letter ‘X’ (from ) public record HmrcAccountsOfficeReference : IEquatable<HmrcAccountsOfficeReference> Inheritance object HmrcAccountsOfficeReference Implements IEquatable<HmrcAccountsOfficeReference> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HmrcAccountsOfficeReference(string) Initialises a new instance of HmrcAccountsOfficeReference. public HmrcAccountsOfficeReference(string accountsOfficeReference) Parameters accountsOfficeReference string String value containing the HMRC Accounts Office Reference. Exceptions ArgumentException Thrown if the supplied string value does not match the required pattern for valid HMRC Accounts Office Reference values. Methods IsValid(string) Verifies whether the supplied string could be a valid HRMC Accounts Office Reference. public static bool IsValid(string value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid HMRC Accounts Office Reference; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid HRMC Accounts Office Reference, it does not guarantee that the supplied value is registered with HMRC against a given company. ToString() Gets the string representation of this HmrcAccountsOfficeReference. public override string ToString() Returns string The value of this HmrcAccountsOfficeReference as a string. Operators implicit operator string(HmrcAccountsOfficeReference) Operator for casting implicitly from a HmrcAccountsOfficeReference instance to its string equivalent. public static implicit operator string(HmrcAccountsOfficeReference value) Parameters value HmrcAccountsOfficeReference An instance of HmrcAccountsOfficeReference. Returns string"
  },
  "api/Payetools.Common.Model.HmrcPayeReference.html": {
    "href": "api/Payetools.Common.Model.HmrcPayeReference.html",
    "title": "Struct HmrcPayeReference | Paytools",
    "keywords": "Struct HmrcPayeReference Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents an HMRC PAYE Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/employer-paye-reference/, which is formatted as follows: 3 numbers a forward slash ('/') between 1 and 10 characters, which can be letters and numbers public struct HmrcPayeReference Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HmrcPayeReference(int, string) Initialises a new instance of HmrcPayeReference using the Office number and Employer PAYE reference elements. public HmrcPayeReference(int hmrcOfficeNumber, string employerPayeReference) Parameters hmrcOfficeNumber int HMRC Office Number (always 3 digits). employerPayeReference string Employer PAYE reference (the part after the '/'). Properties EmployerPayeReference Gets or sets the PAYE reference portion of the full HMRC PAYE Reference, i.e., the portion on the right hand of '/'. public string EmployerPayeReference { readonly get; set; } Property Value string HmrcOfficeNumber Gets or sets the HMRC office number portion of the full PAYE Reference. Always 3 digits. public int HmrcOfficeNumber { readonly get; set; } Property Value int Methods IsValid(string?) Verifies whether the supplied string could be a valid HMRC PAYE Reference. public static bool IsValid(string? value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid HMRC PAYE Reference; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid HMRC PAYE Reference, it does not guarantee that the supplied value is registered with HMRC against a given company. ToString() Gets the string representation of this HmrcPayeReference. public override string ToString() Returns string The value of this HmrcPayeReference as a string. TryParse(string?, out HmrcPayeReference?) Attempts to parse the supplied string into an HmrcPayeReference object. public static bool TryParse(string? input, out HmrcPayeReference? payeReference) Parameters input string String value containing candidate full HMRC PAYE Reference. Lower case characters are converted to upper case. payeReference HmrcPayeReference? Set to a new instance of HmrcPayeReference if parse succeeds; set to object default otherwise. Returns bool True if the string could be parsed into a valid HMRC PAYE Reference; false otherwise. Operators implicit operator string(HmrcPayeReference) Operator for casting implicitly from a HmrcPayeReference instance to its string representation. public static implicit operator string(HmrcPayeReference value) Parameters value HmrcPayeReference An instance of HmrcPayeReference. Returns string"
  },
  "api/Payetools.Common.Model.html": {
    "href": "api/Payetools.Common.Model.html",
    "title": "Namespace Payetools.Common.Model | Paytools",
    "keywords": "Namespace Payetools.Common.Model Classes CountriesForTaxPurposesConverter Converter that translates between the string format of countries based on ISO-3166 and CountriesForTaxPurposes enum values. HmrcAccountsOfficeReference Represents an HMRC Accounts Office Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/accounts-office-reference/, which is formatted as follows: 3 numbers The letter 'P' 8 numbers, or 7 numbers and the letter ‘X’ (from ) PayFrequencyExtensions Extension methods for PayFrequency. PayrollId Represents a payroll ID (also known as a \"worker ID\", \"payroll number\", \"works number\") as reported to HMRC. PostalAddress Represents a postal address. If it is a UK address, Postcode should be supplied ForeignCountry set to null; if the address is non-UK, then Postcode should be null and ForeignCountry should be provided. TaxTreatmentExtensions Extension methods for TaxTreatment. TaxYear Represents a given UK tax year, running from 6th April of a given year through to 5th April the following year. TaxYearEndingExtensions Extension methods for TaxYearEnding enum. UkPostcode Represents a UK Postcode. Structs HmrcPayeReference Represents an HMRC PAYE Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/employer-paye-reference/, which is formatted as follows: 3 numbers a forward slash ('/') between 1 and 10 characters, which can be letters and numbers NiNumber Represents a Uk National Insurance number, also referred to as NI number or NINO. A NINO is made up of 2 letters, 6 numbers and a final letter which is always A, B, C or D. (See HMRC's National Insurance Manual, section NIM39110 (https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110.) PayDate Represents a specific pay date for a specific pay frequency. PayReferencePeriod Represents a pay reference period, i.e. the range of dates from the first day an individual is being paid for, to the last day, inclusive. TaxCode Represents a UK tax code, with the ability to calculate tax-free pay based the code and the relevant tax period. Title Represents an individual's title (e.g., Mr., Mrs). Interfaces IApplicableFromTill Interface for reference data that indicates the period that a reference data applies for. INamedPerson Represents a named individual, i.e., a (usually living) person. This interface is provided for all the situations where a contact person is required, but is also the base entity for employees. Enums CountriesForTaxPurposes Represents one or more countries within the United Kingdom for tax purposes. For example, Scotland has had its own thresholds and rates of income tax since 2016. Note that this enum is marked with the [Flags} attribute as it is possible to combine countries for situations where the same set of tax parameters applies to more than one country, e.g. England and Northern Ireland. Gender Enum representing a person's gender. Note that HMRC only recognises the genders male and female for PAYE purposes, hence only two options (plus unknown) are provided. NiCategory Represents the set of National Insurance category letters assigned by HMRC. Taken from https://www.gov.uk/national-insurance-rates-letters/category-letters (retrieved 5-Dec-2022). PayFrequency Enumerated value for payment frequency. PensionsEarningsBasis Represents the earnings basis which is used to calculate pension contributions. PensionTaxTreatment Enum that represents the tax treatment to be applied to employee pension contributions. StudentLoanType Enum that represents a given type of student loan plan. Post-graduate loans are handled separately. TaxTreatment Enum representing the tax treatment aspect of the tax code. TaxYearEnding Enum representing a given tax year based on the last day of the tax year (i.e., 5 April 20xx)."
  },
  "api/Payetools.Common.Model.IApplicableFromTill.html": {
    "href": "api/Payetools.Common.Model.IApplicableFromTill.html",
    "title": "Interface IApplicableFromTill | Paytools",
    "keywords": "Interface IApplicableFromTill Namespace Payetools.Common.Model Assembly Payetools.Common.dll Interface for reference data that indicates the period that a reference data applies for. public interface IApplicableFromTill Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. Use DateOnly.MinValue to indicate there is no effective start date. DateOnly ApplicableFrom { get; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. Use DateOnly.MaxValue to indicate there is no effective end date. DateOnly ApplicableTill { get; } Property Value DateOnly"
  },
  "api/Payetools.Common.Model.INamedPerson.html": {
    "href": "api/Payetools.Common.Model.INamedPerson.html",
    "title": "Interface INamedPerson | Paytools",
    "keywords": "Interface INamedPerson Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a named individual, i.e., a (usually living) person. This interface is provided for all the situations where a contact person is required, but is also the base entity for employees. public interface INamedPerson Properties FirstName Gets the individual's first (also known as \"given\" or \"Christian\") name. string? FirstName { get; init; } Property Value string HasMiddleName Gets a value indicating whether the individual has supplied a middle name. bool HasMiddleName { get; } Property Value bool Initials Gets a list of the individual's initials as an array. Note that this property is only used if the individual's first name is not known, and its use is mutually exclusive with FirstName and MiddleNames. string[]? Initials { get; init; } Property Value string[] InitialsAsString Gets any initials provided as a space separated string. Will be null if a FirstName has been provided. string? InitialsAsString { get; init; } Property Value string LastName Gets the individual's last (also known as \"family\") name. string LastName { get; init; } Property Value string MiddleNames Gets the middle names of the individual, space separated. Note that this property is optional, as some people do not have middle names, or they choose not to disclose them. string? MiddleNames { get; init; } Property Value string Title Gets the individual's title, e.g., Mr, Mrs, Miss, Dr., etc. Title? Title { get; init; } Property Value Title?"
  },
  "api/Payetools.Common.Model.NiCategory.html": {
    "href": "api/Payetools.Common.Model.NiCategory.html",
    "title": "Enum NiCategory | Paytools",
    "keywords": "Enum NiCategory Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents the set of National Insurance category letters assigned by HMRC. Taken from https://www.gov.uk/national-insurance-rates-letters/category-letters (retrieved 5-Dec-2022). public enum NiCategory Fields A = 1 All employees apart from those in groups B, C, H, J, M, V and Z, and those that work in freeports (F, I, L and S) and those that are exempt (X). B = 2 Married women and widows entitled to pay reduced National Insurance. C = 3 Employees over the State Pension age. F = 4 All employees who work in freeports, apart from those in categories I, L, and S. H = 5 Apprentices under 25. I = 6 Married women and widows who work in freeports and are entitled to pay reduced National Insurance. J = 7 Employees who can defer National Insurance because they’re already paying it in another job. L = 8 Employees who work in freeports and can defer National Insurance because they’re already paying it in another job. M = 9 Employees under 21. S = 10 Employees who work in freeports and are over the State Pension age. Unspecified = 0 Not specified. V = 11 Employees who are working in their first job since leaving the armed forces (veterans). X = 12 Employees who do not have to pay National Insurance, for example because they’re under 16. Z = 13 Employees under 21 who can defer National Insurance because they’re already paying it in another job."
  },
  "api/Payetools.Common.Model.NiNumber.html": {
    "href": "api/Payetools.Common.Model.NiNumber.html",
    "title": "Struct NiNumber | Paytools",
    "keywords": "Struct NiNumber Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a Uk National Insurance number, also referred to as NI number or NINO. A NINO is made up of 2 letters, 6 numbers and a final letter which is always A, B, C or D. (See HMRC's National Insurance Manual, section NIM39110 (https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110.) public readonly struct NiNumber Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NiNumber(string) Initialises a new NiNumber instance. public NiNumber(string niNumber) Parameters niNumber string National insurance number as string. Exceptions ArgumentException Thrown if the supplied string is not a valid NI number. Properties Unknown Gets the NiNumber to be used when an employee does not know their National Insurance number. public static NiNumber Unknown { get; } Property Value NiNumber Methods IsValid(string) Verifies whether the supplied string could be a valid NI number. public static bool IsValid(string value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid NI number; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid Ni nummber, it does not guarantee that the supplied value is registered with HMRC against a given individual. ToString() Gets the string representation of this NiNumber. public override string ToString() Returns string String representation of this NI number in non-spaced format. ToString(bool) Gets the string representation of this NiNumber. public string ToString(bool asSpacedFormat) Parameters asSpacedFormat bool True if spaced format is to be returned (e.g., \"NA 12 34 67 C\"; false otherwise. Returns string String representation of this NI number in either spaced or non-spaced format. Operators implicit operator string(NiNumber) Operator for casting implicitly from a NiNumber instance to its string representation. public static implicit operator string(NiNumber niNumber) Parameters niNumber NiNumber NI number. Returns string implicit operator NiNumber(string) Operator for casting implicitly from a string to an instance of a NiNumber. public static implicit operator NiNumber(string niNumber) Parameters niNumber string NI number as string. Returns NiNumber Exceptions ArgumentException Thrown if the supplied string is not a valid NI number."
  },
  "api/Payetools.Common.Model.PayDate.html": {
    "href": "api/Payetools.Common.Model.PayDate.html",
    "title": "Struct PayDate | Paytools",
    "keywords": "Struct PayDate Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a specific pay date for a specific pay frequency. public readonly struct PayDate Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PayDate(DateOnly, PayFrequency) Initialises a new PayDate based on the supplied date and pay frequency. public PayDate(DateOnly date, PayFrequency payFrequency) Parameters date DateOnly Pay date. payFrequency PayFrequency Pay frequency. PayDate(int, int, int, PayFrequency) Initialises a new PayDate based on the supplied date and pay frequency. public PayDate(int year, int month, int day, PayFrequency payFrequency) Parameters year int Year. month int Month (1-12). day int Day. payFrequency PayFrequency Pay frequency. Properties Date Gets the date of this PayDate. public DateOnly Date { get; init; } Property Value DateOnly PayFrequency Gets the pay frequency for this PayDate. public PayFrequency PayFrequency { get; init; } Property Value PayFrequency TaxPeriod Gets the tax period for this PayDate, for example, a pay date of 20th May for a monthly payroll would be tax period 2. public int TaxPeriod { get; init; } Property Value int TaxYear Gets the TaxYear for this PayDate. public TaxYear TaxYear { get; init; } Property Value TaxYear Methods ToString() Provides a string representation of this pay date in the form 'dd/mm/yyyy (frequency, period)'. public override string ToString() Returns string String representation of this PayDate. Operators implicit operator DateTime(PayDate) Gets the equivalent DateTime for this paydate, with the time portion set to midday (12:00:00) UTC. public static implicit operator DateTime(PayDate payDate) Parameters payDate PayDate PayDate to get the DateTime for. Returns DateTime"
  },
  "api/Payetools.Common.Model.PayFrequency.html": {
    "href": "api/Payetools.Common.Model.PayFrequency.html",
    "title": "Enum PayFrequency | Paytools",
    "keywords": "Enum PayFrequency Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enumerated value for payment frequency. public enum PayFrequency Extension Methods PayFrequencyExtensions.GetStandardTaxPeriodCount(PayFrequency) PayFrequencyExtensions.GetTaxPeriodLength(PayFrequency) PayFrequencyExtensions.IsLastTaxPeriodInTaxYear(PayFrequency, int, bool) Fields Annually = 7 Once a year BiAnnually = 6 Every six months FourWeekly = 3 Every four weeks Monthly = 4 Monthly Quarterly = 5 Every three months TwoWeekly = 2 Every two weeks Unspecified = 0 Not specified Weekly = 1 Weekly"
  },
  "api/Payetools.Common.Model.PayFrequencyExtensions.html": {
    "href": "api/Payetools.Common.Model.PayFrequencyExtensions.html",
    "title": "Class PayFrequencyExtensions | Paytools",
    "keywords": "Class PayFrequencyExtensions Namespace Payetools.Common.Model Assembly Payetools.Common.dll Extension methods for PayFrequency. public static class PayFrequencyExtensions Inheritance object PayFrequencyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetStandardTaxPeriodCount(PayFrequency) Provides access to the number of tax periods within a tax year for a given PayFrequency. public static int GetStandardTaxPeriodCount(this PayFrequency payFrequency) Parameters payFrequency PayFrequency PayFrequency to provide period count for. Returns int The number of tax periods within a tax year for a this PayFrequency, for example, PayFrequency.Monthly returns 12. Exceptions ArgumentException Thrown if an invalid PayFrequency value is supplied. GetTaxPeriodLength(PayFrequency) Provides access to the number of tax periods within a tax year for a given PayFrequency. public static int GetTaxPeriodLength(this PayFrequency payFrequency) Parameters payFrequency PayFrequency PayFrequency to provide period count for. Returns int The number of tax periods within a tax year for a this PayFrequency, for example, PayFrequency.Monthly returns 12. Exceptions ArgumentException Thrown if an invalid PayFrequency value is supplied. IsLastTaxPeriodInTaxYear(PayFrequency, int, bool) Determines whether the specified tax period is the last tax period in the tax year. public static bool IsLastTaxPeriodInTaxYear(this PayFrequency payFrequency, int taxPeriod, bool applyWeek53Treatment = false) Parameters payFrequency PayFrequency Relevant pay frequency. taxPeriod int Tax period to evaluate. applyWeek53Treatment bool Flag that indicates whether to apply \"week 53\" treatment, i.e., where there are 53 weeks in a tax year (or 27 periods in a two-weekly pay cycle, etc.). Must be false for monthly, quarterly and annual payrolls. Optional, defaulting to false. Returns bool true if the supplied tax period is the last period in the tax year; false otherwise."
  },
  "api/Payetools.Common.Model.PayReferencePeriod.html": {
    "href": "api/Payetools.Common.Model.PayReferencePeriod.html",
    "title": "Struct PayReferencePeriod | Paytools",
    "keywords": "Struct PayReferencePeriod Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a pay reference period, i.e. the range of dates from the first day an individual is being paid for, to the last day, inclusive. public readonly struct PayReferencePeriod Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PayReferencePeriod(DateOnly, DateOnly) Initialises a new instance of PayReferencePeriod with the supplied start and end dates. public PayReferencePeriod(DateOnly startOfPayPeriod, DateOnly endOfPayPeriod) Parameters startOfPayPeriod DateOnly First day of pay period. endOfPayPeriod DateOnly Last day of pay period. Properties EndOfPayPeriod Gets the last day of the pay period. public DateOnly EndOfPayPeriod { get; init; } Property Value DateOnly StartOfPayPeriod Gets the first day of the pay period. public DateOnly StartOfPayPeriod { get; init; } Property Value DateOnly"
  },
  "api/Payetools.Common.Model.PayrollId.html": {
    "href": "api/Payetools.Common.Model.PayrollId.html",
    "title": "Class PayrollId | Paytools",
    "keywords": "Class PayrollId Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a payroll ID (also known as a \"worker ID\", \"payroll number\", \"works number\") as reported to HMRC. public sealed record PayrollId : IEquatable<PayrollId> Inheritance object PayrollId Implements IEquatable<PayrollId> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PayrollId(string) Initialises a new instance of PayrollId with the supplied value. public PayrollId(string payrollId) Parameters payrollId string Payroll ID value. Methods Parse(string) Parses the supplied payroll ID. TBA. public static PayrollId Parse(string value) Parameters value string Value to parse. Returns PayrollId Parsed value. TBA. Operators implicit operator string(PayrollId) Operator for casting implicitly from a PayrollId instance to its string representation. public static implicit operator string(PayrollId payrollId) Parameters payrollId PayrollId An instance of PayrollId. Returns string implicit operator PayrollId(string) Operator for casting implicitly from a payroll ID string value to a PayrollId instance. public static implicit operator PayrollId(string payrollId) Parameters payrollId string String representation of payroll ID. Returns PayrollId"
  },
  "api/Payetools.Common.Model.PensionsEarningsBasis.html": {
    "href": "api/Payetools.Common.Model.PensionsEarningsBasis.html",
    "title": "Enum PensionsEarningsBasis | Paytools",
    "keywords": "Enum PensionsEarningsBasis Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents the earnings basis which is used to calculate pension contributions. public enum PensionsEarningsBasis Fields PensionablePaySet1 = 2 Pensionable Pay Set 1 contributions are worked out on at least basic pay. Basic pay includes at a minimum, earnings before deductions, holiday pay and statutory benefits such as maternity, paternity, adoption and sick pay delivered through payroll. PensionablePaySet2 = 3 Pensionable Pay Set 2 contributions are worked out on at least basic pay, but the key difference between this and Set 1 is that basic pay must make up at least 85% of total earnings. The employer must monitor this. PensionablePaySet3 = 4 Pensionable Pay Set 2 contributions includes salary, wages, commission, bonuses, overtime, statutory sick pay, statutory maternity pay, ordinary or additional statutory paternity pay and statutory adoption pay. QualifyingEarnings = 1 Qualifying Earnings includes salary, wages, commission, bonuses, overtime, statutory sick pay, statutory maternity pay, ordinary or additional statutory paternity pay and statutory adoption pay. Qualifying earnings is calculated from pensionable pay deducting a lower threshold and capping at an upper threshold, the thresholds being decided by Government each year. Unspecified = 0 Not specified."
  },
  "api/Payetools.Common.Model.PensionTaxTreatment.html": {
    "href": "api/Payetools.Common.Model.PensionTaxTreatment.html",
    "title": "Enum PensionTaxTreatment | Paytools",
    "keywords": "Enum PensionTaxTreatment Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enum that represents the tax treatment to be applied to employee pension contributions. public enum PensionTaxTreatment Fields NetPayArrangement = 2 Net pay arrangement. Contributions are taken from salary before tax. ReliefAtSource = 1 Relief at source. Contributions are taken from post-tax salary and the pension provider claims back basic rate tax from HMRC. Unspecified = 0 Not specified."
  },
  "api/Payetools.Common.Model.PostalAddress.html": {
    "href": "api/Payetools.Common.Model.PostalAddress.html",
    "title": "Class PostalAddress | Paytools",
    "keywords": "Class PostalAddress Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a postal address. If it is a UK address, Postcode should be supplied ForeignCountry set to null; if the address is non-UK, then Postcode should be null and ForeignCountry should be provided. public class PostalAddress Inheritance object PostalAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AddressLine1 Gets or sets the first line of the address. public string AddressLine1 { get; set; } Property Value string AddressLine2 Gets or sets the second line of the address. public string AddressLine2 { get; set; } Property Value string AddressLine3 Gets or sets the third line of the address. public string? AddressLine3 { get; set; } Property Value string AddressLine4 Gets or sets the fourth line of the address. public string? AddressLine4 { get; set; } Property Value string ForeignCountry Gets or sets the TBA. public string? ForeignCountry { get; set; } Property Value string Postcode Gets or sets the postcode (UK addresses only). public UkPostcode? Postcode { get; set; } Property Value UkPostcode"
  },
  "api/Payetools.Common.Model.StudentLoanType.html": {
    "href": "api/Payetools.Common.Model.StudentLoanType.html",
    "title": "Enum StudentLoanType | Paytools",
    "keywords": "Enum StudentLoanType Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enum that represents a given type of student loan plan. Post-graduate loans are handled separately. public enum StudentLoanType Fields Plan1 = 0 Student loan Plan 1 type Plan2 = 1 Student loan Plan 2 type Plan4 = 2 Student loan Plan 4 type"
  },
  "api/Payetools.Common.Model.TaxCode.html": {
    "href": "api/Payetools.Common.Model.TaxCode.html",
    "title": "Struct TaxCode | Paytools",
    "keywords": "Struct TaxCode Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a UK tax code, with the ability to calculate tax-free pay based the code and the relevant tax period. The TryParse method is used to create a new TaxCode instance: using Payetools.Common.Model; var taxYear = new TaxYear(TaxYearEnding.Apr5_2024); var success = TaxCode.TryParse(\"1257L\", taxYear, out var taxCode); If the tax code \"1257L\" is a valid tax code for the specified tax year, then the success variable should be true and the output variable taxCode should be a correctly initialised TaxCode instance. If the supplied string cannot be intepreted as a valid tax code for the specified tax year, then 'success' would be false. Non-cumulative tax codes (also known as \"week 1/month 1\") may be represented using any of the following suffixes: \"X\" \"W1M1\" \"W1/M1\" \"W1\" \"M1\" For example, a Scottish non-cumulative K code might be represented as \"K528 X\". The above suffixes are case-insensitive and may appear after the main tax code with or without intervening spaces, e.g., \"C1250Lw1/m1\" means the same as \"C1250L X\". public readonly struct TaxCode Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ApplicableCountries Gets the country or countries that this tax code applies to, i.e., the tax regime. public CountriesForTaxPurposes ApplicableCountries { get; } Property Value CountriesForTaxPurposes IsFixedCode Gets a value indicating whether the tax code is a \"fixed code\", such as BR, D0, NT, etc., or a variable code, such as 1257L. public bool IsFixedCode { get; } Property Value bool IsNonCumulative Gets a value indicating whether the tax code is cumulative (e.g., 1257L) or non-cumulative (e.g., 1257L W1/M1). public bool IsNonCumulative { get; } Property Value bool NotionalAllowance Gets the notional annual personal allowance for the tax code. This may be negative in the event the tax code has a K prefix. public decimal NotionalAllowance { get; } Property Value decimal NumericPortionOfCode Gets the integer portion of the tax code, if applicable, or zero otherwise. public int NumericPortionOfCode { get; } Property Value int TaxRegimeLetter Gets the tax regime letter, e.g., S for Scotland, C for Wales. Returns an empty string if no specific regime is applicable. public string TaxRegimeLetter { get; } Property Value string TaxTreatment Gets the tax treatment specified by this tax code. For the most part, this is the prefix or suffix for the tax code, omitting the tax regime letter. public TaxTreatment TaxTreatment { get; } Property Value TaxTreatment Methods GetTaxFreePayForPeriod(int, int) Calculates the tax free pay for the specified tax period and given tax code. public decimal GetTaxFreePayForPeriod(int taxPeriod, int periodCount) Parameters taxPeriod int Tax period. periodCount int Number of tax periods in the year (e.g., 12 for monthly pay). Returns decimal Tax-free pay applicable up to and including the end of the specified tax period. May be negative. MapCountryToTaxRegime(CountriesForTaxPurposes) Static method that maps a CountriesForTaxPurposes value to the regime prefix letter, for example Scotland => \"S\". public static string MapCountryToTaxRegime(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes Country or countries to be mapped. Returns string Prefix letter for single country regimes (currently Scotland, Wales); Empty string otherwise. ToString() Returns the string representation of the tax code including the tax regime letter if applicable, but without any indication of whether the code is cumulative or non-cumulative. public override string ToString() Returns string String representation of tax code without tax regime prefix. ToString(bool, bool) Returns the string representation of the tax code optional including the tax regime letter if applicable, and optionally indicating whether the code is cumulative or non-cumulative by means of an \"X\" suffix. public string ToString(bool includeNonCumulativeFlag, bool includeTaxRegime) Parameters includeNonCumulativeFlag bool True to include the non-cumulative flag; false otherwise. includeTaxRegime bool True to include the tax regime prefix; false otherwise. Returns string String representation of tax code with or without tax regime prefix and with or without non-cumulative indicator. TryParse(string, out TaxCode) Attempts to parse the supplied tax code into its component parts, assuming the tax regimes for the current tax year. Non-cumulative codes must be identified by an 'X', 'W1', 'M1' or 'W1/M1' suffix, with or without preceding space. Tax code parsing is case-insensitive. public static bool TryParse(string taxCode, out TaxCode result) Parameters taxCode string Tax code as a string. result TaxCode Instance of TaxCode if valid; default(TaxCode) otherwise. Returns bool True if the tax code could be parsed; false otherwise. TryParse(string, TaxYear, out TaxCode) Attempts to parse the supplied tax code. Non-cumulative codes must be identified by an 'X', 'W1', 'M1' or 'W1/M1' suffix, with or without preceding space. Tax code parsing is case-insensitive. public static bool TryParse(string taxCode, TaxYear taxYear, out TaxCode result) Parameters taxCode string Tax code as a string. taxYear TaxYear Tax year for the supplied tax code. result TaxCode Instance of TaxCode if valid; default(TaxCode) otherwise. Returns bool True if the tax code could be parsed; false otherwise."
  },
  "api/Payetools.Common.Model.TaxTreatment.html": {
    "href": "api/Payetools.Common.Model.TaxTreatment.html",
    "title": "Enum TaxTreatment | Paytools",
    "keywords": "Enum TaxTreatment Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enum representing the tax treatment aspect of the tax code. public enum TaxTreatment Extension Methods TaxTreatmentExtensions.GetBandIndex(TaxTreatment, CountriesForTaxPurposes) Fields _0T = 6 Zero personal allowance to be applied. BR = 2 BR - basic rate tax to be applied to all taxable earnings. D0 = 3 D0 - next highest rate above BR to be applied to all taxable earnings. D1 = 4 D1 - next highest rate above D0 to be applied to all taxable earnings. D2 = 5 D2 - next highest rate above D1 to be applied to all taxable earnings. K = 7 Additional notional taxable income must be applied to existing taxable earnings. L = 8 Tax payer is entitled to the standard Personal Allowance. M = 9 Married Allowance where individual has received a transfer of 10% of their partner’s Personal Allowance. N = 10 Married Allowance where individual has transferred 10% of their Personal Allowance to their partner. NT = 1 NT - no tax payable. Unspecified = 0 Not specified."
  },
  "api/Payetools.Common.Model.TaxTreatmentExtensions.html": {
    "href": "api/Payetools.Common.Model.TaxTreatmentExtensions.html",
    "title": "Class TaxTreatmentExtensions | Paytools",
    "keywords": "Class TaxTreatmentExtensions Namespace Payetools.Common.Model Assembly Payetools.Common.dll Extension methods for TaxTreatment. public static class TaxTreatmentExtensions Inheritance object TaxTreatmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBandIndex(TaxTreatment, CountriesForTaxPurposes) Gets the zero-based index of the band that a given tax code (BR, D0, D1, D2) applies to. public static int GetBandIndex(this TaxTreatment taxTreatment, CountriesForTaxPurposes applicableCountries) Parameters taxTreatment TaxTreatment Tax treatment to determine band index for. applicableCountries CountriesForTaxPurposes Applicable countries for the input tax treatment. Returns int Band index for supplied tax treatment. Exceptions ArgumentException Thrown if it is not possible to retrieve a band index for ththe supplied tax treatment."
  },
  "api/Payetools.Common.Model.TaxYear.html": {
    "href": "api/Payetools.Common.Model.TaxYear.html",
    "title": "Class TaxYear | Paytools",
    "keywords": "Class TaxYear Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a given UK tax year, running from 6th April of a given year through to 5th April the following year. public record TaxYear : IEquatable<TaxYear> Inheritance object TaxYear Implements IEquatable<TaxYear> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks TaxYear provides utility methods to access the relevant tax regimes (i.e., sub-countries within the UK) which have changed over the period 2018 to date. TaxYear also provides conversions from dates to tax periods, based on payment frequency. Constructors TaxYear(TaxYearEnding) Initialises a new instance of TaxYear based on the supplied TaxYearEnding value. public TaxYear(TaxYearEnding taxYearEnding) Parameters taxYearEnding TaxYearEnding TaxYearEnding enum value for this tax year. TaxYear(DateOnly) Initialises a new instance of TaxYear based on the supplied date. public TaxYear(DateOnly taxDate) Parameters taxDate DateOnly Date to create TaxYear for. Properties Current Gets the TaxYearEnding for the \"current\" tax year (based on today's date). public static TaxYearEnding Current { get; } Property Value TaxYearEnding EndOfTaxYear Gets the date of the end of this tax year. public DateOnly EndOfTaxYear { get; init; } Property Value DateOnly StartOfTaxYear Gets the date of the start of this tax year. public DateOnly StartOfTaxYear { get; init; } Property Value DateOnly TaxYearEnding Gets the TaxYearEnding enumeration value for this TaxYear. public TaxYearEnding TaxYearEnding { get; init; } Property Value TaxYearEnding Methods GetCountriesForYear() Gets the list (as an array) of the country groupings that are applicable for a given tax year. public CountriesForTaxPurposes[] GetCountriesForYear() Returns CountriesForTaxPurposes[] Array of CountriesForTaxPurposes values listing the tax regime groupings for this tax year. Exceptions InvalidOperationException Thrown if an invalid/unspecified tax year is provided. GetDefaultCountriesForYear() Gets the 'default' tax regime for this tax year as an CountriesForTaxPurposes value. This is the regime that all other tax treatments fall into if they are not in a specific regime, e.g., Scotland. public CountriesForTaxPurposes GetDefaultCountriesForYear() Returns CountriesForTaxPurposes Default tax regime for this tax year. Exceptions InvalidOperationException Thrown if the tax year is invalid or has not been specified. GetLastDayOfTaxPeriod(PayFrequency, int) Gets the very last day of the specified tax period based on the applicable pay frequency. public DateOnly GetLastDayOfTaxPeriod(PayFrequency payFrequency, int taxPeriod) Parameters payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns DateOnly Last day of the tax period. Exceptions ArgumentException Thrown if the supplied pay frequency is not supported. GetTaxPeriod(DateOnly, PayFrequency) Gets the tax period for the supplied pay date and payment frequencey. For example, if the pay frequency is monthly and the pay date is, say, 20th May, then the tax pariod is 2, as in \"Month 2\". public int GetTaxPeriod(DateOnly payDate, PayFrequency payFrequency) Parameters payDate DateOnly Pay date to determine tax period for. payFrequency PayFrequency Payment frequency applicable. Returns int Relevant tax period. Exceptions ArgumentException Thrown if the pay date falls outside this tax year. IsValidForYear(CountriesForTaxPurposes) Determines whether the supplied country groupings is valid for this tax year. public bool IsValidForYear(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes One or more CountriesForTaxPurposes values. Returns bool True if the supplied countries parameter is valid for this tax year; false otherwise."
  },
  "api/Payetools.Common.Model.TaxYearEnding.html": {
    "href": "api/Payetools.Common.Model.TaxYearEnding.html",
    "title": "Enum TaxYearEnding | Paytools",
    "keywords": "Enum TaxYearEnding Namespace Payetools.Common.Model Assembly Payetools.Common.dll Enum representing a given tax year based on the last day of the tax year (i.e., 5 April 20xx). public enum TaxYearEnding Extension Methods TaxYearEndingExtensions.YearAsString(TaxYearEnding) Fields Apr5_2019 = 2019 2018-2019 Apr5_2020 = 2020 2019-2020 Apr5_2021 = 2021 2020-2021 Apr5_2022 = 2022 2021-2022 Apr5_2023 = 2023 2022-2023 Apr5_2024 = 2024 2023-2024 MaxValue = 2024 Maximum value supported for TaxYearEnding MinValue = 2019 Minimum value supported for TaxYearEnding Unspecified = 0 No tax year specified Remarks This enumeration is updated each tax year to provide access to the forthcoming tax year."
  },
  "api/Payetools.Common.Model.TaxYearEndingExtensions.html": {
    "href": "api/Payetools.Common.Model.TaxYearEndingExtensions.html",
    "title": "Class TaxYearEndingExtensions | Paytools",
    "keywords": "Class TaxYearEndingExtensions Namespace Payetools.Common.Model Assembly Payetools.Common.dll Extension methods for TaxYearEnding enum. public static class TaxYearEndingExtensions Inheritance object TaxYearEndingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods YearAsString(TaxYearEnding) Converts a TaxYearEnding enumerated value into a string. public static string YearAsString(this TaxYearEnding value) Parameters value TaxYearEnding An instance of TaxYearEnding. Returns string Year as string, e.g., \"2020\", indicating the year that the tax year ends in."
  },
  "api/Payetools.Common.Model.Title.html": {
    "href": "api/Payetools.Common.Model.Title.html",
    "title": "Struct Title | Paytools",
    "keywords": "Struct Title Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents an individual's title (e.g., Mr., Mrs). public readonly struct Title Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks Some ideas on standardisation sourced from https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1112942/Titles__V12_.pdf. As per general Government guidance, no attempt is made to deduce a person's gender from their title. Methods Parse(string) Inspects the supplied title and returns a new Title instance holding either the title supplied, or if it is a standard title (e.g., Mr, Mrs, Miss, etc.) then the standardised form of that title. public static Title? Parse(string title) Parameters title string Externally supplied string value for title. Returns Title? Null if no title provided, a standardised title (e.g., \"Mr\") if a standardised title is provided, or the supplied string otherwise. ToString() Gets the string representation of the Title. public override string ToString() Returns string String representation of title, e.g., \"Mr\", \"Ms\". Operators implicit operator string(Title) Implicit cast from Title to string. public static implicit operator string(Title title) Parameters title Title Title to obtain the string representation of. Returns string"
  },
  "api/Payetools.Common.Model.UkPostcode.html": {
    "href": "api/Payetools.Common.Model.UkPostcode.html",
    "title": "Class UkPostcode | Paytools",
    "keywords": "Class UkPostcode Namespace Payetools.Common.Model Assembly Payetools.Common.dll Represents a UK Postcode. public record UkPostcode : IEquatable<UkPostcode> Inheritance object UkPostcode Implements IEquatable<UkPostcode> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UkPostcode(string) Initialises a new instance of UkPostcode. public UkPostcode(string value) Parameters value string Postcode as string. Operators implicit operator string(UkPostcode) Operator for casting implicitly from a UkPostcode instance to its string equivalent. public static implicit operator string(UkPostcode value) Parameters value UkPostcode An instance of UkPostcode. Returns string"
  },
  "api/Payetools.Common.Serialization.CountriesForTaxPurposesJsonConverter.html": {
    "href": "api/Payetools.Common.Serialization.CountriesForTaxPurposesJsonConverter.html",
    "title": "Class CountriesForTaxPurposesJsonConverter | Paytools",
    "keywords": "Class CountriesForTaxPurposesJsonConverter Namespace Payetools.Common.Serialization Assembly Payetools.Common.dll JSON Converter for the CountriesForTaxPurposes enumeration. When encoded in a JSON payload, values are represented using space separated ISO-3166 format, e.g. \"GB-ENG GB-NIR\". public class CountriesForTaxPurposesJsonConverter : JsonConverter<CountriesForTaxPurposes> Inheritance object JsonConverter JsonConverter<CountriesForTaxPurposes> CountriesForTaxPurposesJsonConverter Inherited Members JsonConverter<CountriesForTaxPurposes>.CanConvert(Type) JsonConverter<CountriesForTaxPurposes>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<CountriesForTaxPurposes>.WriteAsPropertyName(Utf8JsonWriter, CountriesForTaxPurposes, JsonSerializerOptions) JsonConverter<CountriesForTaxPurposes>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a CountriesForTaxPurposes value in ISO-3166 format and converts to the appropriate enum value(s). public override CountriesForTaxPurposes Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns CountriesForTaxPurposes CountriesForTaxPurposes value. Write(Utf8JsonWriter, CountriesForTaxPurposes, JsonSerializerOptions) Writes a CountriesForTaxPurposes enum value or values (as [Flags attribute is present), converted to the appropriate ISO-3166 space separated string format, e.g., \"GB-ENG GB-WLS GB-NIR\". public override void Write(Utf8JsonWriter writer, CountriesForTaxPurposes value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value CountriesForTaxPurposes Enum value(s) to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.Common.Serialization.DateOnlyJsonConverter.html": {
    "href": "api/Payetools.Common.Serialization.DateOnlyJsonConverter.html",
    "title": "Class DateOnlyJsonConverter | Paytools",
    "keywords": "Class DateOnlyJsonConverter Namespace Payetools.Common.Serialization Assembly Payetools.Common.dll JSON Converter for instances of DateOnly types. public class DateOnlyJsonConverter : JsonConverter<DateOnly> Inheritance object JsonConverter JsonConverter<DateOnly> DateOnlyJsonConverter Inherited Members JsonConverter<DateOnly>.CanConvert(Type) JsonConverter<DateOnly>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<DateOnly>.WriteAsPropertyName(Utf8JsonWriter, DateOnly, JsonSerializerOptions) JsonConverter<DateOnly>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads an ISO 8601 format date in string format and converts to the appropriate DateOnly value. public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns DateOnly DateOnly value. Write(Utf8JsonWriter, DateOnly, JsonSerializerOptions) Writes a DateOnly value to the JSON stream in ISO 8601 format date in string format. public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value DateOnly DateOnly value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.Common.Serialization.html": {
    "href": "api/Payetools.Common.Serialization.html",
    "title": "Namespace Payetools.Common.Serialization | Paytools",
    "keywords": "Namespace Payetools.Common.Serialization Classes CountriesForTaxPurposesJsonConverter JSON Converter for the CountriesForTaxPurposes enumeration. When encoded in a JSON payload, values are represented using space separated ISO-3166 format, e.g. \"GB-ENG GB-NIR\". DateOnlyJsonConverter JSON Converter for instances of DateOnly types. PayFrequencyJsonConverter JSON Converter for the PayFrequency enumeration. TaxYearEndingJsonConverter JSON Converter for the TaxYearEnding enumeration."
  },
  "api/Payetools.Common.Serialization.PayFrequencyJsonConverter.html": {
    "href": "api/Payetools.Common.Serialization.PayFrequencyJsonConverter.html",
    "title": "Class PayFrequencyJsonConverter | Paytools",
    "keywords": "Class PayFrequencyJsonConverter Namespace Payetools.Common.Serialization Assembly Payetools.Common.dll JSON Converter for the PayFrequency enumeration. public class PayFrequencyJsonConverter : JsonConverter<PayFrequency> Inheritance object JsonConverter JsonConverter<PayFrequency> PayFrequencyJsonConverter Inherited Members JsonConverter<PayFrequency>.CanConvert(Type) JsonConverter<PayFrequency>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<PayFrequency>.WriteAsPropertyName(Utf8JsonWriter, PayFrequency, JsonSerializerOptions) JsonConverter<PayFrequency>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a PayFrequency enumerated value in string format and converts to the appropriate enum value. public override PayFrequency Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns PayFrequency PayFrequency value. Write(Utf8JsonWriter, PayFrequency, JsonSerializerOptions) Writes a PayFrequency enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, PayFrequency value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value PayFrequency Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.Common.Serialization.TaxYearEndingJsonConverter.html": {
    "href": "api/Payetools.Common.Serialization.TaxYearEndingJsonConverter.html",
    "title": "Class TaxYearEndingJsonConverter | Paytools",
    "keywords": "Class TaxYearEndingJsonConverter Namespace Payetools.Common.Serialization Assembly Payetools.Common.dll JSON Converter for the TaxYearEnding enumeration. public class TaxYearEndingJsonConverter : JsonConverter<TaxYearEnding> Inheritance object JsonConverter JsonConverter<TaxYearEnding> TaxYearEndingJsonConverter Inherited Members JsonConverter<TaxYearEnding>.CanConvert(Type) JsonConverter<TaxYearEnding>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<TaxYearEnding>.WriteAsPropertyName(Utf8JsonWriter, TaxYearEnding, JsonSerializerOptions) JsonConverter<TaxYearEnding>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a TaxYearEnding enumerated value in string format and converts to the appropriate enum value. public override TaxYearEnding Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns TaxYearEnding TaxYearEnding value. Write(Utf8JsonWriter, TaxYearEnding, JsonSerializerOptions) Writes a TaxYearEnding enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, TaxYearEnding value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value TaxYearEnding Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.Employment.Model.HourlyPaidPayStructure.html": {
    "href": "api/Payetools.Employment.Model.HourlyPaidPayStructure.html",
    "title": "Class HourlyPaidPayStructure | Paytools",
    "keywords": "Class HourlyPaidPayStructure Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents the pay structure for hourly paid employees. public record HourlyPaidPayStructure : IEmployeePayStructure, IEquatable<HourlyPaidPayStructure> Inheritance object HourlyPaidPayStructure Implements IEmployeePayStructure IEquatable<HourlyPaidPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; init; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Payetools.Employment.Model.html": {
    "href": "api/Payetools.Employment.Model.html",
    "title": "Namespace Payetools.Employment.Model | Paytools",
    "keywords": "Namespace Payetools.Employment.Model Classes HourlyPaidPayStructure Represents the pay structure for hourly paid employees. NmwHourlyPaidPayStructure Represents an hourly paid pay structure that tracks National Minimum/Living Wage levels. P45FromPreviousEmployment Represents the information from a P45 provided from previous employment. SalariedPayStructure Represents the pay structure for salaried (i.e., annually paid) employees. Structs StudentLoanStatus Struct that holds student loan status information for an employee. Interfaces IDeductionDetails Interface that represents the various types of deduction that can be made from payroll. IDeductionEntry Interface that represents a deduction from payroll. IDeductionHistoryYtd Interface that represents an employee's deductions history for the tax year to date. IEarningsDetails Interface that represents a pay component (e.g., salary, bonus, sick pay, etc.). IEarningsEntry Represents an element of an employee's pay. IEarningsHistoryYtd Interface that represents an employee's earnings history for the tax year to date. IEmployee Interface that represents an employee for payroll purposes. IEmployeePayrollHistoryYtd Interface for types that represent the historical set of information for an employee's payroll for the current tax year. IEmployeePayStructure Interface that represents an employee's pay structure. IEmployer Interface that represents an employer for payroll purposes. IEmployment Interface that represents an employee's employment for payroll purposes. INewStarter Interface that represents a new starter for employment purposes. IPayrollAmount Interface that types should implement to communicate an amount that is either fixed or calculated as a product of quantity in units and per unit rate. IPayrolledBenefit Represents a payrolled benefit. IRecurringDeduction Interface that represents a recurring deduction for an employee. IRecurringEarnings Interface that represents a recurring earnings for an employee. Enums PayRateType Enum representing different pay types, i.e., salaried, hourly paid, etc. PayRateUnits Enum representing different pay units, i.e., per annum, per hour, etc. StarterDeclaration Represents a new employee's starter declaration, if provided. In the case of high earners, the starter declaration may be omitted and the employee put on a 0T tax code rather than a BR or \"emergency tax code\", in order to avoid paying insufficient tax."
  },
  "api/Payetools.Employment.Model.IDeductionDetails.html": {
    "href": "api/Payetools.Employment.Model.IDeductionDetails.html",
    "title": "Interface IDeductionDetails | Paytools",
    "keywords": "Interface IDeductionDetails Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents the various types of deduction that can be made from payroll. public interface IDeductionDetails Properties IsUnderSalaryExchangeArrangement Gets a value indicating whether this type of deduction is made as part of a salary exchange (aka salary sacrifice) arrangement. Note that when this flag is set, ReducesGrossPay, ReducesTaxablePay and ReducesNicablePay will also normally be set to true. bool IsUnderSalaryExchangeArrangement { get; } Property Value bool Remarks This property is primarily included to assist when it is time to show the deduction on the payslip, enabling all salary exchange deductions including pensions to be grouped together. Name Gets the full name of this type of deduction. string Name { get; } Property Value string ReducesGrossPay Gets a value indicating whether this type of deduction reduces the gross pay figure used to calculate take-home . bool ReducesGrossPay { get; } Property Value bool ReducesNicablePay Gets a value indicating whether this type of deduction affects pay for National Insurance purposes. bool ReducesNicablePay { get; } Property Value bool ReducesPensionablePay Gets a value indicating whether this type of deduction affects pay for pension purposes. bool ReducesPensionablePay { get; } Property Value bool ReducesTaxablePay Gets a value indicating whether this type of deduction is applied before or after tax. bool ReducesTaxablePay { get; } Property Value bool ShortName Gets the short name for this type of deduction. string ShortName { get; } Property Value string Units Gets the units for this deduction type, if applicable. Null if not applicable. PayRateUnits? Units { get; } Property Value PayRateUnits?"
  },
  "api/Payetools.Employment.Model.IDeductionEntry.html": {
    "href": "api/Payetools.Employment.Model.IDeductionEntry.html",
    "title": "Interface IDeductionEntry | Paytools",
    "keywords": "Interface IDeductionEntry Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents a deduction from payroll. public interface IDeductionEntry Properties DeductionClassification Gets the type of deduction. IDeductionDetails DeductionClassification { get; } Property Value IDeductionDetails QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total deduction. Optional. decimal? QuantityInUnits { get; } Property Value decimal? TotalDeduction Gets the total deduction applied. decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. Optional. decimal? ValuePerUnit { get; } Property Value decimal?"
  },
  "api/Payetools.Employment.Model.IDeductionHistoryYtd.html": {
    "href": "api/Payetools.Employment.Model.IDeductionHistoryYtd.html",
    "title": "Interface IDeductionHistoryYtd | Paytools",
    "keywords": "Interface IDeductionHistoryYtd Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employee's deductions history for the tax year to date. public interface IDeductionHistoryYtd Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty but usually not. ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry>"
  },
  "api/Payetools.Employment.Model.IEarningsDetails.html": {
    "href": "api/Payetools.Employment.Model.IEarningsDetails.html",
    "title": "Interface IEarningsDetails | Paytools",
    "keywords": "Interface IEarningsDetails Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents a pay component (e.g., salary, bonus, sick pay, etc.). public interface IEarningsDetails Properties Id Gets the unique ID for this pay component. Guid Id { get; } Property Value Guid IsNetToGross Gets a value indicating whether this pay component refers to a net amount that should be \"grossed up\", ensuring the employee receives the net amount in their take-home pay. bool IsNetToGross { get; } Property Value bool IsPensionable Gets a value indicating whether this pay component should be included in the employee's pensionable salary. bool IsPensionable { get; } Property Value bool IsSubjectToNi Gets a value indicating whether this pay component is subject to National Insurance. bool IsSubjectToNi { get; } Property Value bool IsSubjectToTax Gets a value indicating whether this pay component is subject to tax. bool IsSubjectToTax { get; } Property Value bool IsTreatedAsOvertime Gets a value indicating whether this pay component should be treated as overtime for the purposes of average overtime calculations. bool IsTreatedAsOvertime { get; } Property Value bool Name Gets the full name of this pay component. string Name { get; } Property Value string ShortName Gets the short name for this pay component. string ShortName { get; } Property Value string Units Gets the units for this pay component, if applicable. Null if not applicable. PayRateUnits? Units { get; } Property Value PayRateUnits?"
  },
  "api/Payetools.Employment.Model.IEarningsEntry.html": {
    "href": "api/Payetools.Employment.Model.IEarningsEntry.html",
    "title": "Interface IEarningsEntry | Paytools",
    "keywords": "Interface IEarningsEntry Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents an element of an employee's pay. public interface IEarningsEntry Properties EarningsDetails Gets the type of deduction. IEarningsDetails EarningsDetails { get; } Property Value IEarningsDetails QuantityInUnits Gets the quantity of this earnings entry that when multiplied by the ValuePerUnit gives the total earnings. decimal? QuantityInUnits { get; } Property Value decimal? TotalEarnings Gets the total earnings to be applied. decimal TotalEarnings { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total earnings. decimal? ValuePerUnit { get; } Property Value decimal?"
  },
  "api/Payetools.Employment.Model.IEarningsHistoryYtd.html": {
    "href": "api/Payetools.Employment.Model.IEarningsHistoryYtd.html",
    "title": "Interface IEarningsHistoryYtd | Paytools",
    "keywords": "Interface IEarningsHistoryYtd Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employee's earnings history for the tax year to date. public interface IEarningsHistoryYtd Properties Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry>"
  },
  "api/Payetools.Employment.Model.IEmployee.html": {
    "href": "api/Payetools.Employment.Model.IEmployee.html",
    "title": "Interface IEmployee | Paytools",
    "keywords": "Interface IEmployee Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employee for payroll purposes. public interface IEmployee : INamedPerson Inherited Members INamedPerson.Title INamedPerson.FirstName INamedPerson.Initials INamedPerson.MiddleNames INamedPerson.LastName INamedPerson.HasMiddleName INamedPerson.InitialsAsString Properties DateOfBirth Gets the individual's date of birth. DateOnly DateOfBirth { get; init; } Property Value DateOnly EmailAddress Gets or sets the employee's email address, if known. MailAddress? EmailAddress { get; set; } Property Value MailAddress Gender Gets the individual's \"official\" gender as recognised by HMRC for payroll purposes. Gender Gender { get; init; } Property Value Gender NiNumber Gets the individual's National Insurance number. NiNumber NiNumber { get; init; } Property Value NiNumber PostalAddress Gets or sets the employee's postal address. PostalAddress PostalAddress { get; set; } Property Value PostalAddress"
  },
  "api/Payetools.Employment.Model.IEmployeePayrollHistoryYtd.html": {
    "href": "api/Payetools.Employment.Model.IEmployeePayrollHistoryYtd.html",
    "title": "Interface IEmployeePayrollHistoryYtd | Paytools",
    "keywords": "Interface IEmployeePayrollHistoryYtd Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface for types that represent the historical set of information for an employee's payroll for the current tax year. public interface IEmployeePayrollHistoryYtd Extension Methods IEmployeePayrollHistoryYtdExtensions.Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Properties DeductionHistoryYtd Gets the employee's deduction history for the tax year to date. IDeductionHistoryYtd DeductionHistoryYtd { get; } Property Value IDeductionHistoryYtd EarningsHistoryYtd Gets the employee's earnings history for the tax year to date. IEarningsHistoryYtd EarningsHistoryYtd { get; } Property Value IEarningsHistoryYtd EmployeeNiHistoryEntries Gets the National Insurance payment history for the current tax year. Employees may transition between NI categories during the tax year and each NI category's payment record must be retained. NiYtdHistory EmployeeNiHistoryEntries { get; } Property Value NiYtdHistory EmployeePensionContributionsUnderNpaYtd Gets the total employee pension contributions made under a net pay arrangement to date this tax year. decimal EmployeePensionContributionsUnderNpaYtd { get; } Property Value decimal EmployeePensionContributionsUnderRasYtd Gets the total employee pension contributions made under relief at source to date this tax year. decimal EmployeePensionContributionsUnderRasYtd { get; } Property Value decimal EmployerPensionContributionsYtd Gets the total employer pension contributions made to date this tax year. decimal EmployerPensionContributionsYtd { get; } Property Value decimal GraduateLoanRepaymentsYtd Gets the graduate loan deductions made to date this tax year. decimal GraduateLoanRepaymentsYtd { get; } Property Value decimal GrossPayYtd Gets the gross pay paid to date this tax year. decimal GrossPayYtd { get; } Property Value decimal NicablePayYtd Gets the NI-able pay paid to date this tax year. decimal NicablePayYtd { get; } Property Value decimal PayrolledBenefitsYtd Gets the amount accrued against payrolled benefits to date this tax year. decimal PayrolledBenefitsYtd { get; } Property Value decimal SharedParentalPayYtd Gets any statutory parental pay paid to date this tax year. decimal SharedParentalPayYtd { get; } Property Value decimal StatutoryAdoptionPayYtd Gets any statutory adoption pay paid to date this tax year. decimal StatutoryAdoptionPayYtd { get; } Property Value decimal StatutoryMaternityPayYtd Gets any statutory maternity pay paid to date this tax year. decimal StatutoryMaternityPayYtd { get; } Property Value decimal StatutoryParentalBereavementPayYtd Gets any statutory parental bereavement pay paid to date this tax year. decimal StatutoryParentalBereavementPayYtd { get; } Property Value decimal StatutoryPaternityPayYtd Gets any statutory paternity pay paid to date this tax year. decimal StatutoryPaternityPayYtd { get; } Property Value decimal StudentLoanRepaymentsYtd Gets the student loan deductions made to date this tax year. decimal StudentLoanRepaymentsYtd { get; } Property Value decimal TaxablePayYtd Gets the taxable pay paid to date this tax year. decimal TaxablePayYtd { get; } Property Value decimal TaxPaidYtd Gets the income tax paid to date this tax year. decimal TaxPaidYtd { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets the tax that it has not been possible to collect so far this tax year due to the regulatory limit on income tax deductions. decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Payetools.Employment.Model.IEmployeePayStructure.html": {
    "href": "api/Payetools.Employment.Model.IEmployeePayStructure.html",
    "title": "Interface IEmployeePayStructure | Paytools",
    "keywords": "Interface IEmployeePayStructure Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employee's pay structure. public interface IEmployeePayStructure Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. Guid Id { get; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. IEarningsDetails PayComponent { get; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. decimal PayRate { get; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Payetools.Employment.Model.IEmployer.html": {
    "href": "api/Payetools.Employment.Model.IEmployer.html",
    "title": "Interface IEmployer | Paytools",
    "keywords": "Interface IEmployer Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employer for payroll purposes. public interface IEmployer Properties AccountsOfficeReference Gets the employer's HMRC Accounts Office reference, if known. HmrcAccountsOfficeReference? AccountsOfficeReference { get; } Property Value HmrcAccountsOfficeReference BusinessLegalName Gets the legal name of the business, including any legally required suffix, e.g., Ltd, LLP, etc. string BusinessLegalName { get; } Property Value string HmrcPayeReference Gets the employer's HMRC PAYE reference, if known. HmrcPayeReference? HmrcPayeReference { get; } Property Value HmrcPayeReference?"
  },
  "api/Payetools.Employment.Model.IEmployment.html": {
    "href": "api/Payetools.Employment.Model.IEmployment.html",
    "title": "Interface IEmployment | Paytools",
    "keywords": "Interface IEmployment Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents an employee's employment for payroll purposes. public interface IEmployment Properties DefaultPensionContributionLevels Gets the default pension contributions to apply in each pay period, unless overridden by employee or employer instruction for that pay period. IPensionContributionLevels DefaultPensionContributionLevels { get; } Property Value IPensionContributionLevels DirectorsNiCalculationMethod Gets the method for calculating National Insurance contributions. Applicable only for directors; null otherwise. DirectorsNiCalculationMethod? DirectorsNiCalculationMethod { get; } Property Value DirectorsNiCalculationMethod? EmploymentEndDate Gets the employee's official employment termination date, i.e., their last working day. Null if the employee is still employed. DateOnly? EmploymentEndDate { get; } Property Value DateOnly? EmploymentStartDate Gets the employee's official employment start date. DateOnly EmploymentStartDate { get; } Property Value DateOnly IsDirector Gets a value indicating whether the employee is a company director. bool IsDirector { get; } Property Value bool NiCategory Gets the employee's NI category. NiCategory NiCategory { get; } Property Value NiCategory PayrolledBenefits Gets the list of payrolled benefits that apply to this employment. ImmutableList<IPayrolledBenefit> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefit> PayrollHistoryYtd Gets the key figures from the employee's payroll history for the tax year to date. ref IEmployeePayrollHistoryYtd PayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd PayrollId Gets the employee's payroll ID, as reported to HMRC. Sometimes known as \"works number\". PayrollId PayrollId { get; } Property Value PayrollId PensionScheme Gets the pension scheme that the employee is a member of. Null if they are not a member of any scheme. IPensionScheme? PensionScheme { get; } Property Value IPensionScheme PrimaryPayStructure Gets the employee's primary pay structure. IEmployeePayStructure PrimaryPayStructure { get; } Property Value IEmployeePayStructure RecurringDeductions Gets the list of recurring deductions for an employee. ImmutableList<IRecurringDeduction> RecurringDeductions { get; } Property Value ImmutableList<IRecurringDeduction> RecurringEarnings Gets the list of recurring earnings elements for an employee. ImmutableList<IRecurringEarnings> RecurringEarnings { get; } Property Value ImmutableList<IRecurringEarnings> StudentLoanStatus Gets the employee's current student loan status. StudentLoanStatus? StudentLoanStatus { get; } Property Value StudentLoanStatus? TaxCode Gets the employee's tax code. TaxCode TaxCode { get; } Property Value TaxCode"
  },
  "api/Payetools.Employment.Model.INewStarter.html": {
    "href": "api/Payetools.Employment.Model.INewStarter.html",
    "title": "Interface INewStarter | Paytools",
    "keywords": "Interface INewStarter Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents a new starter for employment purposes. public interface INewStarter : IEmployee, INamedPerson Inherited Members IEmployee.NiNumber IEmployee.DateOfBirth IEmployee.Gender IEmployee.EmailAddress IEmployee.PostalAddress INamedPerson.Title INamedPerson.FirstName INamedPerson.Initials INamedPerson.MiddleNames INamedPerson.LastName INamedPerson.HasMiddleName INamedPerson.InitialsAsString Properties GraduateLoanDeductionNeeded Gets or sets a value indicating whether post-graduate loan deductions should continue. bool GraduateLoanDeductionNeeded { get; set; } Property Value bool StarterDeclaration Gets or sets the employee's starter declaration; null if it was not possible to obtain a starter declaration from the employee. StarterDeclaration? StarterDeclaration { get; set; } Property Value StarterDeclaration? StudentLoanDeductionNeeded Gets or sets a value indicating whether student loan deductions should continue. bool StudentLoanDeductionNeeded { get; set; } Property Value bool Remarks As a P45 from a previous employer does not indicate the student loan type, it may be necessary to request the employee's student loan plan type separately. StudentLoanType Gets or sets any applicable student loan type, if known. (See StudentLoanDeductionNeeded). StudentLoanType? StudentLoanType { get; set; } Property Value StudentLoanType?"
  },
  "api/Payetools.Employment.Model.IPayrollAmount.html": {
    "href": "api/Payetools.Employment.Model.IPayrollAmount.html",
    "title": "Interface IPayrollAmount | Paytools",
    "keywords": "Interface IPayrollAmount Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that types should implement to communicate an amount that is either fixed or calculated as a product of quantity in units and per unit rate. public interface IPayrollAmount Properties FixedAmount Gets the fixed amount of the deduction, if that is specified in place of quantity and value per unit. Used for absolute amounts. decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total amount. decimal? QuantityInUnits { get; init; } Property Value decimal? TotalDeduction Gets the total amount to be applied (default implementation). decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Payetools.Employment.Model.IPayrolledBenefit.html": {
    "href": "api/Payetools.Employment.Model.IPayrolledBenefit.html",
    "title": "Interface IPayrolledBenefit | Paytools",
    "keywords": "Interface IPayrolledBenefit Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents a payrolled benefit. public interface IPayrolledBenefit"
  },
  "api/Payetools.Employment.Model.IRecurringDeduction.html": {
    "href": "api/Payetools.Employment.Model.IRecurringDeduction.html",
    "title": "Interface IRecurringDeduction | Paytools",
    "keywords": "Interface IRecurringDeduction Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents a recurring deduction for an employee. public interface IRecurringDeduction : IApplicableFromTill, IPayrollAmount Inherited Members IApplicableFromTill.ApplicableFrom IApplicableFromTill.ApplicableTill IPayrollAmount.QuantityInUnits IPayrollAmount.ValuePerUnit IPayrollAmount.FixedAmount IPayrollAmount.TotalDeduction Properties DeductionType Gets the deduction type for this recurring deduction. IDeductionDetails DeductionType { get; } Property Value IDeductionDetails"
  },
  "api/Payetools.Employment.Model.IRecurringEarnings.html": {
    "href": "api/Payetools.Employment.Model.IRecurringEarnings.html",
    "title": "Interface IRecurringEarnings | Paytools",
    "keywords": "Interface IRecurringEarnings Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Interface that represents a recurring earnings for an employee. public interface IRecurringEarnings : IApplicableFromTill, IPayrollAmount Inherited Members IApplicableFromTill.ApplicableFrom IApplicableFromTill.ApplicableTill IPayrollAmount.QuantityInUnits IPayrollAmount.ValuePerUnit IPayrollAmount.FixedAmount IPayrollAmount.TotalDeduction Properties PayComponent Gets the pay component for this recurring earnings. IEarningsDetails PayComponent { get; } Property Value IEarningsDetails"
  },
  "api/Payetools.Employment.Model.NmwHourlyPaidPayStructure.html": {
    "href": "api/Payetools.Employment.Model.NmwHourlyPaidPayStructure.html",
    "title": "Class NmwHourlyPaidPayStructure | Paytools",
    "keywords": "Class NmwHourlyPaidPayStructure Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents an hourly paid pay structure that tracks National Minimum/Living Wage levels. public record NmwHourlyPaidPayStructure : IEmployeePayStructure, IEquatable<NmwHourlyPaidPayStructure> Inheritance object NmwHourlyPaidPayStructure Implements IEmployeePayStructure IEquatable<NmwHourlyPaidPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType Methods UpdateNmw(INmwEvaluator, PayReferencePeriod, DateOnly) Updates the PayRate based on the applicable NMW/NLW wage rate for the employee using their age at the start of the pay period. public void UpdateNmw(INmwEvaluator nmwEvaluator, PayReferencePeriod payPeriod, DateOnly dateOfBirth) Parameters nmwEvaluator INmwEvaluator Instance of INmwEvaluator used to obtain the appropriate rate. payPeriod PayReferencePeriod Pay period pertaining. dateOfBirth DateOnly Employee's date of birth."
  },
  "api/Payetools.Employment.Model.P45FromPreviousEmployment.html": {
    "href": "api/Payetools.Employment.Model.P45FromPreviousEmployment.html",
    "title": "Class P45FromPreviousEmployment | Paytools",
    "keywords": "Class P45FromPreviousEmployment Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents the information from a P45 provided from previous employment. public record P45FromPreviousEmployment : IEquatable<P45FromPreviousEmployment> Inheritance object P45FromPreviousEmployment Implements IEquatable<P45FromPreviousEmployment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Payetools.Employment.Model.PayRateType.html": {
    "href": "api/Payetools.Employment.Model.PayRateType.html",
    "title": "Enum PayRateType | Paytools",
    "keywords": "Enum PayRateType Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Enum representing different pay types, i.e., salaried, hourly paid, etc. public enum PayRateType Fields HourlyPaid = 1 Hourly pay type for hourly-paid employees. Other = 2 All pay rate type other than salaried and hourly paid. Salaried = 0 Per annum pay type for salaried employees."
  },
  "api/Payetools.Employment.Model.PayRateUnits.html": {
    "href": "api/Payetools.Employment.Model.PayRateUnits.html",
    "title": "Enum PayRateUnits | Paytools",
    "keywords": "Enum PayRateUnits Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Enum representing different pay units, i.e., per annum, per hour, etc. public enum PayRateUnits Fields PerAnnum = 0 Per annum pay type for salaried employees. PerDay = 2 Daily rate, typically for salaried employees with regular working patterns. PerHour = 1 Hourly pay type for hourly-paid employees."
  },
  "api/Payetools.Employment.Model.SalariedPayStructure.html": {
    "href": "api/Payetools.Employment.Model.SalariedPayStructure.html",
    "title": "Class SalariedPayStructure | Paytools",
    "keywords": "Class SalariedPayStructure Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents the pay structure for salaried (i.e., annually paid) employees. public record SalariedPayStructure : IEmployeePayStructure, IEquatable<SalariedPayStructure> Inheritance object SalariedPayStructure Implements IEmployeePayStructure IEquatable<SalariedPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; init; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Payetools.Employment.Model.StarterDeclaration.html": {
    "href": "api/Payetools.Employment.Model.StarterDeclaration.html",
    "title": "Enum StarterDeclaration | Paytools",
    "keywords": "Enum StarterDeclaration Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Represents a new employee's starter declaration, if provided. In the case of high earners, the starter declaration may be omitted and the employee put on a 0T tax code rather than a BR or \"emergency tax code\", in order to avoid paying insufficient tax. public enum StarterDeclaration Fields A = 0 HMRC: \"This is my first job since 6 April and since the 6 April I have not received payments from any of the following: Jobseeker's Allowance Employment and Support Allowance Incapacity Benefit \". B = 1 HMRC: \"Since 6 April I have had another job but I do not have a P45. And/or since the 6 April I have received payments from any of the following: Jobseeker's Allowance Employment and Support Allowance Incapacity Benefit \". C = 2 have another job and/or I am in receipt of a State, workplace or private pension. HighEarnerNotRecorded = 3 No Starter Declaration captured as the employee is a high earner."
  },
  "api/Payetools.Employment.Model.StudentLoanStatus.html": {
    "href": "api/Payetools.Employment.Model.StudentLoanStatus.html",
    "title": "Struct StudentLoanStatus | Paytools",
    "keywords": "Struct StudentLoanStatus Namespace Payetools.Employment.Model Assembly Payetools.Employment.dll Struct that holds student loan status information for an employee. public readonly struct StudentLoanStatus Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasPostGradLoan Gets a value indicating whether the employee has an outstanding post-graduate loan. public bool HasPostGradLoan { get; init; } Property Value bool StudentLoanType Gets the student loan applicable for an employee. Null if the employee does not have an outstanding student loan. public StudentLoanType? StudentLoanType { get; init; } Property Value StudentLoanType?"
  },
  "api/Payetools.html": {
    "href": "api/Payetools.html",
    "title": "Namespace Payetools | Paytools",
    "keywords": "Namespace Payetools Payetools is the top-level namespace. It contains the following domain-specific namespaces, the names of which are largely self-explanatory. Payetools.Employment.Model Payetools.IncomeTax Payetools.NationalInsurance Payetools.NationalMinimumWage Payetools.Payroll Payetools.Pensions Payetools.ReferenceData Payetools.StudentLoans"
  },
  "api/Payetools.IncomeTax.html": {
    "href": "api/Payetools.IncomeTax.html",
    "title": "Namespace Payetools.IncomeTax | Paytools",
    "keywords": "Namespace Payetools.IncomeTax PayeTools.IncomeTax contains all income tax calculations. Note Some income tax-related entities are found in the Payetools.Common.Model namespace, including TaxCode and CountriesForTaxPurposes. This is to minimise dependencies when building modules that do not require calculation capabilities, e.g. data entry screens. Payetools.IncomeTax.Model Payetools.IncomeTax.ReferenceData Classes TaxCalculator Represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. TaxCalculator implements ITaxCalculator; access to tax calculators is through the TaxCalculatorFactory; in normal use, TaxCalculators are not be created directly. A TaxCalculator is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. TaxCalculatorFactory Factory to generate ITaxCalculator implementations that are for a given pay date and specific tax regime. Interfaces ITaxCalculator Interface that represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. Access to tax calculators is through the TaxCalculatorFactory; in normal use, implementations of ITaxCalculator are not be created directly. An ITaxCalculator instance is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. ITaxCalculatorFactory Interface that represents factories that can generate ITaxCalculator implementations."
  },
  "api/Payetools.IncomeTax.ITaxCalculator.html": {
    "href": "api/Payetools.IncomeTax.ITaxCalculator.html",
    "title": "Interface ITaxCalculator | Paytools",
    "keywords": "Interface ITaxCalculator Namespace Payetools.IncomeTax Assembly Payetools.IncomeTax.dll Interface that represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. Access to tax calculators is through the TaxCalculatorFactory; in normal use, implementations of ITaxCalculator are not be created directly. An ITaxCalculator instance is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. public interface ITaxCalculator Properties PayFrequency Gets the pay frequency for this calculator. PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidths Gets the set of pro-rata tax bandwidths in use for a given tax year, tax regime and tax period. TaxPeriodBandwidthSet TaxBandwidths { get; } Property Value TaxPeriodBandwidthSet TaxPeriod Gets the relevant tax period for this calculator. int TaxPeriod { get; } Property Value int TaxPeriodCount Gets the number of tax periods within a given tax year, based on the supplied pay frequency. int TaxPeriodCount { get; } Property Value int TaxYear Gets the tax year that this calculator pertains to. TaxYear TaxYear { get; } Property Value TaxYear Methods Calculate(decimal, decimal, TaxCode, decimal, decimal, decimal, out ITaxCalculationResult) Calculates the tax due based on tax code, total taxable salary and total tax paid to date. void Calculate(decimal totalTaxableSalaryInPeriod, decimal benefitsInKind, TaxCode taxCode, decimal taxableSalaryYearToDate, decimal taxPaidYearToDate, decimal taxUnpaidDueToRegulatoryLimit, out ITaxCalculationResult result) Parameters totalTaxableSalaryInPeriod decimal Taxable pay in period (i.e., gross less pre-tax deductions but including benefits in kind). benefitsInKind decimal Benefits in kind element of the taxable pay for the period. taxCode TaxCode Individual's tax code. taxableSalaryYearToDate decimal Total year to date taxable salary up to and including the end of the previous tax period. taxPaidYearToDate decimal Total year to date tax paid up to and including the end of the previous tax period. taxUnpaidDueToRegulatoryLimit decimal Any tax outstanding due to the effect of the regulatory limit. result ITaxCalculationResult An ITaxCalculationResult containing the tax now due plus related information from the tax calculation."
  },
  "api/Payetools.IncomeTax.ITaxCalculatorFactory.html": {
    "href": "api/Payetools.IncomeTax.ITaxCalculatorFactory.html",
    "title": "Interface ITaxCalculatorFactory | Paytools",
    "keywords": "Interface ITaxCalculatorFactory Namespace Payetools.IncomeTax Assembly Payetools.IncomeTax.dll Interface that represents factories that can generate ITaxCalculator implementations. public interface ITaxCalculatorFactory Methods GetCalculator(CountriesForTaxPurposes, PayDate) Gets an instance of an ITaxCalculator for the specified tax regime and pay date. ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, PayDate payDate) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. payDate PayDate Pay date. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime and pay date."
  },
  "api/Payetools.IncomeTax.Model.html": {
    "href": "api/Payetools.IncomeTax.Model.html",
    "title": "Namespace Payetools.IncomeTax.Model | Paytools",
    "keywords": "Namespace Payetools.IncomeTax.Model Structs TaxCalculationResult Represents the result of an income tax calculation for an individual, providing the tax due plus a rich set of information about how the result was achieved. Interfaces ITaxCalculationResult Interface that represents the result of an income tax calculation. The purpose of this interface (and its implementations) is to provide a richer set of data about the calculation than just the final tax due number. This can be helpful in employee support situations in particular."
  },
  "api/Payetools.IncomeTax.Model.ITaxCalculationResult.html": {
    "href": "api/Payetools.IncomeTax.Model.ITaxCalculationResult.html",
    "title": "Interface ITaxCalculationResult | Paytools",
    "keywords": "Interface ITaxCalculationResult Namespace Payetools.IncomeTax.Model Assembly Payetools.IncomeTax.dll Interface that represents the result of an income tax calculation. The purpose of this interface (and its implementations) is to provide a richer set of data about the calculation than just the final tax due number. This can be helpful in employee support situations in particular. public interface ITaxCalculationResult Properties Calculator Gets the calculator (implementation of ITaxCalculator) used to perform this calculation. ITaxCalculator Calculator { get; } Property Value ITaxCalculator FinalTaxDue Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This figure takes account of both the effect of the regulatory limit and the effect of any unpaid taxes due to the effect of the regulatory limit in previous periods. decimal FinalTaxDue { get; } Property Value decimal HighestApplicableTaxBandIndex Gets the numeric index of the highest tax band used in the calculation. int HighestApplicableTaxBandIndex { get; } Property Value int IncomeAtHighestApplicableBand Gets the total income to date that falls within the highest tax band used in the calculation. decimal IncomeAtHighestApplicableBand { get; } Property Value decimal PreviousPeriodSalaryYearToDate Gets the year to date taxable salary paid up to and including the end of the previous period. decimal PreviousPeriodSalaryYearToDate { get; } Property Value decimal PreviousPeriodTaxPaidYearToDate Gets the year to date tax paid up to and including the end of the previous period. decimal PreviousPeriodTaxPaidYearToDate { get; } Property Value decimal TaxableSalaryAfterTaxFreePay Gets the taxable salary used in this calculation. This is the gross salary less any tax-free pay (or plus any additional notional pay in the case of K tax codes). decimal TaxableSalaryAfterTaxFreePay { get; } Property Value decimal TaxAtHighestApplicableBand Gets the total tax due for income to date that falls within the highest tax band used in the calculation. decimal TaxAtHighestApplicableBand { get; } Property Value decimal TaxCode Gets the TaxCode used in this calculation. TaxCode TaxCode { get; } Property Value TaxCode TaxDueBeforeApplicationOfRegulatoryLimit Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This is before considering the effect of regulatory limits. decimal TaxDueBeforeApplicationOfRegulatoryLimit { get; } Property Value decimal TaxFreePayToEndOfPeriod Gets the tax-free pay applicable to the end of the period, as given by the specified tax code. May be negative in the case of K tax codes. decimal TaxFreePayToEndOfPeriod { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets any unpaid tax due to the regulatory limit. TODO: implement this properly. decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Payetools.IncomeTax.Model.TaxCalculationResult.html": {
    "href": "api/Payetools.IncomeTax.Model.TaxCalculationResult.html",
    "title": "Struct TaxCalculationResult | Paytools",
    "keywords": "Struct TaxCalculationResult Namespace Payetools.IncomeTax.Model Assembly Payetools.IncomeTax.dll Represents the result of an income tax calculation for an individual, providing the tax due plus a rich set of information about how the result was achieved. public readonly struct TaxCalculationResult : ITaxCalculationResult Implements ITaxCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TaxCalculationResult(ITaxCalculator, TaxCode, decimal, decimal, decimal, decimal, int, decimal, decimal, decimal, decimal, decimal) Initialises a new instance of TaxCalculationResult using the supplied parameters. public TaxCalculationResult(ITaxCalculator calculator, TaxCode taxCode, decimal taxFreePayToEndOfPeriod, decimal taxableSalary, decimal previousPeriodSalaryYearToDate, decimal previousPeriodTaxPaidYearToDate, int highestApplicableTaxBandIndex, decimal incomeAtHighestApplicableBand, decimal taxAtHighestApplicableBand, decimal taxUnpaidDueToRegulatoryLimit, decimal taxDueBeforeRegulatoryLimitEffects, decimal finalTaxDue) Parameters calculator ITaxCalculator Calculator (implementation of ITaxCalculator) used to perform this calculation. taxCode TaxCode TaxCode used in this calculation. taxFreePayToEndOfPeriod decimal Tax-free pay applicable to the end of the period, derived from the specified tax code. taxableSalary decimal Taxable salary used in this calculation. previousPeriodSalaryYearToDate decimal Year to date taxable salary paid up to and including the end of the previous period. previousPeriodTaxPaidYearToDate decimal Year to date tax paid up to and including the end of the previous period. highestApplicableTaxBandIndex int Numeric index of the highest tax band (TaxPeriodBandwidthEntry) used in the calculation. incomeAtHighestApplicableBand decimal Total income to date that falls within the highest tax band used in the calculation. taxAtHighestApplicableBand decimal Total tax due for income to date that falls within the highest tax band used in the calculation. taxUnpaidDueToRegulatoryLimit decimal Previous period tax unpaid due to regulatory limit. taxDueBeforeRegulatoryLimitEffects decimal Tax due before considering the effects of regulatory limits. finalTaxDue decimal Tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period, accounting for the effects of regulatory limits, both from this period and any prior periods. Properties Calculator Gets the calculator (implementation of ITaxCalculator) used to perform this calculation. public ITaxCalculator Calculator { get; } Property Value ITaxCalculator FinalTaxDue Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This figure takes account of both the effect of the regulatory limit and the effect of any unpaid taxes due to the effect of the regulatory limit in previous periods. public decimal FinalTaxDue { get; } Property Value decimal HighestApplicableTaxBandIndex Gets the numberic index of the highest tax band used in the calculation. public int HighestApplicableTaxBandIndex { get; } Property Value int IncomeAtHighestApplicableBand Gets the total income to date that falls within the highest tax band used in the calculation. public decimal IncomeAtHighestApplicableBand { get; } Property Value decimal PreviousPeriodSalaryYearToDate Gets the year to date taxable salary paid up to and including the end of the previous period. public decimal PreviousPeriodSalaryYearToDate { get; } Property Value decimal PreviousPeriodTaxPaidYearToDate Gets the year to date tax paid up to and including the end of the previous period. public decimal PreviousPeriodTaxPaidYearToDate { get; } Property Value decimal TaxableSalaryAfterTaxFreePay Gets the taxable salary used in this calculation. This is the gross salary less any tax-free pay (or plus any additional notional pay in the case of K tax codes). public decimal TaxableSalaryAfterTaxFreePay { get; } Property Value decimal TaxAtHighestApplicableBand Gets the total tax due for income to date that falls within the highest tax band used in the calculation. public decimal TaxAtHighestApplicableBand { get; } Property Value decimal TaxCode Gets the TaxCode used in this calculation. public TaxCode TaxCode { get; } Property Value TaxCode TaxDueBeforeApplicationOfRegulatoryLimit Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This is before considering the effect of regulatory limits. public decimal TaxDueBeforeApplicationOfRegulatoryLimit { get; } Property Value decimal TaxFreePayToEndOfPeriod Gets the tax-free pay applicable to the end of the period, as given by the specified tax code. May be negative in the case of K tax codes. public decimal TaxFreePayToEndOfPeriod { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets any unpaid tax due to the regulatory limit. TODO: implement this properly. public decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Payetools.IncomeTax.ReferenceData.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.html",
    "title": "Namespace Payetools.IncomeTax.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.IncomeTax.ReferenceData Classes TaxBandwidthEntry Represents a single tax bandwidth entry for a full tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. This information constitutes a single TaxBandwidthEntry. TaxBandwidthSet Represents a set of tax bandwidths for a given tax regime for a given tax year. TaxPeriodBandwidthEntry Represents a single tax bandwidth entry for a portion of a tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. In simple terms, this bandwidth is distributed evenly across the tax year, so in tax period 1 for a monthly payroll, the bandwidth would be £2,097 / 12 = £174.75. All other parameters are adjusted accordingly in line with the tax period. This information constitutes a single TaxPeriodBandwidthEntry. TaxPeriodBandwidthSet Represents a set of tax bandwidths for a given tax regime for a given tax year, pro-rated for a given tax period. For Example, for weekly payrolls and relating to tax period one, the cumulative thresholds and tax values are calculated as 1/52th of the annual amount. Interfaces ITaxReferenceDataProvider Interface that represents a provider of tax band information."
  },
  "api/Payetools.IncomeTax.ReferenceData.ITaxReferenceDataProvider.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.ITaxReferenceDataProvider.html",
    "title": "Interface ITaxReferenceDataProvider | Paytools",
    "keywords": "Interface ITaxReferenceDataProvider Namespace Payetools.IncomeTax.ReferenceData Assembly Payetools.IncomeTax.dll Interface that represents a provider of tax band information. public interface ITaxReferenceDataProvider Methods GetTaxBandsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Retrieves the tax bands for a given tax year in the form of a dictionary (ReadOnlyDictionary<TKey, TValue>) keyed on tax regime, i.e., CountriesForTaxPurposes. ReadOnlyDictionary<CountriesForTaxPurposes, TaxBandwidthSet> GetTaxBandsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Desired tax year. payFrequency PayFrequency Pay frequency pertaining. Used in conjunction with the taxPeriod parameter to determine the applicable date (in case of in-year tax changes). taxPeriod int Tax period, e.g., 1 for month 1. Currently ignored on the assumption that in-year tax changes are not anticipated but provided for future . Returns ReadOnlyDictionary<CountriesForTaxPurposes, TaxBandwidthSet> ReadOnlyDictionary of TaxBandwidthSet's keyed on tax regime. Remarks Although ReadOnlyDictionary is not guaranteed to be thread-safe, in the current implementation the underlying Dictionary is guaranteed not to change, so thread-safety can be assumed."
  },
  "api/Payetools.IncomeTax.ReferenceData.TaxBandwidthEntry.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.TaxBandwidthEntry.html",
    "title": "Class TaxBandwidthEntry | Paytools",
    "keywords": "Class TaxBandwidthEntry Namespace Payetools.IncomeTax.ReferenceData Assembly Payetools.IncomeTax.dll Represents a single tax bandwidth entry for a full tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. This information constitutes a single TaxBandwidthEntry. public record TaxBandwidthEntry : IEquatable<TaxBandwidthEntry> Inheritance object TaxBandwidthEntry Implements IEquatable<TaxBandwidthEntry> Derived TaxPeriodBandwidthEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxBandwidthEntry(string, decimal, decimal?, bool, TaxBandwidthEntry?) Initialises a new instance of TaxBandwidthEntry with the supplied parameters. public TaxBandwidthEntry(string bandDescription, decimal taxBandRate, decimal? taxBandTo, bool isTopRate, TaxBandwidthEntry? entryBelow) Parameters bandDescription string Descriptive text associated with this TaxBandwidthEntry. taxBandRate decimal Applicable tax rate for this TaxBandwidthEntry. taxBandTo decimal? Upper threshold for this TaxBandwidthEntry. isTopRate bool True if this is the top TaxBandwidthEntry for the tax regime in question. entryBelow TaxBandwidthEntry TaxBandwidthEntry immediately below this TaxBandwidthEntry, if applicable; null otherwise. Properties Bandwidth Gets the bandwidth of this TaxBandwidthEntry, i.e., the upper threshold less any lower threshold. public decimal Bandwidth { get; } Property Value decimal BandWidthEntryBelow Gets the TaxBandwidthEntry that is immediately below this TaxBandwidthEntry, or null if this is the lowest TaxBandwidthEntry for this tax regime. public TaxBandwidthEntry? BandWidthEntryBelow { get; } Property Value TaxBandwidthEntry CumulativeBandwidth Gets or sets the cumulative bandwidth of this TaxBandwidthEntry, i.e., the sum of this bandwidth and all bandwidths below. public decimal CumulativeBandwidth { get; protected set; } Property Value decimal CumulativeTax Gets or sets the tax due in a single tax year for this TaxBandwidthEntry and all bandwidths below, assuming they are all fully used. public decimal CumulativeTax { get; protected set; } Property Value decimal Description Gets the descriptive text associated with this TaxBandwidthEntry. public string Description { get; } Property Value string IsTopBand Gets a value indicating whether this TaxBandwidthEntry represents the top band of tax for this tax regime. public bool IsTopBand { get; } Property Value bool Rate Gets the applicable tax rate for this TaxBandwidthEntry. public decimal Rate { get; } Property Value decimal TaxForBand Gets or sets the tax due in a single tax year for just this TaxBandwidthEntry if it is fully used. public decimal TaxForBand { get; protected set; } Property Value decimal"
  },
  "api/Payetools.IncomeTax.ReferenceData.TaxBandwidthSet.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.TaxBandwidthSet.html",
    "title": "Class TaxBandwidthSet | Paytools",
    "keywords": "Class TaxBandwidthSet Namespace Payetools.IncomeTax.ReferenceData Assembly Payetools.IncomeTax.dll Represents a set of tax bandwidths for a given tax regime for a given tax year. public record TaxBandwidthSet : IEquatable<TaxBandwidthSet> Inheritance object TaxBandwidthSet Implements IEquatable<TaxBandwidthSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxBandwidthSet(TaxBandwidthEntry[]) Initialises a new instance of TaxBandwidthSet. public TaxBandwidthSet(TaxBandwidthEntry[] taxBandwidthEntries) Parameters taxBandwidthEntries TaxBandwidthEntry[] Array of TaxBandwidthEntry's for this tax year/regime combination. Properties TaxBandwidthEntries Gets the set of TaxBandwidthEntry's for this TaxBandwidthSet as an array. public TaxBandwidthEntry[] TaxBandwidthEntries { get; } Property Value TaxBandwidthEntry[]"
  },
  "api/Payetools.IncomeTax.ReferenceData.TaxPeriodBandwidthEntry.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.TaxPeriodBandwidthEntry.html",
    "title": "Class TaxPeriodBandwidthEntry | Paytools",
    "keywords": "Class TaxPeriodBandwidthEntry Namespace Payetools.IncomeTax.ReferenceData Assembly Payetools.IncomeTax.dll Represents a single tax bandwidth entry for a portion of a tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. In simple terms, this bandwidth is distributed evenly across the tax year, so in tax period 1 for a monthly payroll, the bandwidth would be £2,097 / 12 = £174.75. All other parameters are adjusted accordingly in line with the tax period. This information constitutes a single TaxPeriodBandwidthEntry. public record TaxPeriodBandwidthEntry : TaxBandwidthEntry, IEquatable<TaxBandwidthEntry>, IEquatable<TaxPeriodBandwidthEntry> Inheritance object TaxBandwidthEntry TaxPeriodBandwidthEntry Implements IEquatable<TaxBandwidthEntry> IEquatable<TaxPeriodBandwidthEntry> Inherited Members TaxBandwidthEntry.Description TaxBandwidthEntry.Bandwidth TaxBandwidthEntry.CumulativeBandwidth TaxBandwidthEntry.Rate TaxBandwidthEntry.TaxForBand TaxBandwidthEntry.CumulativeTax TaxBandwidthEntry.IsTopBand object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxPeriodBandwidthEntry(int, TaxBandwidthEntry, PayFrequency, int, TaxPeriodBandwidthEntry?) Initialises a new instance of TaxPeriodBandwidthEntry with the supplied parameters. public TaxPeriodBandwidthEntry(int index, TaxBandwidthEntry annualEntry, PayFrequency payFrequency, int taxPeriod, TaxPeriodBandwidthEntry? periodEntryBelow) Parameters index int Zero-based numeric index of this TaxPeriodBandwidthEntry within its TaxPeriodBandwidthSet. annualEntry TaxBandwidthEntry Corresponding annual tax bandwidth entry, i.e., TaxBandwidthEntry. payFrequency PayFrequency Pay frequency for this TaxPeriodBandwidthEntry. taxPeriod int Tax period, e.g., 1-12 for monthly. periodEntryBelow TaxPeriodBandwidthEntry TaxPeriodBandwidthEntry immediately below this one, or null if this is the lowest band. Properties BandWidthEntryBelow Gets the TaxPeriodBandwidthEntry that is immediately below this TaxPeriodBandwidthEntry, or null if this is the lowest TaxPeriodBandwidthEntry for this tax regime. public TaxPeriodBandwidthEntry? BandWidthEntryBelow { get; } Property Value TaxPeriodBandwidthEntry EntryIndex Gets the numeric index of this TaxPeriodBandwidthEntry within its TaxPeriodBandwidthSet. Zero-based, with 0 being the lowest tax band. public int EntryIndex { get; } Property Value int Period1CumulativeBandwidth Gets the cumulative bandwidth value for tax period 1. public decimal Period1CumulativeBandwidth { get; } Property Value decimal Period1CumulativeTax Gets the cumulative tax value for tax period 1. public decimal Period1CumulativeTax { get; } Property Value decimal"
  },
  "api/Payetools.IncomeTax.ReferenceData.TaxPeriodBandwidthSet.html": {
    "href": "api/Payetools.IncomeTax.ReferenceData.TaxPeriodBandwidthSet.html",
    "title": "Class TaxPeriodBandwidthSet | Paytools",
    "keywords": "Class TaxPeriodBandwidthSet Namespace Payetools.IncomeTax.ReferenceData Assembly Payetools.IncomeTax.dll Represents a set of tax bandwidths for a given tax regime for a given tax year, pro-rated for a given tax period. For Example, for weekly payrolls and relating to tax period one, the cumulative thresholds and tax values are calculated as 1/52th of the annual amount. public record TaxPeriodBandwidthSet : IEquatable<TaxPeriodBandwidthSet> Inheritance object TaxPeriodBandwidthSet Implements IEquatable<TaxPeriodBandwidthSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxPeriodBandwidthSet(TaxBandwidthSet, PayFrequency, int) Initialises a new instance of TaxPeriodBandwidthSet with the supplied parameters. public TaxPeriodBandwidthSet(TaxBandwidthSet annualTaxBandwidthSet, PayFrequency payFrequency, int taxPeriod) Parameters annualTaxBandwidthSet TaxBandwidthSet Tax bandwidth set for the full tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Relevant tax period. Properties PayFrequency Gets the applicable pay frequency for this TaxPeriodBandwidthSet. public PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidthEntries Gets the set of tax bandwidth entries for the given tax regime, tax year and tax period/pay frequency combination, as an array of TaxPeriodBandwidthEntry's. public TaxPeriodBandwidthEntry[] TaxBandwidthEntries { get; } Property Value TaxPeriodBandwidthEntry[] TaxPeriod Gets the relevant tax period for this TaxPeriodBandwidthSet. public int TaxPeriod { get; } Property Value int"
  },
  "api/Payetools.IncomeTax.TaxCalculator.html": {
    "href": "api/Payetools.IncomeTax.TaxCalculator.html",
    "title": "Class TaxCalculator | Paytools",
    "keywords": "Class TaxCalculator Namespace Payetools.IncomeTax Assembly Payetools.IncomeTax.dll Represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. TaxCalculator implements ITaxCalculator; access to tax calculators is through the TaxCalculatorFactory; in normal use, TaxCalculators are not be created directly. A TaxCalculator is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. public class TaxCalculator : ITaxCalculator Inheritance object TaxCalculator Implements ITaxCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PayFrequency Gets the pay frequency for this calculator. public PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidths Gets the set of pro-rata tax bandwidths in use for a given tax year, tax regime and tax period. public TaxPeriodBandwidthSet TaxBandwidths { get; } Property Value TaxPeriodBandwidthSet TaxPeriod Gets the relevant tax period for this calculator. public int TaxPeriod { get; } Property Value int TaxPeriodCount Gets the number of tax periods within a given tax year, based on the supplied pay frequency. public int TaxPeriodCount { get; } Property Value int TaxYear Gets the tax year that this calculator pertains to. public TaxYear TaxYear { get; } Property Value TaxYear Methods Calculate(decimal, decimal, TaxCode, decimal, decimal, decimal, out ITaxCalculationResult) Calculates the tax due based on tax code, total taxable salary and total tax paid to date. public void Calculate(decimal totalTaxableSalaryInPeriod, decimal benefitsInKind, TaxCode taxCode, decimal taxableSalaryYearToDate, decimal taxPaidYearToDate, decimal taxUnpaidDueToRegulatoryLimit, out ITaxCalculationResult result) Parameters totalTaxableSalaryInPeriod decimal Taxable pay in period (i.e., gross less pre-tax deductions but including benefits in kind). benefitsInKind decimal Benefits in kind element of the taxable pay for the period. taxCode TaxCode Individual's tax code. This is required in order to 1) determine the tax-free pay and 2) determine the appropriate calculation to perform. Note that an income tax calculator is specify to a given tax regime; an ArgumentException is thrown if the tax code is inconsistent with the tax regime for this calculator. taxableSalaryYearToDate decimal Total year to date taxable salary up to and including the end of the previous tax period. taxPaidYearToDate decimal Total year to date tax paid up to and including the end of the previous tax period. taxUnpaidDueToRegulatoryLimit decimal Any tax outstanding due to the effect of the regulatory limit. result ITaxCalculationResult An ITaxCalculationResult containing the tax now due plus related information from the tax calculation. Exceptions ArgumentException Thrown if the tax code supplied is not consistent with the tax regime for this tax calculator. InvalidReferenceDataException Thrown if it is not possible to find an appropriate tax bandwidth in the reference data for this tax regime."
  },
  "api/Payetools.IncomeTax.TaxCalculatorFactory.html": {
    "href": "api/Payetools.IncomeTax.TaxCalculatorFactory.html",
    "title": "Class TaxCalculatorFactory | Paytools",
    "keywords": "Class TaxCalculatorFactory Namespace Payetools.IncomeTax Assembly Payetools.IncomeTax.dll Factory to generate ITaxCalculator implementations that are for a given pay date and specific tax regime. public class TaxCalculatorFactory : ITaxCalculatorFactory Inheritance object TaxCalculatorFactory Implements ITaxCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxCalculatorFactory(ITaxReferenceDataProvider) Initialises a new instance of TaxCalculatorFactory using the supplied tax band provider. public TaxCalculatorFactory(ITaxReferenceDataProvider taxBandProvider) Parameters taxBandProvider ITaxReferenceDataProvider Tax band provider for providing access to tax bands for given tax years. Methods GetCalculator(CountriesForTaxPurposes, PayDate) Gets an instance of an ITaxCalculator for the specified tax regime and pay date. public ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, PayDate payDate) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. payDate PayDate Pay date. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime and pay date. Exceptions InvalidReferenceDataException Thrown if it was not possible to find a tax bandwidth set for the specified tax regime and tax year combination. GetCalculator(CountriesForTaxPurposes, TaxYear, PayFrequency, int) Gets an instance of an ITaxCalculator for the specified tax regime, tax year, tax period and pay frequency. public ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. taxYear TaxYear Relevant tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime, tax year and period and pay frequency. Exceptions InvalidReferenceDataException Thrown if it was not possible to find a tax bandwidth set for the specified tax regime and tax year combination."
  },
  "api/Payetools.NationalInsurance.Extensions.DecimalNiRoundingExtensions.html": {
    "href": "api/Payetools.NationalInsurance.Extensions.DecimalNiRoundingExtensions.html",
    "title": "Class DecimalNiRoundingExtensions | Paytools",
    "keywords": "Class DecimalNiRoundingExtensions Namespace Payetools.NationalInsurance.Extensions Assembly Payetools.NationalInsurance.dll Extension methods for decimal instances to provide specialised rounding as per HMRC documentation. public static class DecimalNiRoundingExtensions Inheritance object DecimalNiRoundingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NiRound(decimal) Rounds a decimal value based on the value of the third digit after the decimal point. If the value of the third digit is 6 or above, the number is rounded up to the nearest whole pence; if the value of the third digit is 5 or below, the number is rounded down. public static decimal NiRound(this decimal value) Parameters value decimal decimal value to be rounded. Returns decimal Rounded decimal value. Remarks This extension method is included to support the specific rounding required for NI calculations as set out in the 'National Insurance contributions (NICs) guidance for software developers' document published by HMRC. Exceptions ArgumentOutOfRangeException Thrown if a negative number is supplied for value."
  },
  "api/Payetools.NationalInsurance.Extensions.html": {
    "href": "api/Payetools.NationalInsurance.Extensions.html",
    "title": "Namespace Payetools.NationalInsurance.Extensions | Paytools",
    "keywords": "Namespace Payetools.NationalInsurance.Extensions Classes DecimalNiRoundingExtensions Extension methods for decimal instances to provide specialised rounding as per HMRC documentation."
  },
  "api/Payetools.NationalInsurance.html": {
    "href": "api/Payetools.NationalInsurance.html",
    "title": "Namespace Payetools.NationalInsurance | Paytools",
    "keywords": "Namespace Payetools.NationalInsurance Payetools.NationalInsurance contains all National Insurance calculations. Note Some National Insurance-related entities may be found in the Payetools.Common namespace. This is to minimise dependencies when building modules that do not require calculation capabilities, e.g. data entry screens. Payetools.NationalInsurance.Extensions Payetools.NationalInsurance.Model Payetools.NationalInsurance.ReferenceData Classes NiCalculator Represents a National Insurance calculator that implements INiCalculator. NiCalculatorFactory Factory to generate INiCalculatorFactory implementations that are for a given pay date. Interfaces INiCalculator Interface for types that provide National Insurance calculations. INiCalculatorFactory Interface that represents factories that can generate INiCalculator implementations."
  },
  "api/Payetools.NationalInsurance.INiCalculator.html": {
    "href": "api/Payetools.NationalInsurance.INiCalculator.html",
    "title": "Interface INiCalculator | Paytools",
    "keywords": "Interface INiCalculator Namespace Payetools.NationalInsurance Assembly Payetools.NationalInsurance.dll Interface for types that provide National Insurance calculations. public interface INiCalculator Methods Calculate(NiCategory, decimal, out INiCalculationResult) Calculates the National Insurance contributions required for an employee for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. void Calculate(NiCategory niCategory, decimal nicableEarningsInPeriod, out INiCalculationResult result) Parameters niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal NI-able salary for the period. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult. CalculateDirectors(DirectorsNiCalculationMethod, NiCategory, decimal, decimal, decimal, decimal, decimal?, out INiCalculationResult) Calculates the National Insurance contributions required for a company director for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. void CalculateDirectors(DirectorsNiCalculationMethod calculationMethod, NiCategory niCategory, decimal nicableEarningsInPeriod, decimal nicableEarningsYearToDate, decimal employeesNiPaidYearToDate, decimal employersNiPaidYearToDate, decimal? proRataFactor, out INiCalculationResult result) Parameters calculationMethod DirectorsNiCalculationMethod Calculation method to use. niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal Ni-able earnings in this period. nicableEarningsYearToDate decimal NI-able salary to date. employeesNiPaidYearToDate decimal Total employees NI paid so far this tax year up to and including the end of the previous period. employersNiPaidYearToDate decimal Total employers NI paid so far this tax year up to and including the end of the previous period. proRataFactor decimal? Factor to apply to annual thresholds when the employee starts being a director part way through the tax year. Null if not applicable. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult."
  },
  "api/Payetools.NationalInsurance.INiCalculatorFactory.html": {
    "href": "api/Payetools.NationalInsurance.INiCalculatorFactory.html",
    "title": "Interface INiCalculatorFactory | Paytools",
    "keywords": "Interface INiCalculatorFactory Namespace Payetools.NationalInsurance Assembly Payetools.NationalInsurance.dll Interface that represents factories that can generate INiCalculator implementations. public interface INiCalculatorFactory Methods GetCalculator(PayDate, int, bool) Gets an instance of an INiCalculator for the specified pay date. INiCalculator GetCalculator(PayDate payDate, int numberOfTaxPeriods = 1, bool applyWeek53Treatment = false) Parameters payDate PayDate Applicable pay date. numberOfTaxPeriods int Number of tax periods applicable, usually 1. Defaults to 1. applyWeek53Treatment bool Flag that indicates whether to apply \"week 53\" treatment, i.e., where there are 53 weeks in a tax year (or 27 periods in a two-weekly pay cycle, etc.). Must be false for monthly, quarterly and annual payrolls. Optional, defaulting to false. Returns INiCalculator Instance of INiCalculator for the specified tax regime and pay date."
  },
  "api/Payetools.NationalInsurance.Model.DirectorsNiCalculationMethod.html": {
    "href": "api/Payetools.NationalInsurance.Model.DirectorsNiCalculationMethod.html",
    "title": "Enum DirectorsNiCalculationMethod | Paytools",
    "keywords": "Enum DirectorsNiCalculationMethod Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Represents the method of director's NI calculation to be applied when calculating National Insurance contributions for a director. public enum DirectorsNiCalculationMethod Fields AlternativeMethod = 1 Alternativee method; common for directors who are paid regularly. StandardAnnualisedEarningsMethod = 0 Standard annualised earnings method; common for directors who are paid irregularly."
  },
  "api/Payetools.NationalInsurance.Model.EmployeeNiHistoryEntry.html": {
    "href": "api/Payetools.NationalInsurance.Model.EmployeeNiHistoryEntry.html",
    "title": "Struct EmployeeNiHistoryEntry | Paytools",
    "keywords": "Struct EmployeeNiHistoryEntry Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. public readonly struct EmployeeNiHistoryEntry : IEmployeeNiHistoryEntry Implements IEmployeeNiHistoryEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors EmployeeNiHistoryEntry(NiCategory, NiEarningsBreakdown, decimal, decimal, decimal, decimal) Initialises a new instance of EmployeeNiHistoryEntry. public EmployeeNiHistoryEntry(NiCategory niCategoryPertaining, NiEarningsBreakdown niEarningsBreakdown, decimal grossNicableEarnings, decimal employeeContribution, decimal employerContribution, decimal totalContribution) Parameters niCategoryPertaining NiCategory NI category for this record. niEarningsBreakdown NiEarningsBreakdown NI earnings breakdown for this record. grossNicableEarnings decimal Gross Nicable earnings for this record. employeeContribution decimal Employee contribution for this record. employerContribution decimal Employer contribution for this record. totalContribution decimal Total (i.e., employee + employer) contribution for this record. EmployeeNiHistoryEntry(in INiCalculationResult) Initialises a new EmployeeNiHistoryEntry from the supplied calculation result. public EmployeeNiHistoryEntry(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation result. Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveFUSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. public decimal EarningsAboveLELUpToAndIncludingST { get; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. public decimal EarningsAbovePTUpToAndIncludingFUST { get; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. public decimal EarningsAboveSTUpToAndIncludingPT { get; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. public decimal EarningsAboveUEL { get; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. public decimal EarningsUpToAndIncludingLEL { get; } Property Value decimal EmployeeContribution Gets the total employee contribution made during the duration of this record. public decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution made during the duration of this record. public decimal EmployerContribution { get; } Property Value decimal GrossNicableEarnings Gets the gross NI-able earnings applicable for the duration of this record. public decimal GrossNicableEarnings { get; } Property Value decimal NiCategoryPertaining Gets the National Insurance category letter pertaining to this record. public NiCategory NiCategoryPertaining { get; } Property Value NiCategory TotalContribution Gets the total contribution (employee + employer) made during the duration of this record. public decimal TotalContribution { get; } Property Value decimal Methods Add(in INiCalculationResult) Adds the results of an NI calculation to the current history and returns a new instance of IEmployeeNiHistoryEntry with the results applied. public IEmployeeNiHistoryEntry Add(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation results to add to this history entry. Returns IEmployeeNiHistoryEntry New instance of IEmployeeNiHistoryEntry with the NI calculation result applied."
  },
  "api/Payetools.NationalInsurance.Model.html": {
    "href": "api/Payetools.NationalInsurance.Model.html",
    "title": "Namespace Payetools.NationalInsurance.Model | Paytools",
    "keywords": "Namespace Payetools.NationalInsurance.Model Classes NationalInsuranceThresholdExtensions Extension methods for instances of NiThresholdType. NiYtdHistory Represents an employee's year to date National Insurance history. Structs EmployeeNiHistoryEntry Represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. NiCalculationResult Represents a National Insurance calculation result. NiEarningsBreakdown Represents the breakdown of earnings against each of the relevant National Insurance thresholds. Interfaces IEmployeeNiHistoryEntry Interface that represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. INiCalculationResult Interface for types representing National Insurance calculation results. Enums DirectorsNiCalculationMethod Represents the method of director's NI calculation to be applied when calculating National Insurance contributions for a director. NiThresholdType Enum enumerating the various National Insurance threshold levels."
  },
  "api/Payetools.NationalInsurance.Model.IEmployeeNiHistoryEntry.html": {
    "href": "api/Payetools.NationalInsurance.Model.IEmployeeNiHistoryEntry.html",
    "title": "Interface IEmployeeNiHistoryEntry | Paytools",
    "keywords": "Interface IEmployeeNiHistoryEntry Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Interface that represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. public interface IEmployeeNiHistoryEntry Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. decimal EarningsAboveFUSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. decimal EarningsAboveLELUpToAndIncludingST { get; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. decimal EarningsAbovePTUpToAndIncludingFUST { get; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. decimal EarningsAboveSTUpToAndIncludingPT { get; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. decimal EarningsAboveSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. decimal EarningsAboveUEL { get; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. decimal EarningsUpToAndIncludingLEL { get; } Property Value decimal EmployeeContribution Gets the total employee contribution made during the duration of this record. decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution made during the duration of this record. decimal EmployerContribution { get; } Property Value decimal GrossNicableEarnings Gets the gross NI-able earnings applicable for the duration of this record. decimal GrossNicableEarnings { get; } Property Value decimal NiCategoryPertaining Gets the National Insurance category letter pertaining to this record. NiCategory NiCategoryPertaining { get; } Property Value NiCategory TotalContribution Gets the total contribution (employee + employer) made during the duration of this record. decimal TotalContribution { get; } Property Value decimal Methods Add(in INiCalculationResult) Adds the results of an NI calculation to the current history and returns a new instance of IEmployeeNiHistoryEntry with the results applied. IEmployeeNiHistoryEntry Add(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation results to add to this history entry. Returns IEmployeeNiHistoryEntry New instance of IEmployeeNiHistoryEntry with the NI calculation result applied."
  },
  "api/Payetools.NationalInsurance.Model.INiCalculationResult.html": {
    "href": "api/Payetools.NationalInsurance.Model.INiCalculationResult.html",
    "title": "Interface INiCalculationResult | Paytools",
    "keywords": "Interface INiCalculationResult Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Interface for types representing National Insurance calculation results. public interface INiCalculationResult Properties EarningsBreakdown Gets the breakdown of earnings across each of the different National Insurance thresholds. NiEarningsBreakdown EarningsBreakdown { get; } Property Value NiEarningsBreakdown EmployeeContribution Gets the total employee contribution due as a result of this calculation. decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution due as a result of this calculation. decimal EmployerContribution { get; } Property Value decimal NicablePay Gets the gross pay for NI purposes (\"Nicable pay\") used in this calculation. decimal NicablePay { get; } Property Value decimal NiCategory Gets the NI category used for this calculation. NiCategory NiCategory { get; } Property Value NiCategory NoRecordingRequiredIndicator Gets a value indicating whether the results of this calculation need to be reported to HMRC. bool NoRecordingRequiredIndicator { get; } Property Value bool RatesUsed Gets the rates used for this calculation. INiCategoryRatesEntry RatesUsed { get; } Property Value INiCategoryRatesEntry ThresholdsUsed Gets the set of thresholds used for this calculation. These thresholds are adjusted to match the length of the pay period. INiThresholdSet ThresholdsUsed { get; } Property Value INiThresholdSet TotalContribution Gets the total contribution due (employee + employer) as a result of this calculation. decimal TotalContribution { get; } Property Value decimal"
  },
  "api/Payetools.NationalInsurance.Model.NationalInsuranceThresholdExtensions.html": {
    "href": "api/Payetools.NationalInsurance.Model.NationalInsuranceThresholdExtensions.html",
    "title": "Class NationalInsuranceThresholdExtensions | Paytools",
    "keywords": "Class NationalInsuranceThresholdExtensions Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Extension methods for instances of NiThresholdType. public static class NationalInsuranceThresholdExtensions Inheritance object NationalInsuranceThresholdExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFullName(NiThresholdType) Gets the full name of the threshold as a string. public static string GetFullName(this NiThresholdType thresholdType) Parameters thresholdType NiThresholdType NiThresholdType value. Returns string Full name of the threshold as a string, e.g., \"Lower Earnings Limit\". Exceptions ArgumentException Thrown if the NiThresholdType value supplied is unrecognised. GetIndex(NiThresholdType) Gets the zero-based index of the supplied NiThresholdType. Used when retrieving thresholds from arrays or lists who elements are ordered the same as this enum. public static int GetIndex(this NiThresholdType threshold) Parameters threshold NiThresholdType NiThresholdType value. Returns int Zero-based index of this NiThresholdType."
  },
  "api/Payetools.NationalInsurance.Model.NiCalculationResult.html": {
    "href": "api/Payetools.NationalInsurance.Model.NiCalculationResult.html",
    "title": "Struct NiCalculationResult | Paytools",
    "keywords": "Struct NiCalculationResult Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Represents a National Insurance calculation result. public readonly struct NiCalculationResult : INiCalculationResult Implements INiCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NiCalculationResult(NiCategory, decimal, INiCategoryRatesEntry, INiThresholdSet, NiEarningsBreakdown, decimal, decimal, decimal?) Initialises a new instance of NiCalculationResult with the supplied values. public NiCalculationResult(NiCategory category, decimal nicablePay, INiCategoryRatesEntry ratesUsed, INiThresholdSet thresholdsUsed, NiEarningsBreakdown earningsBreakdown, decimal employeeContribution, decimal employerContribution, decimal? totalContribution = null) Parameters category NiCategory NI category used for this calculation. nicablePay decimal Gross pay for NI purposes (\"Nicable pay\") used in this calculation. ratesUsed INiCategoryRatesEntry Rates used for this calculation. thresholdsUsed INiThresholdSet Thresholds used for this calculation. earningsBreakdown NiEarningsBreakdown Breakdown of earnings across each of the different National Insurance thresholds. employeeContribution decimal Total employee contribution due as a result of this calculation. employerContribution decimal Total employer contribution due as a result of this calculation. totalContribution decimal? Total contribution due (employee + employer) as a result of this calculation. Properties EarningsBreakdown Gets the breakdown of earnings across each of the different National Insurance thresholds. public NiEarningsBreakdown EarningsBreakdown { get; } Property Value NiEarningsBreakdown EmployeeContribution Gets the total employee contribution due as a result of this calculation. public decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution due as a result of this calculation. public decimal EmployerContribution { get; } Property Value decimal NicablePay Gets the gross pay for NI purposes (\"Nicable pay\") used in this calculation. public decimal NicablePay { get; } Property Value decimal NiCategory Gets the NI category used for this calculation. public NiCategory NiCategory { get; } Property Value NiCategory NoRecordingRequired Gets a static value representing an empty result with the NoRecordingRequiredIndicator set to true. public static NiCalculationResult NoRecordingRequired { get; } Property Value NiCalculationResult NoRecordingRequiredIndicator Gets a value indicating whether the results of this calculation need to be reported to HMRC. public bool NoRecordingRequiredIndicator { get; init; } Property Value bool RatesUsed Gets the rates used for this calculation. public INiCategoryRatesEntry RatesUsed { get; } Property Value INiCategoryRatesEntry ThresholdsUsed Gets the set of thresholds used for this calculation. These thresholds are adjusted to match the length of the pay period. public INiThresholdSet ThresholdsUsed { get; } Property Value INiThresholdSet TotalContribution Gets the total contribution due (employee + employer) as a result of this calculation. public decimal TotalContribution { get; } Property Value decimal Methods ToString() Gets the string representation of this calculation result. public override string ToString() Returns string String representation of this calculation result."
  },
  "api/Payetools.NationalInsurance.Model.NiEarningsBreakdown.html": {
    "href": "api/Payetools.NationalInsurance.Model.NiEarningsBreakdown.html",
    "title": "Struct NiEarningsBreakdown | Paytools",
    "keywords": "Struct NiEarningsBreakdown Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Represents the breakdown of earnings against each of the relevant National Insurance thresholds. public struct NiEarningsBreakdown Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveFUSTUpToAndIncludingUEL { readonly get; init; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. public decimal EarningsAboveLELUpToAndIncludingST { readonly get; init; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. public decimal EarningsAbovePTUpToAndIncludingFUST { readonly get; init; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. public decimal EarningsAboveSTUpToAndIncludingPT { readonly get; init; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveSTUpToAndIncludingUEL { readonly get; init; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. public decimal EarningsAboveUEL { readonly get; init; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. public decimal EarningsUpToAndIncludingLEL { readonly get; init; } Property Value decimal Methods Add(in NiEarningsBreakdown) Adds the supplied breakdown to the current state and returns a new instance of NiEarningsBreakdown with the updated values. public NiEarningsBreakdown Add(in NiEarningsBreakdown addedBreakdown) Parameters addedBreakdown NiEarningsBreakdown NI breakdown to be added. Returns NiEarningsBreakdown Combined breakdown as a new NiEarningsBreakdown instance."
  },
  "api/Payetools.NationalInsurance.Model.NiThresholdType.html": {
    "href": "api/Payetools.NationalInsurance.Model.NiThresholdType.html",
    "title": "Enum NiThresholdType | Paytools",
    "keywords": "Enum NiThresholdType Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Enum enumerating the various National Insurance threshold levels. public enum NiThresholdType Extension Methods NationalInsuranceThresholdExtensions.GetFullName(NiThresholdType) NationalInsuranceThresholdExtensions.GetIndex(NiThresholdType) Fields AUST = 5 Apprentice Upper Secondary Threshold Count = 9 Number of elements in enum DPT = 8 Directors Primary Threshold (if applicable) FUST = 3 Freeport Upper Secondary Threshold LEL = 0 Lower Earnings Limit PT = 1 Primary Threshold ST = 2 Secondary Threshold UEL = 7 Upper Earnings Limit UST = 4 Upper Secondary Threshold VUST = 6 Veterans Upper Secondary Threshold"
  },
  "api/Payetools.NationalInsurance.Model.NiYtdHistory.html": {
    "href": "api/Payetools.NationalInsurance.Model.NiYtdHistory.html",
    "title": "Class NiYtdHistory | Paytools",
    "keywords": "Class NiYtdHistory Namespace Payetools.NationalInsurance.Model Assembly Payetools.NationalInsurance.dll Represents an employee's year to date National Insurance history. public record NiYtdHistory : IEquatable<NiYtdHistory> Inheritance object NiYtdHistory Implements IEquatable<NiYtdHistory> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiYtdHistory(in INiCalculationResult) Initialises a new instance of NiYtdHistory with the supplied NI calculation result. This constructor is intended to be used for the first time a payrun is run during the tax year. public NiYtdHistory(in INiCalculationResult initialNiCalculationResult) Parameters initialNiCalculationResult INiCalculationResult NI calculation result for the first payrun of the tax year for a given employee. NiYtdHistory(in ImmutableList<IEmployeeNiHistoryEntry>) Initialises a new instance of NiYtdHistory. public NiYtdHistory(in ImmutableList<IEmployeeNiHistoryEntry> entries) Parameters entries ImmutableList<IEmployeeNiHistoryEntry> NI history entries for the tax year to date. Methods Add(in INiCalculationResult) Returns a new instance of NiYtdHistory with the previous history updated by the latest payrun result. Where the most recent entry in the history matches the current NI category, that entry is updated, but otherwise a new history entry is created and appended. public NiYtdHistory Add(in INiCalculationResult latestNiCalculationResult) Parameters latestNiCalculationResult INiCalculationResult Result of this payrun's NI calculation. Returns NiYtdHistory A new instance of NiYtdHistory with the previous history updated by the latest payrun result. GetNiYtdTotals() Gets the totals of employee and employer NI contributions paid to date across all entries. public (decimal employeeTotal, decimal employerTotal) GetNiYtdTotals() Returns (decimal employeeTotal, decimal employerTotal) Totals of employee and employer NI contributions paid tear to date."
  },
  "api/Payetools.NationalInsurance.NiCalculator.html": {
    "href": "api/Payetools.NationalInsurance.NiCalculator.html",
    "title": "Class NiCalculator | Paytools",
    "keywords": "Class NiCalculator Namespace Payetools.NationalInsurance Assembly Payetools.NationalInsurance.dll Represents a National Insurance calculator that implements INiCalculator. public class NiCalculator : INiCalculator Inheritance object NiCalculator Implements INiCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCalculator(INiThresholdSet, INiPeriodThresholdSet, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>, bool) Initialises a new NiCalculator with the supplied thresholds and rates for the period. public NiCalculator(INiThresholdSet niAnnualThresholds, INiPeriodThresholdSet niPeriodThresholds, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> niRateEntriesForRegularEmployees, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> niDirectorsRateEntries, bool isLastPayPeriodInTaxYear = false) Parameters niAnnualThresholds INiThresholdSet NI threshold set for the full tax year applicable to this NI calculator. niPeriodThresholds INiPeriodThresholdSet NI threshold set for the tax period applicable to this NI calculator. niRateEntriesForRegularEmployees ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> NI rates for the tax period applicable to non-directors for this NI calculator. niDirectorsRateEntries ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> NI rates for the tax period applicable to directors for this NI calculator. isLastPayPeriodInTaxYear bool Flag indicating whether this calculator is being used to calculate NI for the last pay period of the tax year, which is required for directors' NI. Optional, defaulted to false. Methods Calculate(NiCategory, decimal, out INiCalculationResult) Calculates the National Insurance contributions required for an employee for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. public void Calculate(NiCategory niCategory, decimal nicableEarningsInPeriod, out INiCalculationResult result) Parameters niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal NI-able salary for the period. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult. CalculateDirectors(DirectorsNiCalculationMethod, NiCategory, decimal, decimal, decimal, decimal, decimal?, out INiCalculationResult) Calculates the National Insurance contributions required for a company director for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. public void CalculateDirectors(DirectorsNiCalculationMethod calculationMethod, NiCategory niCategory, decimal nicableEarningsInPeriod, decimal nicableEarningsYearToDate, decimal employeesNiPaidYearToDate, decimal employersNiPaidYearToDate, decimal? proRataFactor, out INiCalculationResult result) Parameters calculationMethod DirectorsNiCalculationMethod Calculation method to use. niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal Ni-able earnings in this period. nicableEarningsYearToDate decimal NI-able salary for the period. employeesNiPaidYearToDate decimal Total employees NI paid so far this tax year up to and including the end of the previous period. employersNiPaidYearToDate decimal Total employers NI paid so far this tax year up to and including the end of the previous period. proRataFactor decimal? Factor to apply to annual thresholds when the employee starts being a director part way through the tax year. Null if not applicable. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult."
  },
  "api/Payetools.NationalInsurance.NiCalculatorFactory.html": {
    "href": "api/Payetools.NationalInsurance.NiCalculatorFactory.html",
    "title": "Class NiCalculatorFactory | Paytools",
    "keywords": "Class NiCalculatorFactory Namespace Payetools.NationalInsurance Assembly Payetools.NationalInsurance.dll Factory to generate INiCalculatorFactory implementations that are for a given pay date. public class NiCalculatorFactory : INiCalculatorFactory Inheritance object NiCalculatorFactory Implements INiCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCalculatorFactory(INiReferenceDataProvider) Initialises a new instance of NiCalculatorFactory with the supplied INiReferenceDataProvider. public NiCalculatorFactory(INiReferenceDataProvider niReferenceDataProvider) Parameters niReferenceDataProvider INiReferenceDataProvider Reference data provider used to seed new NI calculators. Methods GetCalculator(PayDate, int, bool) Gets a new INiCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. public INiCalculator GetCalculator(PayDate payDate, int numberOfTaxPeriods = 1, bool applyWeek53Treatment = false) Parameters payDate PayDate Applicable pay date. numberOfTaxPeriods int Number of tax periods applicable, usually 1. Defaults to 1. applyWeek53Treatment bool Flag that indicates whether to apply \"week 53\" treatment, i.e., where there are 53 weeks in a tax year (or 27 periods in a two-weekly pay cycle, etc.). Must be false for monthly, quarterly and annual payrolls. Optional, defaulting to false. Returns INiCalculator A new calculator instance."
  },
  "api/Payetools.NationalInsurance.ReferenceData.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.html",
    "title": "Namespace Payetools.NationalInsurance.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.NationalInsurance.ReferenceData Classes NiPeriodThresholdEntry Represents a specific National Insurance threshold (e.g., LEL, UEL) adjusted for a specific pay frequency and number of periods, as NI is calculated based on the appropriate fraction of the applicable annual threshold. NiPeriodThresholdSet Represents a set of NI thresholds that have been adjusted to a proportion of the tax year. NiThresholdEntry Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. NiThresholdSet Represents a set of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. Interfaces INiCategoryRatesEntry Interface for types that detail the various HMRC-published National Insurance threshold levels. INiPeriodThresholdSet Interface that represents a set of NI thresholds that have been adjusted to a proportion of the tax year. INiReferenceDataProvider Interface that classes implement in order to provide access to National Insurance reference data, i.e., rates and thresholds. INiThresholdEntry Interface for types that provide access to a given NI threshold value. INiThresholdSet Interface for types that represent a list of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. The list isn't specifically ordered; the items within the list provide their own mapping to NiThresholdType values."
  },
  "api/Payetools.NationalInsurance.ReferenceData.INiCategoryRatesEntry.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.INiCategoryRatesEntry.html",
    "title": "Interface INiCategoryRatesEntry | Paytools",
    "keywords": "Interface INiCategoryRatesEntry Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Interface for types that detail the various HMRC-published National Insurance threshold levels. public interface INiCategoryRatesEntry Properties Category Gets the applicable National Insurance Category. NiCategory Category { get; } Property Value NiCategory EmployeeRateAboveUEL Gets the employee rate for balance of earnings above upper earnings limit. decimal EmployeeRateAboveUEL { get; } Property Value decimal EmployeeRatePTToUEL Gets the employee rate for earnings above the primary threshold up to and including upper earnings limit. decimal EmployeeRatePTToUEL { get; } Property Value decimal EmployeeRateToPT Gets the employee rate for earnings at or above lower earnings limit up to and including primary threshold. decimal EmployeeRateToPT { get; } Property Value decimal EmployerRateAboveUEL Gets the employer rate for balance of earnings above upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. decimal EmployerRateAboveUEL { get; } Property Value decimal EmployerRateFUSTtoUEL Gets the employer rate for earnings above Freeport upper secondary threshold up to and including upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. decimal EmployerRateFUSTtoUEL { get; } Property Value decimal EmployerRateLELtoST Gets the employer rate for earnings at or above lower earnings limit up to and including secondary threshold. decimal EmployerRateLELtoST { get; } Property Value decimal EmployerRateSTtoFUST Gets the employer rate for earnings above secondary threshold up to and including Freeport upper secondary threshold. decimal EmployerRateSTtoFUST { get; } Property Value decimal"
  },
  "api/Payetools.NationalInsurance.ReferenceData.INiPeriodThresholdSet.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.INiPeriodThresholdSet.html",
    "title": "Interface INiPeriodThresholdSet | Paytools",
    "keywords": "Interface INiPeriodThresholdSet Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Interface that represents a set of NI thresholds that have been adjusted to a proportion of the tax year. public interface INiPeriodThresholdSet : INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable Inherited Members INiThresholdSet.this[int] INiThresholdSet.Count INiThresholdSet.GetThreshold(NiThresholdType) IEnumerable<INiThresholdEntry>.GetEnumerator() Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Methods GetThreshold1(NiThresholdType) Gets the modified threshold for the period (as distinct from the value returned by GetThreshold1(NiThresholdType)) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. decimal GetThreshold1(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type."
  },
  "api/Payetools.NationalInsurance.ReferenceData.INiReferenceDataProvider.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.INiReferenceDataProvider.html",
    "title": "Interface INiReferenceDataProvider | Paytools",
    "keywords": "Interface INiReferenceDataProvider Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Interface that classes implement in order to provide access to National Insurance reference data, i.e., rates and thresholds. public interface INiReferenceDataProvider Methods GetDirectorsNiRatesForPayDate(PayDate) Gets a read-only dictionary that maps NiCategory values to the set of rates to be applied for the specified pay date, for directors. (For most tax years, this method returns null, but if there have been in-year changes, specific directors' rates may apply.) ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> GetDirectorsNiRatesForPayDate(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> Read-only dictionary that maps NiCategory values to the appropriate set of rates for the specified point in time. If specific rates apply for directors, theses are returned, otherwise the regular employee/employer rates are returned. GetNiRatesForPayDate(PayDate) Gets a read-only dictionary that maps NiCategory values to the set of rates to be applied for the specified pay date. ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> GetNiRatesForPayDate(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> Read-only dictionary that maps NiCategory values to the appropriate set of rates for the specified point in time. GetNiThresholdsForPayDate(PayDate) Gets the NI thresholds for the specified pay date. INiThresholdSet GetNiThresholdsForPayDate(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns INiThresholdSet An instance of INiThresholdSet containing the thresholds for the specified point in time."
  },
  "api/Payetools.NationalInsurance.ReferenceData.INiThresholdEntry.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.INiThresholdEntry.html",
    "title": "Interface INiThresholdEntry | Paytools",
    "keywords": "Interface INiThresholdEntry Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Interface for types that provide access to a given NI threshold value. public interface INiThresholdEntry Properties ThresholdType Gets the type of threshold this instance pertains to. NiThresholdType ThresholdType { get; } Property Value NiThresholdType ThresholdValuePerYear Gets the per annum value of the threshold. decimal ThresholdValuePerYear { get; } Property Value decimal"
  },
  "api/Payetools.NationalInsurance.ReferenceData.INiThresholdSet.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.INiThresholdSet.html",
    "title": "Interface INiThresholdSet | Paytools",
    "keywords": "Interface INiThresholdSet Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Interface for types that represent a list of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. The list isn't specifically ordered; the items within the list provide their own mapping to NiThresholdType values. public interface INiThresholdSet : IEnumerable<INiThresholdEntry>, IEnumerable Inherited Members IEnumerable<INiThresholdEntry>.GetEnumerator() Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Properties Count Gets the number of threshold value this threshold set contains. int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetThreshold(NiThresholdType) Gets the annual threshold for the period for the specified threshold type. decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Annual threshold value applicable to threshold type."
  },
  "api/Payetools.NationalInsurance.ReferenceData.NiPeriodThresholdEntry.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.NiPeriodThresholdEntry.html",
    "title": "Class NiPeriodThresholdEntry | Paytools",
    "keywords": "Class NiPeriodThresholdEntry Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Represents a specific National Insurance threshold (e.g., LEL, UEL) adjusted for a specific pay frequency and number of periods, as NI is calculated based on the appropriate fraction of the applicable annual threshold. public record NiPeriodThresholdEntry : IEquatable<NiPeriodThresholdEntry> Inheritance object NiPeriodThresholdEntry Implements IEquatable<NiPeriodThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NiPeriodThresholdEntry(INiThresholdEntry, PayFrequency, int) Initialises a new instance of NiPeriodThresholdEntry based on the supplied annual threshold, specified pay frequency and optional number of tax periods. public NiPeriodThresholdEntry(INiThresholdEntry baseEntry, PayFrequency payFrequency, int numberOfTaxPeriods = 1) Parameters baseEntry INiThresholdEntry Annual threshold entry to calculate period threshold from. payFrequency PayFrequency Applicable pay frequency. numberOfTaxPeriods int Number of pay periods. Defaults to 1. Properties NumberOfTaxPeriods Gets the number of tax periods applicable for this period threshold. public int NumberOfTaxPeriods { get; } Property Value int PayFrequency Gets the applicable pay frequency for this period threshold. public PayFrequency PayFrequency { get; } Property Value PayFrequency ThresholdForPeriod Gets the base threshold for the period, as distinct from ThresholdForPeriod1 (see below). public decimal ThresholdForPeriod { get; } Property Value decimal ThresholdForPeriod1 Gets the modified threshold for the period (as distinct from ThresholdForPeriod) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. public decimal ThresholdForPeriod1 { get; } Property Value decimal ThresholdType Gets the type of this threshold entry (e.g., LEL, PT, ST, etc.). public NiThresholdType ThresholdType { get; } Property Value NiThresholdType Methods ToString() Gets a string representation of this NiPeriodThresholdEntry. public override string ToString() Returns string String representation of this instance."
  },
  "api/Payetools.NationalInsurance.ReferenceData.NiPeriodThresholdSet.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.NiPeriodThresholdSet.html",
    "title": "Class NiPeriodThresholdSet | Paytools",
    "keywords": "Class NiPeriodThresholdSet Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Represents a set of NI thresholds that have been adjusted to a proportion of the tax year. public record NiPeriodThresholdSet : INiPeriodThresholdSet, INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable, IEquatable<NiPeriodThresholdSet> Inheritance object NiPeriodThresholdSet Implements INiPeriodThresholdSet INiThresholdSet IEnumerable<INiThresholdEntry> IEnumerable IEquatable<NiPeriodThresholdSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Constructors NiPeriodThresholdSet(INiThresholdSet, PayFrequency, int) Initialises a new instance of NiPeriodThresholdSet based on the supplied annual thresholds, the applicable pay frequency and the applicable number of tax periods. public NiPeriodThresholdSet(INiThresholdSet entries, PayFrequency payFrequency, int numberOfTaxPeriods = 1) Parameters entries INiThresholdSet Set of National Insurance thresholds as defined by HMRC for a given tax year (or portion of a tax year, when there are in-year changes). payFrequency PayFrequency Applicable pay frequency. numberOfTaxPeriods int Number of tax periods, if applicable. Defaults to 1. Properties Count Gets the number of threshold value this threshold set contains. public int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. public INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetEnumerator() Returns an enumerator that iterates through the thresholds (of type INiThresholdEntry). public IEnumerator<INiThresholdEntry> GetEnumerator() Returns IEnumerator<INiThresholdEntry> An enumerator that can be used to iterate through the collection of thresholds. Exceptions InvalidOperationException Throw if the enumerator cannot be obtained. (Should never be thrown). GetThreshold(NiThresholdType) Gets the base threshold for the period, as distinct from the value returned by GetThreshold1(NiThresholdType) (see below). public decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type. GetThreshold1(NiThresholdType) Gets the modified threshold for the period (as distinct from the value returned by GetThreshold1(NiThresholdType)) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. public decimal GetThreshold1(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type. ToString() Gets a string representation of this NiPeriodThresholdSet. public override string ToString() Returns string String representation of this instance."
  },
  "api/Payetools.NationalInsurance.ReferenceData.NiThresholdEntry.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.NiThresholdEntry.html",
    "title": "Class NiThresholdEntry | Paytools",
    "keywords": "Class NiThresholdEntry Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. public record NiThresholdEntry : INiThresholdEntry, IEquatable<NiThresholdEntry> Inheritance object NiThresholdEntry Implements INiThresholdEntry IEquatable<NiThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ThresholdType Gets the type of threshold this instance pertains to. public NiThresholdType ThresholdType { get; init; } Property Value NiThresholdType ThresholdValuePerYear Gets the per annum value of the threshold. public decimal ThresholdValuePerYear { get; init; } Property Value decimal Methods ToString() Gets the string representation of this NiThresholdEntry for debugging purposes. public override string ToString() Returns string String representation of this instance."
  },
  "api/Payetools.NationalInsurance.ReferenceData.NiThresholdSet.html": {
    "href": "api/Payetools.NationalInsurance.ReferenceData.NiThresholdSet.html",
    "title": "Class NiThresholdSet | Paytools",
    "keywords": "Class NiThresholdSet Namespace Payetools.NationalInsurance.ReferenceData Assembly Payetools.NationalInsurance.dll Represents a set of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. public class NiThresholdSet : INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable Inheritance object NiThresholdSet Implements INiThresholdSet IEnumerable<INiThresholdEntry> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Constructors NiThresholdSet(INiThresholdSet, decimal) Initialises a new instance of NiThresholdSet adjusted by the supplied prorata factor. Used in director's NI calculation when an employee is a director for part of the year. public NiThresholdSet(INiThresholdSet originalAnnualNiThresholds, decimal proRataFactor) Parameters originalAnnualNiThresholds INiThresholdSet Original set of thresholds. proRataFactor decimal Pro-rata factor to apply to each threshold. NiThresholdSet(ImmutableList<INiThresholdEntry>) Initialises a new instance of NiThresholdSet. public NiThresholdSet(ImmutableList<INiThresholdEntry> niThresholds) Parameters niThresholds ImmutableList<INiThresholdEntry> Immutable input list of thresholds. Exceptions ArgumentException Thrown if the number of thresholds supplied does not match the expected number of possible thresholds. Properties Count Gets the number of threshold value this threshold set contains. public int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. public INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetEnumerator() Returns an enumerator that iterates through the thresholds (of type INiThresholdEntry). public IEnumerator<INiThresholdEntry> GetEnumerator() Returns IEnumerator<INiThresholdEntry> An enumerator that can be used to iterate through the collection of thresholds. Exceptions InvalidOperationException Throw if the enumerator cannot be obtained. (Should never be thrown). GetThreshold(NiThresholdType) Gets the annual threshold for the period for the specified threshold type. public decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Annual threshold value applicable to threshold type. ToString() Gets a string representation of this NiPeriodThresholdSet. public override string ToString() Returns string String representation of this instance."
  },
  "api/Payetools.NationalMinimumWage.html": {
    "href": "api/Payetools.NationalMinimumWage.html",
    "title": "Namespace Payetools.NationalMinimumWage | Paytools",
    "keywords": "Namespace Payetools.NationalMinimumWage Payetools.NationalMinimumWage contains support for ensuring NMW/NLW compliance. Payetools.NationalMinimumWage.ReferenceData Classes NmwEvaluator Represents a National Minimum/Living Wage evaluator that implements INmwEvaluator. NmwEvaluatorFactory Factory to generate INmwEvaluator implementations that are for a given pay date. Structs NmwEvaluationResult Represents the result of an NMW/NLW evaluation for a particular individual for particular pay period. Interfaces INmwEvaluator Interface for types that provide National Minimum/Living Wage evaluations. INmwEvaluatorFactory Interface that represents factories that can generate INmwEvaluator implementations."
  },
  "api/Payetools.NationalMinimumWage.INmwEvaluator.html": {
    "href": "api/Payetools.NationalMinimumWage.INmwEvaluator.html",
    "title": "Interface INmwEvaluator | Paytools",
    "keywords": "Interface INmwEvaluator Namespace Payetools.NationalMinimumWage Assembly Payetools.NationalMinimumWage.dll Interface for types that provide National Minimum/Living Wage evaluations. public interface INmwEvaluator Methods Evaluate(PayReferencePeriod, DateOnly, decimal, decimal, bool, decimal?) Evauates whether an employee's pay is compliant with the NMW/NLW regulations by considering their pay, hours and date of birth. Note that apprentices have special treatment. NmwEvaluationResult Evaluate(PayReferencePeriod payPeriod, DateOnly dateOfBirth, decimal grossPay, decimal hoursWorkedForPay, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters payPeriod PayReferencePeriod Applicable pay period. dateOfBirth DateOnly Employee's date of birth. grossPay decimal Gross pay to be used for the evaluation. This pay should correspond to the number of hours worked given in the subequent parameter. hoursWorkedForPay decimal Hours worked that corresponds to the gross pay figure supplied. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns NmwEvaluationResult An instance of NmwEvaluationResult that indicates whether the pay is compliant with the NMW/NLW regulations. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period. GetNmwHourlyRateForEmployee(int, bool, decimal?) Gets the expected hourly rate of pay for an employee that is paid is the National Minimum or National Living Wage. decimal GetNmwHourlyRateForEmployee(int ageAtStartOfPeriod, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters ageAtStartOfPeriod int Age at the start of the applicable pay period. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns decimal Appropriate hourly rate of pay. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period."
  },
  "api/Payetools.NationalMinimumWage.INmwEvaluatorFactory.html": {
    "href": "api/Payetools.NationalMinimumWage.INmwEvaluatorFactory.html",
    "title": "Interface INmwEvaluatorFactory | Paytools",
    "keywords": "Interface INmwEvaluatorFactory Namespace Payetools.NationalMinimumWage Assembly Payetools.NationalMinimumWage.dll Interface that represents factories that can generate INmwEvaluator implementations. public interface INmwEvaluatorFactory Methods GetEvaluator(PayDate) Gets a new INmwEvaluator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. INmwEvaluator GetEvaluator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns INmwEvaluator A new evaluator instance. GetEvaluator(TaxYear, PayFrequency, int) Gets a new INmwEvaluator based on the specified tax year, pay frequency and pay period. The tax year, pay frequency and pay period are provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. INmwEvaluator GetEvaluator(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwEvaluator A new evaluator instance."
  },
  "api/Payetools.NationalMinimumWage.NmwEvaluationResult.html": {
    "href": "api/Payetools.NationalMinimumWage.NmwEvaluationResult.html",
    "title": "Struct NmwEvaluationResult | Paytools",
    "keywords": "Struct NmwEvaluationResult Namespace Payetools.NationalMinimumWage Assembly Payetools.NationalMinimumWage.dll Represents the result of an NMW/NLW evaluation for a particular individual for particular pay period. public readonly struct NmwEvaluationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NmwEvaluationResult(bool, decimal?, int, string) Initialises a new instance of NmwEvaluationResult. public NmwEvaluationResult(bool isCompliant, decimal? nmwLevelApplied, int ageAtStartOfPayPeriod, string commentary) Parameters isCompliant bool True if the pay is compliant with the regulations; false otherwise. nmwLevelApplied decimal? NMW/NLW level used for compliance checking. ageAtStartOfPayPeriod int Age at the start of the pay period (in whole years). commentary string Human-readable commentary on the evaluation. Properties AgeAtStartOfPayPeriod Gets the age of the individual at the start of the pay period. public int AgeAtStartOfPayPeriod { get; } Property Value int Commentary Gets the human-readable commentary relating to this evaluation. May be empty. public string Commentary { get; } Property Value string IsCompliant Gets a value indicating whether an individual's pay is compliant with the NMW/NLW regulations. public bool IsCompliant { get; } Property Value bool NmwLevelApplied Gets the level (hourly rate) used to verify the employee's compliance with the regulations. Null if no level applies. public decimal? NmwLevelApplied { get; } Property Value decimal?"
  },
  "api/Payetools.NationalMinimumWage.NmwEvaluator.html": {
    "href": "api/Payetools.NationalMinimumWage.NmwEvaluator.html",
    "title": "Class NmwEvaluator | Paytools",
    "keywords": "Class NmwEvaluator Namespace Payetools.NationalMinimumWage Assembly Payetools.NationalMinimumWage.dll Represents a National Minimum/Living Wage evaluator that implements INmwEvaluator. public class NmwEvaluator : INmwEvaluator Inheritance object NmwEvaluator Implements INmwEvaluator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NmwEvaluator(INmwLevelSet) Initialises a new instance of NmwEvaluator using the supplied set of levels. public NmwEvaluator(INmwLevelSet nmwLevels) Parameters nmwLevels INmwLevelSet NMW/NLW levels to use. Methods Evaluate(PayReferencePeriod, DateOnly, decimal, decimal, bool, decimal?) Evauates whether an employee's pay is compliant with the NMW/NLW regulations by considering their pay, hours and date of birth. Note that apprentices have special treatment. public NmwEvaluationResult Evaluate(PayReferencePeriod payPeriod, DateOnly dateOfBirth, decimal grossPay, decimal hoursWorkedForPay, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters payPeriod PayReferencePeriod Applicable pay period. dateOfBirth DateOnly Employee's date of birth. grossPay decimal Gross pay to be used for the evaluation. This pay should correspond to the number of hours worked given in the subequent parameter. hoursWorkedForPay decimal Hours worked that corresponds to the gross pay figure supplied. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns NmwEvaluationResult An instance of NmwEvaluationResult that indicates whether the pay is compliant with the NMW/NLW regulations. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at teh start of the pay reference period. GetNmwHourlyRateForEmployee(int, bool, decimal?) Gets the expected hourly rate of pay for an employee that is paid is the National Minimum or National Living Wage. public decimal GetNmwHourlyRateForEmployee(int ageAtStartOfPeriod, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters ageAtStartOfPeriod int Age at the start of the applicable pay period. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns decimal Appropriate hourly rate of pay. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period."
  },
  "api/Payetools.NationalMinimumWage.NmwEvaluatorFactory.html": {
    "href": "api/Payetools.NationalMinimumWage.NmwEvaluatorFactory.html",
    "title": "Class NmwEvaluatorFactory | Paytools",
    "keywords": "Class NmwEvaluatorFactory Namespace Payetools.NationalMinimumWage Assembly Payetools.NationalMinimumWage.dll Factory to generate INmwEvaluator implementations that are for a given pay date. public class NmwEvaluatorFactory : INmwEvaluatorFactory Inheritance object NmwEvaluatorFactory Implements INmwEvaluatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NmwEvaluatorFactory(INmwReferenceDataProvider) Initialises a new instance of NmwEvaluatorFactory with the supplied INmwReferenceDataProvider. public NmwEvaluatorFactory(INmwReferenceDataProvider provider) Parameters provider INmwReferenceDataProvider Reference data provider used to seed new NMW/NLW evaluators. Methods GetEvaluator(PayDate) Gets a new INmwEvaluator based on the specified pay date. The pay date is provided in order to determine which set of level to use, noting that these may (but rarely do) change in-year. public INmwEvaluator GetEvaluator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns INmwEvaluator A new evaluator instance. GetEvaluator(TaxYear, PayFrequency, int) Gets a new INmwEvaluator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. public INmwEvaluator GetEvaluator(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwEvaluator A new evaluator instance."
  },
  "api/Payetools.NationalMinimumWage.ReferenceData.html": {
    "href": "api/Payetools.NationalMinimumWage.ReferenceData.html",
    "title": "Namespace Payetools.NationalMinimumWage.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.NationalMinimumWage.ReferenceData Interfaces INmwLevelSet Interface for types that detail the various HMRC-published National Minimum/Living Wage (NMW/NLW) levels. INmwReferenceDataProvider Interface that classes implement in order to provide access to National Minimum/Living Wage reference data."
  },
  "api/Payetools.NationalMinimumWage.ReferenceData.INmwLevelSet.html": {
    "href": "api/Payetools.NationalMinimumWage.ReferenceData.INmwLevelSet.html",
    "title": "Interface INmwLevelSet | Paytools",
    "keywords": "Interface INmwLevelSet Namespace Payetools.NationalMinimumWage.ReferenceData Assembly Payetools.NationalMinimumWage.dll Interface for types that detail the various HMRC-published National Minimum/Living Wage (NMW/NLW) levels. public interface INmwLevelSet Properties Age18To20Level Gets the NMW level for employees aged between 18 and 20. decimal Age18To20Level { get; } Property Value decimal Age21To22Level Gets the NMW level for employees aged between 21 and 22. decimal Age21To22Level { get; } Property Value decimal Age23AndAboveLevel Gets the NLW (rather than NMW) level for employees aged 23 and over. decimal Age23AndAboveLevel { get; } Property Value decimal ApprenticeLevel Gets the NMW level for apprentices under 19 or apprentices aged 19 and over in the first year of their apprenticeship. decimal ApprenticeLevel { get; } Property Value decimal Under18Level Gets the NMW level for employees under the age of 18 (but over the school leaving age). decimal Under18Level { get; } Property Value decimal"
  },
  "api/Payetools.NationalMinimumWage.ReferenceData.INmwReferenceDataProvider.html": {
    "href": "api/Payetools.NationalMinimumWage.ReferenceData.INmwReferenceDataProvider.html",
    "title": "Interface INmwReferenceDataProvider | Paytools",
    "keywords": "Interface INmwReferenceDataProvider Namespace Payetools.NationalMinimumWage.ReferenceData Assembly Payetools.NationalMinimumWage.dll Interface that classes implement in order to provide access to National Minimum/Living Wage reference data. public interface INmwReferenceDataProvider Methods GetNmwLevelsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the NMW/NLW levels for the specified tax year and tax period, as denoted by the supplied pay frequency and pay period. INmwLevelSet GetNmwLevelsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwLevelSet An instance of INmwLevelSet containing the levels for the specified point in time."
  },
  "api/Payetools.Payroll.Extensions.html": {
    "href": "api/Payetools.Payroll.Extensions.html",
    "title": "Namespace Payetools.Payroll.Extensions | Paytools",
    "keywords": "Namespace Payetools.Payroll.Extensions Classes IEmployeePayrollHistoryYtdExtensions Extension methods for IEmployeePayrollHistoryYtd. IEmployeePayStructureExtensions Extension methods for IEmployeePayStructure."
  },
  "api/Payetools.Payroll.Extensions.IEmployeePayrollHistoryYtdExtensions.html": {
    "href": "api/Payetools.Payroll.Extensions.IEmployeePayrollHistoryYtdExtensions.html",
    "title": "Class IEmployeePayrollHistoryYtdExtensions | Paytools",
    "keywords": "Class IEmployeePayrollHistoryYtdExtensions Namespace Payetools.Payroll.Extensions Assembly Payetools.Payroll.dll Extension methods for IEmployeePayrollHistoryYtd. public static class IEmployeePayrollHistoryYtdExtensions Inheritance object IEmployeePayrollHistoryYtdExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Adds the results of the payrun provided to the current instance and returns a new instance of IEmployeePayrollHistoryYtd. public static IEmployeePayrollHistoryYtd Add(this IEmployeePayrollHistoryYtd value, IEmployeePayrunResult payrunResult) Parameters value IEmployeePayrollHistoryYtd Instance of IEmployeePayrollHistoryYtd to be updated. payrunResult IEmployeePayrunResult Results of a set of payroll calculations for a given employee. Returns IEmployeePayrollHistoryYtd New instance of IEmployeePayrollHistoryYtd with the calculation results applied."
  },
  "api/Payetools.Payroll.Extensions.IEmployeePayStructureExtensions.html": {
    "href": "api/Payetools.Payroll.Extensions.IEmployeePayStructureExtensions.html",
    "title": "Class IEmployeePayStructureExtensions | Paytools",
    "keywords": "Class IEmployeePayStructureExtensions Namespace Payetools.Payroll.Extensions Assembly Payetools.Payroll.dll Extension methods for IEmployeePayStructure. public static class IEmployeePayStructureExtensions Inheritance object IEmployeePayStructureExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) Calculates the pay for the period based on the specified amount of time/unit. Currently only supports hourly pay. public static decimal GetPayForPeriod(this IEmployeePayStructure value, decimal quantity, PayRateUnits units) Parameters value IEmployeePayStructure IEmployeePayStructure instance. quantity decimal Amount of time/unit to calculate pay for. units PayRateUnits Units for quantity. Returns decimal Pay for the period. GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Calculates the pay for one period at the specified pay frequency. public static decimal GetPayForSinglePeriod(this IEmployeePayStructure value, PayFrequency payFrequency) Parameters value IEmployeePayStructure IEmployeePayStructure instance. payFrequency PayFrequency Pay frequency. Returns decimal Pay for the period. Exceptions ArgumentException Thrown if the pay structure does not refer to an annually paid employee."
  },
  "api/Payetools.Payroll.html": {
    "href": "api/Payetools.Payroll.html",
    "title": "Namespace Payetools.Payroll | Paytools",
    "keywords": "Namespace Payetools.Payroll Payetools.Payroll contains the functionality that pulls together all the component elements of payroll calculation, i.e., IncomeTax, NationalInsurance, Pensions, etc. Payetools.Payroll.Extensions Payetools.Payroll.Model Payetools.Payroll.Payruns Interfaces IEmployerInfoProvider Not sure what this is here for."
  },
  "api/Payetools.Payroll.IEmployerInfoProvider.html": {
    "href": "api/Payetools.Payroll.IEmployerInfoProvider.html",
    "title": "Interface IEmployerInfoProvider | Paytools",
    "keywords": "Interface IEmployerInfoProvider Namespace Payetools.Payroll Assembly Payetools.Payroll.dll Not sure what this is here for. public interface IEmployerInfoProvider Properties Employer Gets Not sure what this is here for. IEmployer Employer { get; } Property Value IEmployer"
  },
  "api/Payetools.Payroll.Model.DeductionEntry.html": {
    "href": "api/Payetools.Payroll.Model.DeductionEntry.html",
    "title": "Class DeductionEntry | Paytools",
    "keywords": "Class DeductionEntry Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents a deduction from payroll. public record DeductionEntry : IDeductionEntry, IEquatable<DeductionEntry> Inheritance object DeductionEntry Implements IDeductionEntry IEquatable<DeductionEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeductionClassification Gets the type of deduction. public IDeductionDetails DeductionClassification { get; init; } Property Value IDeductionDetails FixedAmount Gets the fixed amount of the deduction, if that is specified in place of quantity and value per unit. Used for absolute amounts. public decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total deduction. public decimal? QuantityInUnits { get; init; } Property Value decimal? TotalDeduction Gets the total deduction to be applied. public decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. public decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Payetools.Payroll.Model.EarningsEntry.html": {
    "href": "api/Payetools.Payroll.Model.EarningsEntry.html",
    "title": "Class EarningsEntry | Paytools",
    "keywords": "Class EarningsEntry Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an element of an employee's pay. public class EarningsEntry : IEarningsEntry Inheritance object EarningsEntry Implements IEarningsEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EarningsDetails Gets the type of deduction. public IEarningsDetails EarningsDetails { get; init; } Property Value IEarningsDetails FixedAmount Gets the fixed amount of the earnings, if that is specified in place of quantity and value per unit. Used for absolute amounts. public decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this earnings entry that when multiplied by the ValuePerUnit gives the total earnings. public decimal? QuantityInUnits { get; init; } Property Value decimal? TotalEarnings Gets the total earnings to be applied. public decimal TotalEarnings { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total earnings. public decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Payetools.Payroll.Model.EarningsHistoryYtd.html": {
    "href": "api/Payetools.Payroll.Model.EarningsHistoryYtd.html",
    "title": "Class EarningsHistoryYtd | Paytools",
    "keywords": "Class EarningsHistoryYtd Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employee's earnings history for the tax year to date. public record EarningsHistoryYtd : IEarningsHistoryYtd, IEquatable<EarningsHistoryYtd> Inheritance object EarningsHistoryYtd Implements IEarningsHistoryYtd IEquatable<EarningsHistoryYtd> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EarningsHistoryYtd() Initialises a new empoty EarningsHistoryYtd. public EarningsHistoryYtd() Properties Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. public ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry>"
  },
  "api/Payetools.Payroll.Model.Employee.html": {
    "href": "api/Payetools.Payroll.Model.Employee.html",
    "title": "Class Employee | Paytools",
    "keywords": "Class Employee Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employee for payroll purposes. public record Employee : IEmployee, INamedPerson, IEquatable<Employee> Inheritance object Employee Implements IEmployee INamedPerson IEquatable<Employee> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth Gets the individual's date of birth. public DateOnly DateOfBirth { get; init; } Property Value DateOnly EmailAddress Gets or sets the employee's email address, if known. public MailAddress? EmailAddress { get; set; } Property Value MailAddress FirstName Gets the individual's first (also known as \"given\" or \"Christian\") name. public string? FirstName { get; init; } Property Value string Gender Gets the individual's \"official\" gender as recognised by HMRC for payroll purposes. public Gender Gender { get; init; } Property Value Gender HasMiddleName Gets a value indicating whether the individual has supplied a middle name. public bool HasMiddleName { get; } Property Value bool Initials Gets a list of the individual's initials as an array. Note that this property is only used if the individual's first name is not known, and its use is mutually exclusive with FirstName and MiddleNames. public string[]? Initials { get; init; } Property Value string[] InitialsAsString Gets any initials provided as a space separated string. Will be null if a FirstName has been provided. public string? InitialsAsString { get; init; } Property Value string LastName Gets the individual's last (also known as \"family\") name. public string LastName { get; init; } Property Value string MiddleNames Gets the middle names of the individual, space separated. Note that this property is optional, as some people do not have middle names, or they choose not to disclose them. public string? MiddleNames { get; init; } Property Value string NiNumber Gets the individual's National Insurance number. public NiNumber NiNumber { get; init; } Property Value NiNumber PostalAddress Gets or sets the employee's postal address. public PostalAddress PostalAddress { get; set; } Property Value PostalAddress Title Gets the individual's title, e.g., Mr, Mrs, Miss, Dr., etc. public Title? Title { get; init; } Property Value Title?"
  },
  "api/Payetools.Payroll.Model.EmployeePayrollHistoryYtd.html": {
    "href": "api/Payetools.Payroll.Model.EmployeePayrollHistoryYtd.html",
    "title": "Class EmployeePayrollHistoryYtd | Paytools",
    "keywords": "Class EmployeePayrollHistoryYtd Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents the historical set of information for an employee's payroll for the current tax year. public record EmployeePayrollHistoryYtd : IEmployeePayrollHistoryYtd, IEquatable<EmployeePayrollHistoryYtd> Inheritance object EmployeePayrollHistoryYtd Implements IEmployeePayrollHistoryYtd IEquatable<EmployeePayrollHistoryYtd> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayrollHistoryYtdExtensions.Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Constructors EmployeePayrollHistoryYtd() Initialises a new empty instance of EmployeePayrollHistoryYtd. public EmployeePayrollHistoryYtd() EmployeePayrollHistoryYtd(IEmployeePayrunResult) Initialises a new instance of EmployeePayrollHistoryYtd with the supplied payrun result for a given employee. This constructor is intended for use to create the first history record from the first payrun of the tax year. public EmployeePayrollHistoryYtd(IEmployeePayrunResult initialResult) Parameters initialResult IEmployeePayrunResult Payrun calculation result for the given employee. Properties DeductionHistoryYtd Gets the employee's deduction history for the tax year to date. public IDeductionHistoryYtd DeductionHistoryYtd { get; init; } Property Value IDeductionHistoryYtd EarningsHistoryYtd Gets the employee's earnings history for the tax year to date. public IEarningsHistoryYtd EarningsHistoryYtd { get; init; } Property Value IEarningsHistoryYtd EmployeeNiHistoryEntries Gets the National Insurance payment history for the current tax year. Employees may transition between NI categories during the tax year and each NI category's payment record must be retained. public NiYtdHistory EmployeeNiHistoryEntries { get; init; } Property Value NiYtdHistory EmployeePensionContributionsUnderNpaYtd Gets the total employee pension contributions made under a net pay arrangement to date this tax year. public decimal EmployeePensionContributionsUnderNpaYtd { get; init; } Property Value decimal EmployeePensionContributionsUnderRasYtd Gets the total employee pension contributions made under relief at source to date this tax year. public decimal EmployeePensionContributionsUnderRasYtd { get; init; } Property Value decimal EmployerPensionContributionsYtd Gets the total employer pension contributions made to date this tax year. public decimal EmployerPensionContributionsYtd { get; init; } Property Value decimal GraduateLoanRepaymentsYtd Gets the graduate loan deductions made to date this tax year. public decimal GraduateLoanRepaymentsYtd { get; init; } Property Value decimal GrossPayYtd Gets the gross pay paid to date this tax year. public decimal GrossPayYtd { get; init; } Property Value decimal NicablePayYtd Gets the NI-able pay paid to date this tax year. public decimal NicablePayYtd { get; init; } Property Value decimal PayrolledBenefitsYtd Gets the amount accrued against payrolled benefits to date this tax year. public decimal PayrolledBenefitsYtd { get; init; } Property Value decimal SharedParentalPayYtd Gets any statutory shared parental pay paid to date this tax year. public decimal SharedParentalPayYtd { get; init; } Property Value decimal StatutoryAdoptionPayYtd Gets any statutory adoption pay paid to date this tax year. public decimal StatutoryAdoptionPayYtd { get; init; } Property Value decimal StatutoryMaternityPayYtd Gets any statutory maternity pay paid to date this tax year. public decimal StatutoryMaternityPayYtd { get; init; } Property Value decimal StatutoryParentalBereavementPayYtd Gets any statutory parental bereavement pay paid to date this tax year. public decimal StatutoryParentalBereavementPayYtd { get; init; } Property Value decimal StatutoryPaternityPayYtd Gets any statutory paternity pay paid to date this tax year. public decimal StatutoryPaternityPayYtd { get; init; } Property Value decimal StudentLoanRepaymentsYtd Gets the student loan deductions made to date this tax year. public decimal StudentLoanRepaymentsYtd { get; init; } Property Value decimal TaxablePayYtd Gets the taxable pay paid to date this tax year. public decimal TaxablePayYtd { get; init; } Property Value decimal TaxPaidYtd Gets the income tax paid to date this tax year. public decimal TaxPaidYtd { get; init; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets the tax that it has not been possible to collect so far this tax year due to the regulatory limit on income tax deductions. public decimal TaxUnpaidDueToRegulatoryLimit { get; init; } Property Value decimal"
  },
  "api/Payetools.Payroll.Model.EmployeePayrunInputEntry.html": {
    "href": "api/Payetools.Payroll.Model.EmployeePayrunInputEntry.html",
    "title": "Class EmployeePayrunInputEntry | Paytools",
    "keywords": "Class EmployeePayrunInputEntry Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. public record EmployeePayrunInputEntry : IEmployeePayrunInputEntry, IEquatable<EmployeePayrunInputEntry> Inheritance object EmployeePayrunInputEntry Implements IEmployeePayrunInputEntry IEquatable<EmployeePayrunInputEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmployeePayrunInputEntry(IEmployee, IEmployment, ImmutableList<IEarningsEntry>, ImmutableList<IDeductionEntry>, ImmutableList<IPayrolledBenefitForPeriod>, IPensionContributionLevels) Initialises a new instance of EmployeePayrunInputEntry. public EmployeePayrunInputEntry(IEmployee employee, IEmployment employment, ImmutableList<IEarningsEntry> earnings, ImmutableList<IDeductionEntry> deductions, ImmutableList<IPayrolledBenefitForPeriod> payrolledBenefits, IPensionContributionLevels pensionContributionLevels) Parameters employee IEmployee Employee details. employment IEmployment Employment details. earnings ImmutableList<IEarningsEntry> List of applicable earnings, if any. Empty list if none. deductions ImmutableList<IDeductionEntry> List of applicable deductions, if any. Empty list if none. payrolledBenefits ImmutableList<IPayrolledBenefitForPeriod> List of payrolled benefits, if any. Empty list if none. pensionContributionLevels IPensionContributionLevels Pension contribtuion levels to be applied. Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty. public ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry> Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. public ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry> Employee Gets the employee details for this entry. public IEmployee Employee { get; } Property Value IEmployee Employment Gets the employment details for the employee for this entry. public IEmployment Employment { get; } Property Value IEmployment PayrolledBenefits Gets the list of payrolled benefits for this employee for a given payrun. Empty if the employee has no payrolled benefits. public ImmutableList<IPayrolledBenefitForPeriod> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefitForPeriod> PensionContributionLevels Gets the pension contributions to apply for this pay period. public IPensionContributionLevels PensionContributionLevels { get; } Property Value IPensionContributionLevels"
  },
  "api/Payetools.Payroll.Model.EmployeePayrunResult.html": {
    "href": "api/Payetools.Payroll.Model.EmployeePayrunResult.html",
    "title": "Class EmployeePayrunResult | Paytools",
    "keywords": "Class EmployeePayrunResult Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents a payrun entry for one employee for a specific payrun. public record EmployeePayrunResult : IEmployeePayrunResult, IEquatable<EmployeePayrunResult> Inheritance object EmployeePayrunResult Implements IEmployeePayrunResult IEquatable<EmployeePayrunResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmployeePayrunResult(IEmployee, bool, ref ITaxCalculationResult, ref INiCalculationResult, ref IStudentLoanCalculationResult, ref IPensionContributionCalculationResult, decimal, decimal, decimal, decimal, ref IEmployeePayrollHistoryYtd) Initialises a new instance of EmployeePayrunResult. public EmployeePayrunResult(IEmployee employee, bool isLeaverInThisPayrun, ref ITaxCalculationResult taxCalculationResult, ref INiCalculationResult niCalculationResult, ref IStudentLoanCalculationResult studentLoanCalculationResult, ref IPensionContributionCalculationResult pensionContributionCalculation, decimal totalGrossPay, decimal workingGrossPay, decimal taxablePay, decimal nicablePay, ref IEmployeePayrollHistoryYtd employeePayrollHistoryYtd) Parameters employee IEmployee Employee details. isLeaverInThisPayrun bool True if the employee is being marked as left in this payrun. taxCalculationResult ITaxCalculationResult Result of income tax calculation. niCalculationResult INiCalculationResult Result of National Insurance calculation. studentLoanCalculationResult IStudentLoanCalculationResult Optional result of student loan calculation. Null if the employee does not have any outstanding student or post-graduate loans. pensionContributionCalculation IPensionContributionCalculationResult Optional result of pension calculation. Null if the employee is not a member of one of the company's schemes. totalGrossPay decimal Total gross pay. workingGrossPay decimal Total gross pay less any deductions that reduce taxable/Nicable pay and should be deducted before calculating net pay. taxablePay decimal Pay subject to income tax. nicablePay decimal Pay subject to National Insurance. employeePayrollHistoryYtd IEmployeePayrollHistoryYtd Historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. Properties Employee Gets the employee's details. public IEmployee Employee { get; } Property Value IEmployee EmployeePayrollHistoryYtd Gets the historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. public ref IEmployeePayrollHistoryYtd EmployeePayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd IsLeaverInThisPayrun Gets a value indicating whether this employee is being recorded as left employment in this payrun. Note that the employee's leaving date may be before the start of the pay period for this payrun. public bool IsLeaverInThisPayrun { get; } Property Value bool NetPay Gets the employee's final net pay. public decimal NetPay { get; } Property Value decimal NicablePay Gets the employee's total pay that is subject to National Insurance. public decimal NicablePay { get; } Property Value decimal NiCalculationResult Gets the results of this employee's National Insurance calculation for this payrun. public ref INiCalculationResult NiCalculationResult { get; } Property Value INiCalculationResult PayrunInfo Gets information about this payrun. public ref IPayrunInfo PayrunInfo { get; } Property Value IPayrunInfo PensionContributionCalculationResult Gets the results of this employee's pension calculation for this payrun, if applicable.; null otherwise. public ref IPensionContributionCalculationResult PensionContributionCalculationResult { get; } Property Value IPensionContributionCalculationResult StudentLoanCalculationResult Gets the results of this employee's student loan calculation for this payrun, if applicable; null otherwise. public ref IStudentLoanCalculationResult StudentLoanCalculationResult { get; } Property Value IStudentLoanCalculationResult TaxablePay Gets the employee's total taxable pay, before the application of any tax-free pay. public decimal TaxablePay { get; } Property Value decimal TaxCalculationResult Gets the results of this employee's income tax calculation for this payrun. public ref ITaxCalculationResult TaxCalculationResult { get; } Property Value ITaxCalculationResult TotalGrossPay Gets the employee's total gross pay. public decimal TotalGrossPay { get; } Property Value decimal WorkingGrossPay Gets the employee's working gross pay, the figure used as the starting point for calculating take-home pay. public decimal WorkingGrossPay { get; } Property Value decimal"
  },
  "api/Payetools.Payroll.Model.Employer.html": {
    "href": "api/Payetools.Payroll.Model.Employer.html",
    "title": "Class Employer | Paytools",
    "keywords": "Class Employer Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employer for payroll purposes. public record Employer : IEmployer, IEquatable<Employer> Inheritance object Employer Implements IEmployer IEquatable<Employer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountsOfficeReference Gets or sets the employer's HMRC Accounts Office reference, if known. public HmrcAccountsOfficeReference? AccountsOfficeReference { get; set; } Property Value HmrcAccountsOfficeReference BusinessLegalName Gets or sets the legal name of the business, including any legally required suffix, e.g., Ltd, LLP, etc. public string BusinessLegalName { get; set; } Property Value string HmrcPayeReference Gets or sets the employer's HMRC PAYE reference, if known. public HmrcPayeReference? HmrcPayeReference { get; set; } Property Value HmrcPayeReference?"
  },
  "api/Payetools.Payroll.Model.Employment.html": {
    "href": "api/Payetools.Payroll.Model.Employment.html",
    "title": "Class Employment | Paytools",
    "keywords": "Class Employment Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employee's employment for payroll purposes. public record Employment : IEmployment, IEquatable<Employment> Inheritance object Employment Implements IEmployment IEquatable<Employment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Employment(in IEmployeePayrollHistoryYtd) Initialises a new instance of Employment. public Employment(in IEmployeePayrollHistoryYtd payrollHistoryYtd) Parameters payrollHistoryYtd IEmployeePayrollHistoryYtd Employee's year-to-date payroll history. Properties DefaultPensionContributionLevels Gets the default pension contributions to apply in each pay period, unless overridden by employee or employer instruction for that pay period. public IPensionContributionLevels DefaultPensionContributionLevels { get; init; } Property Value IPensionContributionLevels DirectorsNiCalculationMethod Gets the method for calculating National Insurance contributions. Applicable only for directors; null otherwise. public DirectorsNiCalculationMethod? DirectorsNiCalculationMethod { get; init; } Property Value DirectorsNiCalculationMethod? EmploymentEndDate Gets the employee's official employment termination date, i.e., their last working day. Null if the employee is still employed. public DateOnly? EmploymentEndDate { get; init; } Property Value DateOnly? EmploymentStartDate Gets the employee's official employment start date. public DateOnly EmploymentStartDate { get; init; } Property Value DateOnly IsDirector Gets a value indicating whether the employee is a company director. public bool IsDirector { get; init; } Property Value bool NiCategory Gets the employee's NI category. public NiCategory NiCategory { get; init; } Property Value NiCategory PayrolledBenefits Gets the list of payrolled benefits that apply to this employment. public ImmutableList<IPayrolledBenefit> PayrolledBenefits { get; init; } Property Value ImmutableList<IPayrolledBenefit> PayrollHistoryYtd Gets the key figures from the employee's payroll history for the tax year to date. public ref IEmployeePayrollHistoryYtd PayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd PayrollId Gets the employee's payroll ID, as reported to HMRC. Sometimes known as \"works number\". public PayrollId PayrollId { get; init; } Property Value PayrollId PensionScheme Gets the pension scheme that the employee is a member of. Null if they are not a member of any scheme. public IPensionScheme? PensionScheme { get; init; } Property Value IPensionScheme PrimaryPayStructure Gets the employee's primary pay structure. public IEmployeePayStructure PrimaryPayStructure { get; init; } Property Value IEmployeePayStructure RecurringDeductions Gets the list of recurring deductions for an employee. public ImmutableList<IRecurringDeduction> RecurringDeductions { get; init; } Property Value ImmutableList<IRecurringDeduction> RecurringEarnings Gets the list of recurring earnings elements for an employee. public ImmutableList<IRecurringEarnings> RecurringEarnings { get; init; } Property Value ImmutableList<IRecurringEarnings> StudentLoanStatus Gets the employee's current student loan status. public StudentLoanStatus? StudentLoanStatus { get; init; } Property Value StudentLoanStatus? TaxCode Gets the employee's tax code. public TaxCode TaxCode { get; init; } Property Value TaxCode"
  },
  "api/Payetools.Payroll.Model.GenericDeduction.html": {
    "href": "api/Payetools.Payroll.Model.GenericDeduction.html",
    "title": "Class GenericDeduction | Paytools",
    "keywords": "Class GenericDeduction Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents the various types of deduction that can be made from payroll. public record GenericDeduction : IDeductionDetails, IEquatable<GenericDeduction> Inheritance object GenericDeduction Implements IDeductionDetails IEquatable<GenericDeduction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsUnderSalaryExchangeArrangement Gets or sets a value indicating whether this type of deduction is made as part of a salary exchange (aka salary sacrifice) arrangement. Note that when this flag is set, ReducesGrossPay, ReducesTaxablePay and ReducesNicablePay will also normally be set to true. public bool IsUnderSalaryExchangeArrangement { get; set; } Property Value bool Remarks This property is primarily included to assist when it is time to show the deduction on the payslip, enabling all salary exchange deductions including pensions to be grouped together. Name Gets or sets the full name of this type of deduction. public string Name { get; set; } Property Value string ReducesGrossPay Gets a value indicating whether this type of deduction reduces the gross pay figure used to calculate take-home . public bool ReducesGrossPay { get; } Property Value bool ReducesNicablePay Gets or sets a value indicating whether this type of deduction affects pay for National Insurance purposes. public bool ReducesNicablePay { get; set; } Property Value bool ReducesPensionablePay Gets or sets a value indicating whether this type of deduction affects pay for pension purposes. public bool ReducesPensionablePay { get; set; } Property Value bool ReducesTaxablePay Gets or sets a value indicating whether this type of deduction is applied before or after tax. public bool ReducesTaxablePay { get; set; } Property Value bool ShortName Gets or sets the short name for this type of deduction. public string ShortName { get; set; } Property Value string Units Gets or sets the units for this deduction type, if applicable. Null if not applicable. public PayRateUnits? Units { get; set; } Property Value PayRateUnits?"
  },
  "api/Payetools.Payroll.Model.GenericEarnings.html": {
    "href": "api/Payetools.Payroll.Model.GenericEarnings.html",
    "title": "Class GenericEarnings | Paytools",
    "keywords": "Class GenericEarnings Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents a generic pay component (e.g., salary, bonus, sick pay, etc.). public class GenericEarnings : IEarningsDetails Inheritance object GenericEarnings Implements IEarningsDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the unique ID for this pay component. public Guid Id { get; set; } Property Value Guid IsNetToGross Gets or sets a value indicating whether this pay component refers to a net amount that should be \"grossed up\", ensuring the employee receives the net amount in their take-home pay. public bool IsNetToGross { get; set; } Property Value bool IsPensionable Gets or sets a value indicating whether this pay component should be included in the employee's pensionable salary. public bool IsPensionable { get; set; } Property Value bool IsSubjectToNi Gets or sets a value indicating whether this pay component is subject to National Insurance. public bool IsSubjectToNi { get; set; } Property Value bool IsSubjectToTax Gets or sets a value indicating whether this pay component is subject to tax. public bool IsSubjectToTax { get; set; } Property Value bool IsTreatedAsOvertime Gets or sets a value indicating whether this pay component should be treated as overtime for the purposes of average overtime calculations. public bool IsTreatedAsOvertime { get; set; } Property Value bool Name Gets or sets the full name of this pay component. public string Name { get; set; } Property Value string ShortName Gets or sets the short name for this pay component. public string ShortName { get; set; } Property Value string Units Gets or sets the units for this pay component, if applicable. Null if not applicable. public PayRateUnits? Units { get; set; } Property Value PayRateUnits?"
  },
  "api/Payetools.Payroll.Model.html": {
    "href": "api/Payetools.Payroll.Model.html",
    "title": "Namespace Payetools.Payroll.Model | Paytools",
    "keywords": "Namespace Payetools.Payroll.Model Classes DeductionEntry Represents a deduction from payroll. EarningsEntry Represents an element of an employee's pay. EarningsHistoryYtd Represents an employee's earnings history for the tax year to date. Employee Represents an employee for payroll purposes. EmployeePayrollHistoryYtd Represents the historical set of information for an employee's payroll for the current tax year. EmployeePayrunInputEntry Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. EmployeePayrunResult Represents a payrun entry for one employee for a specific payrun. Employer Represents an employer for payroll purposes. Employment Represents an employee's employment for payroll purposes. GenericDeduction Represents the various types of deduction that can be made from payroll. GenericEarnings Represents a generic pay component (e.g., salary, bonus, sick pay, etc.). PayrolledBenefitForPeriod Represents a payrolled benefit as applicable to one payroll period. PayrunResult Represents the output of a payrun. PensionContributionLevels Defines the levels to be applied for contributions into an employee's pension. Interfaces IEmployeePayrunInputEntry Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. IEmployeePayrunResult Interface that represents a payrun entry for one employee for a specific payrun. IPayrolledBenefitForPeriod Interface that represents the effect of a payrolled on a given pay reference period. IPayrunInfo Not sure what goes here. IPayrunResult Interface that represents the output of a given payrun."
  },
  "api/Payetools.Payroll.Model.IEmployeePayrunInputEntry.html": {
    "href": "api/Payetools.Payroll.Model.IEmployeePayrunInputEntry.html",
    "title": "Interface IEmployeePayrunInputEntry | Paytools",
    "keywords": "Interface IEmployeePayrunInputEntry Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. public interface IEmployeePayrunInputEntry Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty. ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry> Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry> Employee Gets the employee details for this entry. IEmployee Employee { get; } Property Value IEmployee Employment Gets the employment details for the employee for this entry. IEmployment Employment { get; } Property Value IEmployment PayrolledBenefits Gets the list of payrolled benefits for this employee for a given payrun. Empty if the employee has no payrolled benefits. ImmutableList<IPayrolledBenefitForPeriod> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefitForPeriod> PensionContributionLevels Gets the pension contributions to apply for this pay period. IPensionContributionLevels PensionContributionLevels { get; } Property Value IPensionContributionLevels"
  },
  "api/Payetools.Payroll.Model.IEmployeePayrunResult.html": {
    "href": "api/Payetools.Payroll.Model.IEmployeePayrunResult.html",
    "title": "Interface IEmployeePayrunResult | Paytools",
    "keywords": "Interface IEmployeePayrunResult Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Interface that represents a payrun entry for one employee for a specific payrun. public interface IEmployeePayrunResult Properties Employee Gets the employee's details. IEmployee Employee { get; } Property Value IEmployee EmployeePayrollHistoryYtd Gets the historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. ref IEmployeePayrollHistoryYtd EmployeePayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd IsLeaverInThisPayrun Gets a value indicating whether this employee is being recorded as left employment in this payrun. Note that the employee's leaving date may be before the start of the pay period for this payrun. bool IsLeaverInThisPayrun { get; } Property Value bool NetPay Gets the employee's final net pay. decimal NetPay { get; } Property Value decimal NicablePay Gets the employee's total pay that is subject to National Insurance. decimal NicablePay { get; } Property Value decimal NiCalculationResult Gets the results of this employee's National Insurance calculation for this payrun. ref INiCalculationResult NiCalculationResult { get; } Property Value INiCalculationResult PayrunInfo Gets information about this payrun. ref IPayrunInfo PayrunInfo { get; } Property Value IPayrunInfo PensionContributionCalculationResult Gets the results of this employee's pension calculation for this payrun, if applicable.; null otherwise. ref IPensionContributionCalculationResult PensionContributionCalculationResult { get; } Property Value IPensionContributionCalculationResult StudentLoanCalculationResult Gets the results of this employee's student loan calculation for this payrun, if applicable; null otherwise. ref IStudentLoanCalculationResult StudentLoanCalculationResult { get; } Property Value IStudentLoanCalculationResult TaxablePay Gets the employee's total taxable pay, before the application of any tax-free pay. decimal TaxablePay { get; } Property Value decimal TaxCalculationResult Gets the results of this employee's income tax calculation for this payrun. ref ITaxCalculationResult TaxCalculationResult { get; } Property Value ITaxCalculationResult TotalGrossPay Gets the employee's total gross pay. decimal TotalGrossPay { get; } Property Value decimal"
  },
  "api/Payetools.Payroll.Model.IPayrolledBenefitForPeriod.html": {
    "href": "api/Payetools.Payroll.Model.IPayrolledBenefitForPeriod.html",
    "title": "Interface IPayrolledBenefitForPeriod | Paytools",
    "keywords": "Interface IPayrolledBenefitForPeriod Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Interface that represents the effect of a payrolled on a given pay reference period. public interface IPayrolledBenefitForPeriod : IPayrolledBenefit Properties AmountForPeriod Gets the amount of benefit to apply for the period. decimal AmountForPeriod { get; } Property Value decimal"
  },
  "api/Payetools.Payroll.Model.IPayrunInfo.html": {
    "href": "api/Payetools.Payroll.Model.IPayrunInfo.html",
    "title": "Interface IPayrunInfo | Paytools",
    "keywords": "Interface IPayrunInfo Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Not sure what goes here. public interface IPayrunInfo"
  },
  "api/Payetools.Payroll.Model.IPayrunResult.html": {
    "href": "api/Payetools.Payroll.Model.IPayrunResult.html",
    "title": "Interface IPayrunResult | Paytools",
    "keywords": "Interface IPayrunResult Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Interface that represents the output of a given payrun. public interface IPayrunResult : IEmployerInfoProvider Inherited Members IEmployerInfoProvider.Employer Properties EmployeePayrunEntries Gets the list of employee payrun entries. List<IEmployeePayrunResult> EmployeePayrunEntries { get; } Property Value List<IEmployeePayrunResult> PayDate Gets the pay date for this payrun. PayDate PayDate { get; } Property Value PayDate"
  },
  "api/Payetools.Payroll.Model.PayrolledBenefitForPeriod.html": {
    "href": "api/Payetools.Payroll.Model.PayrolledBenefitForPeriod.html",
    "title": "Class PayrolledBenefitForPeriod | Paytools",
    "keywords": "Class PayrolledBenefitForPeriod Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents a payrolled benefit as applicable to one payroll period. public record PayrolledBenefitForPeriod : IPayrolledBenefitForPeriod, IPayrolledBenefit, IEquatable<PayrolledBenefitForPeriod> Inheritance object PayrolledBenefitForPeriod Implements IPayrolledBenefitForPeriod IPayrolledBenefit IEquatable<PayrolledBenefitForPeriod> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrolledBenefitForPeriod(decimal) Initialises a new instance of PayrolledBenefitForPeriod. public PayrolledBenefitForPeriod(decimal amountForPeriod) Parameters amountForPeriod decimal Amount of the benefit for the period. Properties AmountForPeriod Gets the amount of benefit to apply for the period. public decimal AmountForPeriod { get; } Property Value decimal"
  },
  "api/Payetools.Payroll.Model.PayrunResult.html": {
    "href": "api/Payetools.Payroll.Model.PayrunResult.html",
    "title": "Class PayrunResult | Paytools",
    "keywords": "Class PayrunResult Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Represents the output of a payrun. public record PayrunResult : IPayrunResult, IEmployerInfoProvider, IEquatable<PayrunResult> Inheritance object PayrunResult Implements IPayrunResult IEmployerInfoProvider IEquatable<PayrunResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EmployeePayrunEntries Gets the list of employee payrun entries. public List<IEmployeePayrunResult> EmployeePayrunEntries { get; init; } Property Value List<IEmployeePayrunResult> Employer Gets the employer that this payrun refers to. public IEmployer Employer { get; init; } Property Value IEmployer PayDate Gets the pay date for this payrun. public PayDate PayDate { get; init; } Property Value PayDate"
  },
  "api/Payetools.Payroll.Model.PensionContributionLevels.html": {
    "href": "api/Payetools.Payroll.Model.PensionContributionLevels.html",
    "title": "Class PensionContributionLevels | Paytools",
    "keywords": "Class PensionContributionLevels Namespace Payetools.Payroll.Model Assembly Payetools.Payroll.dll Defines the levels to be applied for contributions into an employee's pension. public record PensionContributionLevels : IPensionContributionLevels, IEquatable<PensionContributionLevels> Inheritance object PensionContributionLevels Implements IPensionContributionLevels IEquatable<PensionContributionLevels> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvcForPeriod Gets any Additional Voluntary Contribution (AVC) on the part of the employee. public decimal? AvcForPeriod { get; init; } Property Value decimal? EmployeeContribution Gets the employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. public decimal EmployeeContribution { get; init; } Property Value decimal EmployeeContributionIsFixedAmount Gets a value indicating whether EmployeeContribution should be treated as a fixed amount. True if the employee contribution figure sshould be treated as a fixed amount; false if it should be treated as a percentage. public bool EmployeeContributionIsFixedAmount { get; init; } Property Value bool EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. public decimal EmployerContributionPercentage { get; init; } Property Value decimal EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. public decimal? EmployersNiReinvestmentPercentage { get; init; } Property Value decimal? SalaryExchangeApplied Gets a value indicating whether salary exchange should be applied. public bool SalaryExchangeApplied { get; init; } Property Value bool SalaryForMaternityPurposes Gets the value used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. public decimal? SalaryForMaternityPurposes { get; init; } Property Value decimal?"
  },
  "api/Payetools.Payroll.Payruns.html": {
    "href": "api/Payetools.Payroll.Payruns.html",
    "title": "Namespace Payetools.Payroll.Payruns | Paytools",
    "keywords": "Namespace Payetools.Payroll.Payruns Classes PayrunEntryProcessor Represents the calculator that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. PayrunProcessor Represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. PayrunProcessorFactory Represents a factory object that creates payrun calculator instances that implement IPayrunEntryProcessor. Interfaces IPayrunEntryProcessor Interface that represent types that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. IPayrunProcessor Interface that represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. IPayrunProcessorFactory Interface that represents factory objects that create instances that implement IPayrunProcessor."
  },
  "api/Payetools.Payroll.Payruns.IPayrunEntryProcessor.html": {
    "href": "api/Payetools.Payroll.Payruns.IPayrunEntryProcessor.html",
    "title": "Interface IPayrunEntryProcessor | Paytools",
    "keywords": "Interface IPayrunEntryProcessor Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Interface that represent types that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. public interface IPayrunEntryProcessor Properties PayDate Gets the pay date for this payrun calculator. PayDate PayDate { get; } Property Value PayDate PayPeriod Gets the pay period for this payrun calculator. PayReferencePeriod PayPeriod { get; } Property Value PayReferencePeriod Methods Process(IEmployeePayrunInputEntry, out IEmployeePayrunResult) Processes the supplied payrun entry calculating all the earnings and deductions, income tax, national insurance and other statutory deductions, and generating a result structure which includes the final net pay. void Process(IEmployeePayrunInputEntry entry, out IEmployeePayrunResult result) Parameters entry IEmployeePayrunInputEntry Instance of IEmployeePayrunInputEntry containing all the necessary input data for the payroll calculation. result IEmployeePayrunResult An instance of IEmployeePayrunResult containing the results of the payroll calculations."
  },
  "api/Payetools.Payroll.Payruns.IPayrunProcessor.html": {
    "href": "api/Payetools.Payroll.Payruns.IPayrunProcessor.html",
    "title": "Interface IPayrunProcessor | Paytools",
    "keywords": "Interface IPayrunProcessor Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Interface that represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. public interface IPayrunProcessor Methods Process(List<IEmployeePayrunInputEntry>, out IPayrunResult) Processes this payrun. void Process(List<IEmployeePayrunInputEntry> employeePayrunEntries, out IPayrunResult result) Parameters employeePayrunEntries List<IEmployeePayrunInputEntry> List of payrun information for each employee in the payrun. result IPayrunResult An instance of a class that implements IPayrunResult containing the results of this payrun."
  },
  "api/Payetools.Payroll.Payruns.IPayrunProcessorFactory.html": {
    "href": "api/Payetools.Payroll.Payruns.IPayrunProcessorFactory.html",
    "title": "Interface IPayrunProcessorFactory | Paytools",
    "keywords": "Interface IPayrunProcessorFactory Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Interface that represents factory objects that create instances that implement IPayrunProcessor. public interface IPayrunProcessorFactory Methods GetProcessorAsync(IEmployer, PayDate, PayReferencePeriod) Gets a payrun processor for specified pay date and pay period. Task<IPayrunProcessor> GetProcessorAsync(IEmployer employer, PayDate payDate, PayReferencePeriod payPeriod) Parameters employer IEmployer Employer for this payrun processor. payDate PayDate Applicable pay date for the required payrun processor. payPeriod PayReferencePeriod Applicable pay period for required payrun processor. Returns Task<IPayrunProcessor> An implementation of IPayrunProcessor for the specified pay date and pay period."
  },
  "api/Payetools.Payroll.Payruns.PayrunEntryProcessor.html": {
    "href": "api/Payetools.Payroll.Payruns.PayrunEntryProcessor.html",
    "title": "Class PayrunEntryProcessor | Paytools",
    "keywords": "Class PayrunEntryProcessor Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Represents the calculator that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. public class PayrunEntryProcessor : IPayrunEntryProcessor Inheritance object PayrunEntryProcessor Implements IPayrunEntryProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunEntryProcessor(ITaxCalculatorFactory, INiCalculatorFactory, IPensionContributionCalculatorFactory, IStudentLoanCalculatorFactory, PayDate, PayReferencePeriod) Initialises a new instance of PayrunEntryProcessor with the supplied factories and specified pay date. public PayrunEntryProcessor(ITaxCalculatorFactory incomeTaxCalcFactory, INiCalculatorFactory niCalcFactory, IPensionContributionCalculatorFactory pensionCalcFactory, IStudentLoanCalculatorFactory studentLoanCalcFactory, PayDate payDate, PayReferencePeriod payPeriod) Parameters incomeTaxCalcFactory ITaxCalculatorFactory Income tax calculator factory. niCalcFactory INiCalculatorFactory calculator factory. pensionCalcFactory IPensionContributionCalculatorFactory Pension contributions calculator factory. studentLoanCalcFactory IStudentLoanCalculatorFactory Student loan calculator factory. payDate PayDate Pay date for this payrun. payPeriod PayReferencePeriod Applicable pay period for this calculator. Properties PayDate Gets the pay date for this payrun calculator. public PayDate PayDate { get; } Property Value PayDate PayPeriod Gets the pay period for this payrun calculator. public PayReferencePeriod PayPeriod { get; } Property Value PayReferencePeriod Methods Process(IEmployeePayrunInputEntry, out IEmployeePayrunResult) Processes the supplied payrun entry calculating all the earnings and deductions, income tax, national insurance and other statutory deductions, and generating a result structure which includes the final net pay. public void Process(IEmployeePayrunInputEntry entry, out IEmployeePayrunResult result) Parameters entry IEmployeePayrunInputEntry Instance of IEmployeePayrunInputEntry containing all the necessary input data for the payroll calculation. result IEmployeePayrunResult An instance of IEmployeePayrunResult containing the results of the payroll calculations."
  },
  "api/Payetools.Payroll.Payruns.PayrunProcessor.html": {
    "href": "api/Payetools.Payroll.Payruns.PayrunProcessor.html",
    "title": "Class PayrunProcessor | Paytools",
    "keywords": "Class PayrunProcessor Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. public class PayrunProcessor : IPayrunProcessor Inheritance object PayrunProcessor Implements IPayrunProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunProcessor(IPayrunEntryProcessor, IEmployer) Initialises a new instance of PayrunProcessor with the supplied calculator. public PayrunProcessor(IPayrunEntryProcessor calculator, IEmployer employer) Parameters calculator IPayrunEntryProcessor Calculator to be used to calculate earnings, deductions and net pay. employer IEmployer Employer that this payrun processor relates to. Methods Process(List<IEmployeePayrunInputEntry>, out IPayrunResult) Processes this payrun. public void Process(List<IEmployeePayrunInputEntry> employeePayrunEntries, out IPayrunResult result) Parameters employeePayrunEntries List<IEmployeePayrunInputEntry> List of payrun information for each employee in the payrun. result IPayrunResult An instance of a class that implements IPayrunResult containing the results of this payrun."
  },
  "api/Payetools.Payroll.Payruns.PayrunProcessorFactory.html": {
    "href": "api/Payetools.Payroll.Payruns.PayrunProcessorFactory.html",
    "title": "Class PayrunProcessorFactory | Paytools",
    "keywords": "Class PayrunProcessorFactory Namespace Payetools.Payroll.Payruns Assembly Payetools.Payroll.dll Represents a factory object that creates payrun calculator instances that implement IPayrunEntryProcessor. public class PayrunProcessorFactory : IPayrunProcessorFactory Inheritance object PayrunProcessorFactory Implements IPayrunProcessorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunProcessorFactory(in IHmrcReferenceDataProvider) Initialises a new instance of PayrunProcessorFactory. public PayrunProcessorFactory(in IHmrcReferenceDataProvider hmrcReferenceDataProvider) Parameters hmrcReferenceDataProvider IHmrcReferenceDataProvider HMRC reference data provider. PayrunProcessorFactory(in IHmrcReferenceDataProviderFactory, in Uri) Initialises a new instance of PayrunProcessorFactory. public PayrunProcessorFactory(in IHmrcReferenceDataProviderFactory hmrcReferenceDataProviderFactory, in Uri referenceDataEndpoint) Parameters hmrcReferenceDataProviderFactory IHmrcReferenceDataProviderFactory HMRC reference data provider factory. referenceDataEndpoint Uri HTTP(S) endpoint to retrieve reference data from. Methods GetProcessorAsync(IEmployer, PayDate, PayReferencePeriod) Gets a payrun processor for specified pay date and pay period. public Task<IPayrunProcessor> GetProcessorAsync(IEmployer employer, PayDate payDate, PayReferencePeriod payPeriod) Parameters employer IEmployer Employer for this payrun processor. payDate PayDate Applicable pay date for the required payrun processor. payPeriod PayReferencePeriod Applicable pay period for required payrun processor. Returns Task<IPayrunProcessor> An implementation of IPayrunProcessor for the specified pay date and pay period."
  },
  "api/Payetools.Pensions.html": {
    "href": "api/Payetools.Pensions.html",
    "title": "Namespace Payetools.Pensions | Paytools",
    "keywords": "Namespace Payetools.Pensions Payetools.Pensions includes all pensions calculations. Note that it does not currently provide auto-enrolment assessment. Payetools.Pensions.Model Payetools.Pensions.ReferenceData Classes PensionablePaySetCalculator Represents a pension contribution calculator for Pensionable Pay Set 1, 2 and 3. PensionContributionCalculator Abstract class that represents different types of pension contribution calculators. PensionContributionCalculatorFactory Factory to generate IPensionContributionCalculator implementations that are for a given pay date, pay frequency, earnings basis and tax treatment. QualifyingEarningsContributionsCalculator Represents a pension contribution calculator for Qualifying Earnings. Interfaces IPensionContributionCalculator Interface for types that provide calculation of pension contributions, both under normal arrangements and under salary exchange (aka salary sacrifice). IPensionContributionCalculatorFactory Interface that represents factories that can generate IPensionContributionCalculator implementations."
  },
  "api/Payetools.Pensions.IPensionContributionCalculator.html": {
    "href": "api/Payetools.Pensions.IPensionContributionCalculator.html",
    "title": "Interface IPensionContributionCalculator | Paytools",
    "keywords": "Interface IPensionContributionCalculator Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Interface for types that provide calculation of pension contributions, both under normal arrangements and under salary exchange (aka salary sacrifice). public interface IPensionContributionCalculator Methods Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. void Calculate(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates, but under salary exchange arrangements. Here the output employee contribution will always be zero. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. void CalculateUnderSalaryExchange(decimal pensionableSalary, decimal employerContributionPercentage, decimal employerNiSavings, decimal employerNiSavingsReinvestmentPercentage, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employerNiSavings decimal Savings in employer's NI due to the salary exchanged. employerNiSavingsReinvestmentPercentage decimal Percentage of employer NI savings to be reinvested in the employee's pension, expressed in percentage points (i.e., 100% = 100.0m). employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. GetSalaryExchangedAmount(decimal, decimal, bool) Gets the absolute amount of employee salary exchanged, either as a result of a fixed amount being passed in, or as a percentage of pensionable salary (banded in the case of Qualifying Earnings. decimal GetSalaryExchangedAmount(decimal pensionableSalary, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. Returns decimal Value of employee salary being exchanged."
  },
  "api/Payetools.Pensions.IPensionContributionCalculatorFactory.html": {
    "href": "api/Payetools.Pensions.IPensionContributionCalculatorFactory.html",
    "title": "Interface IPensionContributionCalculatorFactory | Paytools",
    "keywords": "Interface IPensionContributionCalculatorFactory Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Interface that represents factories that can generate IPensionContributionCalculator implementations. public interface IPensionContributionCalculatorFactory Methods GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, PayDate) Gets a new IPensionContributionCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds (Qualifying Earnings only) and rates to use, noting that these may change in-year. IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, PayDate payDate) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). payDate PayDate Applicable pay date. Returns IPensionContributionCalculator A new calculator instance. GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, TaxYear, PayFrequency, int) Gets a new IPensionContributionCalculator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IPensionContributionCalculator A new calculator instance."
  },
  "api/Payetools.Pensions.Model.html": {
    "href": "api/Payetools.Pensions.Model.html",
    "title": "Namespace Payetools.Pensions.Model | Paytools",
    "keywords": "Namespace Payetools.Pensions.Model Classes PensionScheme Represents a workplace pension scheme. Structs PensionContributionCalculationResult Represents a pension contribution calculation result. Interfaces IPensionContributionCalculationResult Interface for types that model pension contribution calculation results. IPensionContributionLevels Interface that defines the levels to be applied for contributions into an employee's pension. IPensionScheme Interface for types that represent pension schemes."
  },
  "api/Payetools.Pensions.Model.IPensionContributionCalculationResult.html": {
    "href": "api/Payetools.Pensions.Model.IPensionContributionCalculationResult.html",
    "title": "Interface IPensionContributionCalculationResult | Paytools",
    "keywords": "Interface IPensionContributionCalculationResult Namespace Payetools.Pensions.Model Assembly Payetools.Pensions.dll Interface for types that model pension contribution calculation results. public interface IPensionContributionCalculationResult Properties BandedEarnings Gets the portion of earnings used to calculate the employee and employer contributions under Qualifying Earnings. Null for pensionable pay. decimal? BandedEarnings { get; } Property Value decimal? CalculatedEmployeeContributionAmount Gets the employee contribution amount resulting from the calculation. Will be zero if SalaryExchangeApplied is true. decimal CalculatedEmployeeContributionAmount { get; } Property Value decimal CalculatedEmployerContributionAmount Gets the employer contribution amount resulting from the calculation. IfSalaryExchangeApplied is true, includes both calculated amounts for employer and employee contributions and any NI reinvestment to be applied (based on the value of EmployersNiReinvestmentPercentage). decimal CalculatedEmployerContributionAmount { get; } Property Value decimal EarningsBasis Gets the earnings basis for the pension calculation (e.g., Qualifying Earnings). PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis EmployeeAvcAmount Gets any Additional Voluntary Contribution (AVC) made by the employee. decimal? EmployeeAvcAmount { get; } Property Value decimal? EmployeeContributionFixedAmount Gets the employee's fixed contribution amount, if applicable. If supplied, overrides EmployeeContributionPercentage. decimal? EmployeeContributionFixedAmount { get; } Property Value decimal? EmployeeContributionPercentage Gets the employee contribution percentage, expressed in percentage points, i.e., 5% = 5.0m. decimal? EmployeeContributionPercentage { get; } Property Value decimal? EmployerContributionAmountBeforeSalaryExchange Gets the portion of the total employer-only contribution made under salary exchange that pertains to the employer's contribution. decimal? EmployerContributionAmountBeforeSalaryExchange { get; } Property Value decimal? EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. decimal EmployerContributionPercentage { get; } Property Value decimal EmployerNiSavingsToReinvest Gets the amount of any employer NI savings that are to be re-invested in the employee's pension, adjusted by the value of EmployersNiReinvestmentPercentage. Only applies under salary exchange. decimal? EmployerNiSavingsToReinvest { get; } Property Value decimal? EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. decimal? EmployersNiReinvestmentPercentage { get; } Property Value decimal? PensionableSalaryInPeriod Gets the pensionable salary for the period. decimal PensionableSalaryInPeriod { get; } Property Value decimal SalaryExchangeApplied Gets a value indicating whether salary exchange has been applied. bool SalaryExchangeApplied { get; } Property Value bool SalaryExchangedAmount Gets the amount the employee's gross salary exchanged under a salary exchange arrangement. decimal? SalaryExchangedAmount { get; } Property Value decimal? TaxTreatment Gets the pension tax treatment to be applied, i.e., relief at source vs net pay arrangement. PensionTaxTreatment TaxTreatment { get; } Property Value PensionTaxTreatment"
  },
  "api/Payetools.Pensions.Model.IPensionContributionLevels.html": {
    "href": "api/Payetools.Pensions.Model.IPensionContributionLevels.html",
    "title": "Interface IPensionContributionLevels | Paytools",
    "keywords": "Interface IPensionContributionLevels Namespace Payetools.Pensions.Model Assembly Payetools.Pensions.dll Interface that defines the levels to be applied for contributions into an employee's pension. public interface IPensionContributionLevels Properties AvcForPeriod Gets any Additional Voluntary Contribution (AVC) on the part of the employee. decimal? AvcForPeriod { get; } Property Value decimal? EmployeeContribution Gets the employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. decimal EmployeeContribution { get; } Property Value decimal EmployeeContributionIsFixedAmount Gets a value indicating whether EmployeeContribution should be treated as a fixed amount. True if the employee contribution figure sshould be treated as a fixed amount; false if it should be treated as a percentage. bool EmployeeContributionIsFixedAmount { get; } Property Value bool EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. decimal EmployerContributionPercentage { get; } Property Value decimal EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. decimal? EmployersNiReinvestmentPercentage { get; } Property Value decimal? SalaryExchangeApplied Gets a value indicating whether salary exchange should be applied. bool SalaryExchangeApplied { get; } Property Value bool SalaryForMaternityPurposes Gets the value used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. decimal? SalaryForMaternityPurposes { get; } Property Value decimal?"
  },
  "api/Payetools.Pensions.Model.IPensionScheme.html": {
    "href": "api/Payetools.Pensions.Model.IPensionScheme.html",
    "title": "Interface IPensionScheme | Paytools",
    "keywords": "Interface IPensionScheme Namespace Payetools.Pensions.Model Assembly Payetools.Pensions.dll Interface for types that represent pension schemes. public interface IPensionScheme Remarks A IPensionScheme instance refers to a pension scheme with a specific provider, with specific tax treatment and earnings basis. Whilst it is not common for pension schemes to change tax treatment, it is quite possible for an employer to operate more than one type of earnings basis across its employee base. In this case, two (or more) instances of this type would be required, one for each earnings basis in use, even though all contributions might be flowing to a single scheme with the same provider. Properties EarningsBasis Gets the earnings basis for this pension scheme. PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis TaxTreatment Gets the tax treatment for this pension scheme. PensionTaxTreatment TaxTreatment { get; } Property Value PensionTaxTreatment"
  },
  "api/Payetools.Pensions.Model.PensionContributionCalculationResult.html": {
    "href": "api/Payetools.Pensions.Model.PensionContributionCalculationResult.html",
    "title": "Struct PensionContributionCalculationResult | Paytools",
    "keywords": "Struct PensionContributionCalculationResult Namespace Payetools.Pensions.Model Assembly Payetools.Pensions.dll Represents a pension contribution calculation result. public readonly struct PensionContributionCalculationResult : IPensionContributionCalculationResult Implements IPensionContributionCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties BandedEarnings Gets the portion of earnings used to calculate the employee and employer contributions under Qualifying Earnings. Null for pensionable pay. public decimal? BandedEarnings { get; init; } Property Value decimal? CalculatedEmployeeContributionAmount Gets the employee contribution amount resulting from the calculation. Will be zero if SalaryExchangeApplied is true. public decimal CalculatedEmployeeContributionAmount { get; init; } Property Value decimal CalculatedEmployerContributionAmount Gets the employer contribution amount resulting from the calculation. IfSalaryExchangeApplied is true, includes both calculated amounts for employer and employee contributions and any NI reinvestment to be applied (based on the value of EmployersNiReinvestmentPercentage). public decimal CalculatedEmployerContributionAmount { get; init; } Property Value decimal EarningsBasis Gets the earnings basis for the pension calculation (e.g., Qualifying Earnings). public PensionsEarningsBasis EarningsBasis { get; init; } Property Value PensionsEarningsBasis EmployeeAvcAmount Gets any Additional Voluntary Contribution (AVC) made by the employee. public decimal? EmployeeAvcAmount { get; init; } Property Value decimal? EmployeeContributionFixedAmount Gets the employee's fixed contribution amount, if applicable. If supplied, overrides EmployeeContributionPercentage. public decimal? EmployeeContributionFixedAmount { get; init; } Property Value decimal? EmployeeContributionPercentage Gets the employee contribution percentage, expressed in percentage points, i.e., 5% = 5.0m. public decimal? EmployeeContributionPercentage { get; init; } Property Value decimal? EmployerContributionAmountBeforeSalaryExchange Gets the portion of the total employer-only contribution made under salary exchange that pertains to the employer's contribution. public decimal? EmployerContributionAmountBeforeSalaryExchange { get; init; } Property Value decimal? EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. public decimal EmployerContributionPercentage { get; init; } Property Value decimal EmployerNiSavingsToReinvest Gets the amount of any employer NI savings that are to be re-invested in the employee's pension, adjusted by the value of EmployersNiReinvestmentPercentage. Only applies under salary exchange. public decimal? EmployerNiSavingsToReinvest { get; init; } Property Value decimal? EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. public decimal? EmployersNiReinvestmentPercentage { get; init; } Property Value decimal? NoPensionApplicable Gets an empty PensionContributionCalculationResult that indicates that no pension is applicable. public static IPensionContributionCalculationResult NoPensionApplicable { get; } Property Value IPensionContributionCalculationResult PensionableSalaryInPeriod Gets the pensionable salary for the period. public decimal PensionableSalaryInPeriod { get; init; } Property Value decimal SalaryExchangeApplied Gets a value indicating whether salary exchange has been applied. public bool SalaryExchangeApplied { get; init; } Property Value bool SalaryExchangedAmount Gets the amount the employee's gross salary exchanged under a salary exchange arrangement. public decimal? SalaryExchangedAmount { get; init; } Property Value decimal? TaxTreatment Gets the pension tax treatment to be applied, i.e., relief at source vs net pay arrangement. public PensionTaxTreatment TaxTreatment { get; init; } Property Value PensionTaxTreatment"
  },
  "api/Payetools.Pensions.Model.PensionScheme.html": {
    "href": "api/Payetools.Pensions.Model.PensionScheme.html",
    "title": "Class PensionScheme | Paytools",
    "keywords": "Class PensionScheme Namespace Payetools.Pensions.Model Assembly Payetools.Pensions.dll Represents a workplace pension scheme. public record PensionScheme : IPensionScheme, IEquatable<PensionScheme> Inheritance object PensionScheme Implements IPensionScheme IEquatable<PensionScheme> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EarningsBasis Gets the earnings basis for this pension scheme. public PensionsEarningsBasis EarningsBasis { get; init; } Property Value PensionsEarningsBasis TaxTreatment Gets the tax treatment for this pension scheme. public PensionTaxTreatment TaxTreatment { get; init; } Property Value PensionTaxTreatment"
  },
  "api/Payetools.Pensions.PensionablePaySetCalculator.html": {
    "href": "api/Payetools.Pensions.PensionablePaySetCalculator.html",
    "title": "Class PensionablePaySetCalculator | Paytools",
    "keywords": "Class PensionablePaySetCalculator Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Represents a pension contribution calculator for Pensionable Pay Set 1, 2 and 3. public class PensionablePaySetCalculator : PensionContributionCalculator, IPensionContributionCalculator Inheritance object PensionContributionCalculator PensionablePaySetCalculator Implements IPensionContributionCalculator Inherited Members PensionContributionCalculator.TaxReliefFactor PensionContributionCalculator.Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.GetSalaryExchangedAmount(decimal, decimal, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionablePaySetCalculator(PensionsEarningsBasis, PensionTaxTreatment, decimal?) Initialises a new instance of PensionablePaySetCalculator for the specified earnings basic and tax treatment. public PensionablePaySetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, decimal? basicRateOfTax = null) Parameters earningsBasis PensionsEarningsBasis Sepcifies the earnings basis for this calculator. Must be one of Pensionable Pay Set 1, Pensionable Pay Set 2 or Pensionable Pay Set 3. taxTreatment PensionTaxTreatment Tax treatment for the target pension, i.e., net pay arrangement vs relief at source. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Exceptions ArgumentException Thrown if an invalid earnings basis is supplied. Properties EarningsBasis Gets the earnings basis of this pension contribution calculator i.e., Qualifying Earnings vs Pensionable Pay Set X. public override PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis Methods CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected override (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount = false, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected override decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation."
  },
  "api/Payetools.Pensions.PensionContributionCalculator.html": {
    "href": "api/Payetools.Pensions.PensionContributionCalculator.html",
    "title": "Class PensionContributionCalculator | Paytools",
    "keywords": "Class PensionContributionCalculator Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Abstract class that represents different types of pension contribution calculators. public abstract class PensionContributionCalculator : IPensionContributionCalculator Inheritance object PensionContributionCalculator Implements IPensionContributionCalculator Derived PensionablePaySetCalculator QualifyingEarningsContributionsCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionContributionCalculator(PensionTaxTreatment, decimal?) Initialises a new instance of PensionContributionCalculator with the supplied tax treatment and optional basic rate of tax (needed for relief at source pensions only). public PensionContributionCalculator(PensionTaxTreatment taxTreatment, decimal? basicRateOfTax = null) Parameters taxTreatment PensionTaxTreatment Tax treatment i.e., relief at source vs net pay arrangement. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Optional. Exceptions ArgumentException Thrown if no basic rate of tax is supplied for a relief at source pension. Properties EarningsBasis Gets the earnings basis of this pension contribution calculator i.e., Qualifying Earnings vs Pensionable Pay Set X. public abstract PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis TaxReliefFactor Gets the tax relief factor to apply for relief at source pensions. For example, if the basic rate of tax is 20%, then the tax relief factor is 0.8. protected decimal TaxReliefFactor { get; } Property Value decimal Methods Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. public virtual void Calculate(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected abstract (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates, but under salary exchange arrangements. Here the output employee contribution will always be zero. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. public void CalculateUnderSalaryExchange(decimal pensionableSalary, decimal employerContributionPercentage, decimal employerNiSavings, decimal employerNiSavingsReinvestmentPercentage, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employerNiSavings decimal Savings in employer's NI due to the salary exchanged. employerNiSavingsReinvestmentPercentage decimal Percentage of employer NI savings to be reinvested in the employee's pension, expressed in percentage points (i.e., 100% = 100.0m). employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected abstract decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation. GetSalaryExchangedAmount(decimal, decimal, bool) Gets the absolute amount of employee salary exchanged, either as a result of a fixed amount being passed in, or as a percentage of pensionable salary (banded in the case of Qualifying Earnings. public decimal GetSalaryExchangedAmount(decimal pensionableSalary, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. Returns decimal Value of employee salary being exchanged."
  },
  "api/Payetools.Pensions.PensionContributionCalculatorFactory.html": {
    "href": "api/Payetools.Pensions.PensionContributionCalculatorFactory.html",
    "title": "Class PensionContributionCalculatorFactory | Paytools",
    "keywords": "Class PensionContributionCalculatorFactory Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Factory to generate IPensionContributionCalculator implementations that are for a given pay date, pay frequency, earnings basis and tax treatment. public class PensionContributionCalculatorFactory : IPensionContributionCalculatorFactory Inheritance object PensionContributionCalculatorFactory Implements IPensionContributionCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionContributionCalculatorFactory(IPensionsReferenceDataProvider) Initialises a new instance of PensionContributionCalculatorFactory with the supplied reference data provider. public PensionContributionCalculatorFactory(IPensionsReferenceDataProvider provider) Parameters provider IPensionsReferenceDataProvider Reference data provider for pensions. Methods GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, PayDate) Gets a new IPensionContributionCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds (Qualifying Earnings only) and rates to use, noting that these may change in-year. public IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, PayDate payDate) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). payDate PayDate Applicable pay date. Returns IPensionContributionCalculator A new calculator instance. Exceptions ArgumentException Thrown if an unsupported earnings basis is provided. GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, TaxYear, PayFrequency, int) Gets a new IPensionContributionCalculator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may (but rarely do) change in-year. public IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IPensionContributionCalculator A new calculator instance. Exceptions ArgumentException Thrown if an unsupported earnings basis is provided."
  },
  "api/Payetools.Pensions.QualifyingEarningsContributionsCalculator.html": {
    "href": "api/Payetools.Pensions.QualifyingEarningsContributionsCalculator.html",
    "title": "Class QualifyingEarningsContributionsCalculator | Paytools",
    "keywords": "Class QualifyingEarningsContributionsCalculator Namespace Payetools.Pensions Assembly Payetools.Pensions.dll Represents a pension contribution calculator for Qualifying Earnings. public class QualifyingEarningsContributionsCalculator : PensionContributionCalculator, IPensionContributionCalculator Inheritance object PensionContributionCalculator QualifyingEarningsContributionsCalculator Implements IPensionContributionCalculator Inherited Members PensionContributionCalculator.TaxReliefFactor PensionContributionCalculator.Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.GetSalaryExchangedAmount(decimal, decimal, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QualifyingEarningsContributionsCalculator(PensionTaxTreatment, decimal, decimal, decimal?) Initialises a new instance of QualifyingEarningsContributionsCalculator with the specified tax treatment, using the lower and upper thresholds supplied. public QualifyingEarningsContributionsCalculator(PensionTaxTreatment taxTreatment, decimal lowerLevelForQualifyingEarnings, decimal upperLevelForQualifyingEarnings, decimal? basicRateOfTax = null) Parameters taxTreatment PensionTaxTreatment Tax treatment for the target pension, i.e., net pay arrangement vs relief at source. lowerLevelForQualifyingEarnings decimal HMRC/TPR-supplied lower level for qualifying earnings. upperLevelForQualifyingEarnings decimal HMRC/TPR-supplied upper level for qualifying earnings. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Properties EarningsBasis Gets the earnings basis for this calculator. Always returns QualifyingEarnings. public override PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis Methods CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected override (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount = false, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected override decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation."
  },
  "api/Payetools.Pensions.ReferenceData.html": {
    "href": "api/Payetools.Pensions.ReferenceData.html",
    "title": "Namespace Payetools.Pensions.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.Pensions.ReferenceData Interfaces IPensionsReferenceDataProvider Interface that classes implement in order to provide access to pensions reference data, i.e., rates and thresholds. IPensionsReferenceDataSet Interface that classes must implement to provide access to pensions reference data, for example, lower and upper thesholds for Qualifying Earnings. IPensionsThresholdEntry Interface for types that provide access to a given set of pensions threshold values."
  },
  "api/Payetools.Pensions.ReferenceData.IPensionsReferenceDataProvider.html": {
    "href": "api/Payetools.Pensions.ReferenceData.IPensionsReferenceDataProvider.html",
    "title": "Interface IPensionsReferenceDataProvider | Paytools",
    "keywords": "Interface IPensionsReferenceDataProvider Namespace Payetools.Pensions.ReferenceData Assembly Payetools.Pensions.dll Interface that classes implement in order to provide access to pensions reference data, i.e., rates and thresholds. public interface IPensionsReferenceDataProvider Methods GetBasicRateOfTaxForTaxRelief(TaxYear, PayFrequency, int) Gets the basic rate of tax applicable across all tax regimes for relief at source pension contributions, for the specified tax year. (As at the time of writing, one basic rate of tax is used across all jurisdictions in spite of the fact that some have a lower basic rate of tax.) decimal GetBasicRateOfTaxForTaxRelief(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. Only used if there has been an in-year change. taxPeriod int Applicable tax period. Only used if there has been an in-year change. Returns decimal Basic rate of tax applicable for the tax year. GetThresholdsForQualifyingEarnings(TaxYear, PayFrequency, int) Gets the thresholds for Qualifying Earnings for the specified tax year and tax period, as denoted by the supplied pay frequency and pay period. (decimal LowerLimit, decimal UpperLimit) GetThresholdsForQualifyingEarnings(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns (decimal employeeTotal, decimal employerTotal) A tuple containing the lower and upper thresholds for the specified pay frequency and point in time."
  },
  "api/Payetools.Pensions.ReferenceData.IPensionsReferenceDataSet.html": {
    "href": "api/Payetools.Pensions.ReferenceData.IPensionsReferenceDataSet.html",
    "title": "Interface IPensionsReferenceDataSet | Paytools",
    "keywords": "Interface IPensionsReferenceDataSet Namespace Payetools.Pensions.ReferenceData Assembly Payetools.Pensions.dll Interface that classes must implement to provide access to pensions reference data, for example, lower and upper thesholds for Qualifying Earnings. public interface IPensionsReferenceDataSet Properties EarningsTriggerForAutoEnrolment Gets the earnings trigger for Auto-Enrolment for each pay frequency. IPensionsThresholdEntry EarningsTriggerForAutoEnrolment { get; } Property Value IPensionsThresholdEntry LowerLevelForQualifyingEarnings Gets the lower level for Qualifying Earnings for each pay frequency. IPensionsThresholdEntry LowerLevelForQualifyingEarnings { get; } Property Value IPensionsThresholdEntry UpperLevelForQualifyingEarnings Gets the upper level for Qualifying Earnings for each pay frequency. IPensionsThresholdEntry UpperLevelForQualifyingEarnings { get; } Property Value IPensionsThresholdEntry"
  },
  "api/Payetools.Pensions.ReferenceData.IPensionsThresholdEntry.html": {
    "href": "api/Payetools.Pensions.ReferenceData.IPensionsThresholdEntry.html",
    "title": "Interface IPensionsThresholdEntry | Paytools",
    "keywords": "Interface IPensionsThresholdEntry Namespace Payetools.Pensions.ReferenceData Assembly Payetools.Pensions.dll Interface for types that provide access to a given set of pensions threshold values. public interface IPensionsThresholdEntry Properties ThresholdValuePerFourWeeks Gets the per 4-week value of the threshold. decimal ThresholdValuePerFourWeeks { get; } Property Value decimal ThresholdValuePerHalfYear Gets the per half-year value of the threshold. decimal ThresholdValuePerHalfYear { get; } Property Value decimal ThresholdValuePerMonth Gets the per month value of the threshold. decimal ThresholdValuePerMonth { get; } Property Value decimal ThresholdValuePerQuarter Gets the per quarter value of the threshold. decimal ThresholdValuePerQuarter { get; } Property Value decimal ThresholdValuePerTwoWeeks Gets the per 2-week value of the threshold. decimal ThresholdValuePerTwoWeeks { get; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. decimal ThresholdValuePerWeek { get; } Property Value decimal ThresholdValuePerYear Gets the per annum value of the threshold. decimal ThresholdValuePerYear { get; } Property Value decimal"
  },
  "api/Payetools.ReferenceData.Calendar.CountryEntry.html": {
    "href": "api/Payetools.ReferenceData.Calendar.CountryEntry.html",
    "title": "Class CountryEntry | Paytools",
    "keywords": "Class CountryEntry Namespace Payetools.ReferenceData.Calendar Assembly Payetools.ReferenceData.dll Represents a data set of public holiday data for a specific country or countries within the UK. public class CountryEntry Inheritance object CountryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Division Gets the country division this data set applies to. [JsonPropertyName(\"division\")] public string Division { get; init; } Property Value string Events Gets a list of public holiday \"events\" as an array. [JsonPropertyName(\"events\")] public Event[] Events { get; init; } Property Value Event[]"
  },
  "api/Payetools.ReferenceData.Calendar.Event.html": {
    "href": "api/Payetools.ReferenceData.Calendar.Event.html",
    "title": "Class Event | Paytools",
    "keywords": "Class Event Namespace Payetools.ReferenceData.Calendar Assembly Payetools.ReferenceData.dll Represents a public holiday \"event\". public class Event Inheritance object Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Bunting Gets a value indicating whether \"bunting\" for this public holiday event is true or false. Who knows what this means... [JsonPropertyName(\"bunting\")] public bool Bunting { get; init; } Property Value bool Date Gets the date of this public holiday event. [JsonPropertyName(\"date\")] public DateOnly Date { get; init; } Property Value DateOnly Description Gets the description of this public holiday event. [JsonPropertyName(\"title\")] public string Description { get; init; } Property Value string Notes Gets any notes associated with this public holiday event. [JsonPropertyName(\"notes\")] public string Notes { get; init; } Property Value string"
  },
  "api/Payetools.ReferenceData.Calendar.html": {
    "href": "api/Payetools.ReferenceData.Calendar.html",
    "title": "Namespace Payetools.ReferenceData.Calendar | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.Calendar Classes CountryEntry Represents a data set of public holiday data for a specific country or countries within the UK. Event Represents a public holiday \"event\". PublicHolidaysCatalog Used to deserialise the public holiday dataset from gov.uk available at https://www.gov.uk/bank-holidays.json."
  },
  "api/Payetools.ReferenceData.Calendar.PublicHolidaysCatalog.html": {
    "href": "api/Payetools.ReferenceData.Calendar.PublicHolidaysCatalog.html",
    "title": "Class PublicHolidaysCatalog | Paytools",
    "keywords": "Class PublicHolidaysCatalog Namespace Payetools.ReferenceData.Calendar Assembly Payetools.ReferenceData.dll Used to deserialise the public holiday dataset from gov.uk available at https://www.gov.uk/bank-holidays.json. public record PublicHolidaysCatalog : IEquatable<PublicHolidaysCatalog> Inheritance object PublicHolidaysCatalog Implements IEquatable<PublicHolidaysCatalog> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglandAndWales Gets the public holiday information for England and Wales. [JsonPropertyName(\"england-and-wales\")] public CountryEntry EnglandAndWales { get; init; } Property Value CountryEntry NorthernIreland Gets the public holiday information for Scotland. [JsonPropertyName(\"northern-ireland\")] public CountryEntry NorthernIreland { get; init; } Property Value CountryEntry Scotland Gets the public holiday information for Scotland. [JsonPropertyName(\"scotland\")] public CountryEntry Scotland { get; init; } Property Value CountryEntry"
  },
  "api/Payetools.ReferenceData.HmrcReferenceDataProviderFactory.html": {
    "href": "api/Payetools.ReferenceData.HmrcReferenceDataProviderFactory.html",
    "title": "Class HmrcReferenceDataProviderFactory | Paytools",
    "keywords": "Class HmrcReferenceDataProviderFactory Namespace Payetools.ReferenceData Assembly Payetools.ReferenceData.dll Factory class that is used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. public class HmrcReferenceDataProviderFactory : IHmrcReferenceDataProviderFactory Inheritance object HmrcReferenceDataProviderFactory Implements IHmrcReferenceDataProviderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HmrcReferenceDataProviderFactory(ILogger<HmrcReferenceDataProviderFactory>?) Initialises a new instance of HmrcReferenceDataProviderFactory for use with Streams; do not use this constructor if accessing HMRC reference data over HTTP(S) is required. public HmrcReferenceDataProviderFactory(ILogger<HmrcReferenceDataProviderFactory>? logger = null) Parameters logger ILogger<HmrcReferenceDataProviderFactory> An implementation of ILogger<TCategoryName> used for logging. HmrcReferenceDataProviderFactory(IHttpClientFactory, ILogger<HmrcReferenceDataProviderFactory>?) Initialises a new instance of HmrcReferenceDataProviderFactory. An IHttpClientFactory is required to provide HttpClient instances to retrieve the reference data from the cloud. public HmrcReferenceDataProviderFactory(IHttpClientFactory httpClientFactory, ILogger<HmrcReferenceDataProviderFactory>? logger = null) Parameters httpClientFactory IHttpClientFactory Implementation of IHttpClientFactory. logger ILogger<HmrcReferenceDataProviderFactory> An implementation of ILogger<TCategoryName> used for logging. Methods CreateProviderAsync(Stream[]) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data loaded from an array of streams. public Task<IHmrcReferenceDataProvider> CreateProviderAsync(Stream[] referenceDataStreams) Parameters referenceDataStreams Stream[] Array of data streams to load HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to load reference data from the supplied set of streams. CreateProviderAsync(Uri) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data returned from an HTTP(S) endpoint. public Task<IHmrcReferenceDataProvider> CreateProviderAsync(Uri referenceDataEndpoint) Parameters referenceDataEndpoint Uri The HTTP(S) endpoint to retrieve HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to retrieve reference data from the supplied endpoint. InvalidOperationException Thrown if this factory was created without a valid IHttpClientFactory instance."
  },
  "api/Payetools.ReferenceData.HmrcTaxYearReferenceDataSet.html": {
    "href": "api/Payetools.ReferenceData.HmrcTaxYearReferenceDataSet.html",
    "title": "Class HmrcTaxYearReferenceDataSet | Paytools",
    "keywords": "Class HmrcTaxYearReferenceDataSet Namespace Payetools.ReferenceData Assembly Payetools.ReferenceData.dll Data structure used to represent HMRC reference data for a given tax year. public class HmrcTaxYearReferenceDataSet Inheritance object HmrcTaxYearReferenceDataSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableTaxYearEnding Gets the tax year to which this data set applies. public TaxYearEnding ApplicableTaxYearEnding { get; init; } Property Value TaxYearEnding IncomeTax Gets a set of IncomeTaxReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<IncomeTaxReferenceDataEntry> IncomeTax { get; init; } Property Value List<IncomeTaxReferenceDataEntry> LatestUpdateTimestamp Gets the latest update timestamp for this data set. public DateTime LatestUpdateTimestamp { get; init; } Property Value DateTime NationalInsurance Gets a set of NiReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<NiReferenceDataEntry> NationalInsurance { get; init; } Property Value List<NiReferenceDataEntry> NationalMinimumWage Gets a set of NmwReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<NmwReferenceDataEntry> NationalMinimumWage { get; init; } Property Value List<NmwReferenceDataEntry> Pensions Gets a set of PensionsReferenceDataSets, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<PensionsReferenceDataSet> Pensions { get; init; } Property Value List<PensionsReferenceDataSet> StudentLoans Gets a set of StudentLoanReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<StudentLoanReferenceDataEntry> StudentLoans { get; init; } Property Value List<StudentLoanReferenceDataEntry> Version Gets the version of this data set. Every time the data set is updated centrally, the version number is incremented. public string Version { get; init; } Property Value string"
  },
  "api/Payetools.ReferenceData.html": {
    "href": "api/Payetools.ReferenceData.html",
    "title": "Namespace Payetools.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.ReferenceData Payetools.ReferenceData provides the reference data (tax and NI rates, thresholds, etc.) needed for payroll calculations. Payetools.ReferenceData.Calendar Payetools.ReferenceData.IncomeTax Payetools.ReferenceData.NationalInsurance Payetools.ReferenceData.NationalMinimumWage Payetools.ReferenceData.Pensions Payetools.ReferenceData.Serialization Payetools.ReferenceData.StudentLoans Classes HmrcReferenceDataProviderFactory Factory class that is used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. HmrcTaxYearReferenceDataSet Data structure used to represent HMRC reference data for a given tax year. Interfaces IHmrcReferenceDataProvider Interface that HMRC reference data providers must implement. IHmrcReferenceDataProviderFactory Interface for factory classes that are used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider."
  },
  "api/Payetools.ReferenceData.IHmrcReferenceDataProvider.html": {
    "href": "api/Payetools.ReferenceData.IHmrcReferenceDataProvider.html",
    "title": "Interface IHmrcReferenceDataProvider | Paytools",
    "keywords": "Interface IHmrcReferenceDataProvider Namespace Payetools.ReferenceData Assembly Payetools.ReferenceData.dll Interface that HMRC reference data providers must implement. public interface IHmrcReferenceDataProvider : ITaxReferenceDataProvider, INiReferenceDataProvider, IPensionsReferenceDataProvider, INmwReferenceDataProvider, IStudentLoanReferenceDataProvider Inherited Members ITaxReferenceDataProvider.GetTaxBandsForTaxYearAndPeriod(TaxYear, PayFrequency, int) INiReferenceDataProvider.GetNiThresholdsForPayDate(PayDate) INiReferenceDataProvider.GetNiRatesForPayDate(PayDate) INiReferenceDataProvider.GetDirectorsNiRatesForPayDate(PayDate) IPensionsReferenceDataProvider.GetThresholdsForQualifyingEarnings(TaxYear, PayFrequency, int) IPensionsReferenceDataProvider.GetBasicRateOfTaxForTaxRelief(TaxYear, PayFrequency, int) INmwReferenceDataProvider.GetNmwLevelsForTaxYearAndPeriod(TaxYear, PayFrequency, int) IStudentLoanReferenceDataProvider.GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) IStudentLoanReferenceDataProvider.GetStudentLoanRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Properties Health Gets the human-readable 'health' of this reference data provider. string Health { get; } Property Value string"
  },
  "api/Payetools.ReferenceData.IHmrcReferenceDataProviderFactory.html": {
    "href": "api/Payetools.ReferenceData.IHmrcReferenceDataProviderFactory.html",
    "title": "Interface IHmrcReferenceDataProviderFactory | Paytools",
    "keywords": "Interface IHmrcReferenceDataProviderFactory Namespace Payetools.ReferenceData Assembly Payetools.ReferenceData.dll Interface for factory classes that are used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. public interface IHmrcReferenceDataProviderFactory Remarks If the CreateProviderAsync method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Methods CreateProviderAsync(Stream[]) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data loaded from an array of streams. Task<IHmrcReferenceDataProvider> CreateProviderAsync(Stream[] referenceDataStreams) Parameters referenceDataStreams Stream[] Array of data streams to load HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. CreateProviderAsync(Uri) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data returned from an HTTP(S) endpoint. Task<IHmrcReferenceDataProvider> CreateProviderAsync(Uri referenceDataEndpoint) Parameters referenceDataEndpoint Uri The HTTP(S) endpoint to retrieve HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to retrieve reference data from the supplied endpoint. InvalidOperationException Thrown if this factory was created without a valid IHttpClientFactory instance."
  },
  "api/Payetools.ReferenceData.IncomeTax.html": {
    "href": "api/Payetools.ReferenceData.IncomeTax.html",
    "title": "Namespace Payetools.ReferenceData.IncomeTax | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.IncomeTax Classes IncomeTaxBandEntry Record that represents a set of tax bands for a given tax regime (as specified by the ApplicableCountries property). IncomeTaxDeductionBand Record that details a single tax band for a given tax regime. IncomeTaxReferenceDataEntry Represents a set of tax bands for a given tax regime for a period, typically a full tax year. Structs PersonalAllowance Represents a given personal allowance value for a specific pay frequency."
  },
  "api/Payetools.ReferenceData.IncomeTax.IncomeTaxBandEntry.html": {
    "href": "api/Payetools.ReferenceData.IncomeTax.IncomeTaxBandEntry.html",
    "title": "Class IncomeTaxBandEntry | Paytools",
    "keywords": "Class IncomeTaxBandEntry Namespace Payetools.ReferenceData.IncomeTax Assembly Payetools.ReferenceData.dll Record that represents a set of tax bands for a given tax regime (as specified by the ApplicableCountries property). public record IncomeTaxBandEntry : IEquatable<IncomeTaxBandEntry> Inheritance object IncomeTaxBandEntry Implements IEquatable<IncomeTaxBandEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableCountries Gets the set of countries within the UK that this set of tax bands refer to. public CountriesForTaxPurposes ApplicableCountries { get; init; } Property Value CountriesForTaxPurposes PersonalAllowances Gets the set of personal allowances applicable to this tax regime. public ImmutableArray<PersonalAllowance> PersonalAllowances { get; init; } Property Value ImmutableArray<PersonalAllowance> TaxBands Gets the set of tax bands applicable. public ImmutableArray<IncomeTaxDeductionBand> TaxBands { get; init; } Property Value ImmutableArray<IncomeTaxDeductionBand> Methods GetTaxBandwidthEntries() Gets an array of TaxBandwidthEntrys that correspond to the elements of the TaxBands property. public TaxBandwidthEntry[] GetTaxBandwidthEntries() Returns TaxBandwidthEntry[] Tax bandwidth entries as an array of TaxBandwidthEntrys."
  },
  "api/Payetools.ReferenceData.IncomeTax.IncomeTaxDeductionBand.html": {
    "href": "api/Payetools.ReferenceData.IncomeTax.IncomeTaxDeductionBand.html",
    "title": "Class IncomeTaxDeductionBand | Paytools",
    "keywords": "Class IncomeTaxDeductionBand Namespace Payetools.ReferenceData.IncomeTax Assembly Payetools.ReferenceData.dll Record that details a single tax band for a given tax regime. public record IncomeTaxDeductionBand : IEquatable<IncomeTaxDeductionBand> Inheritance object IncomeTaxDeductionBand Implements IEquatable<IncomeTaxDeductionBand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Gets the description of this tax band. public string Description { get; init; } Property Value string From Gets the taxable earnings threshold from which this tax band applies. public decimal? From { get; init; } Property Value decimal? IsBottomRate Gets a value indicating whether this band refers to the bottom rate of tax. public bool IsBottomRate { get; } Property Value bool IsTopRate Gets a value indicating whether this band refers to the top rate of tax. public bool IsTopRate { get; } Property Value bool Rate Gets the applicable tax rate. NB Tax rates are normally expressed as percentages; values here are fractional i.e., 20% = 0.2m. public decimal Rate { get; init; } Property Value decimal To Gets the taxable earnings threshold up to which this tax band applies. public decimal? To { get; init; } Property Value decimal?"
  },
  "api/Payetools.ReferenceData.IncomeTax.IncomeTaxReferenceDataEntry.html": {
    "href": "api/Payetools.ReferenceData.IncomeTax.IncomeTaxReferenceDataEntry.html",
    "title": "Class IncomeTaxReferenceDataEntry | Paytools",
    "keywords": "Class IncomeTaxReferenceDataEntry Namespace Payetools.ReferenceData.IncomeTax Assembly Payetools.ReferenceData.dll Represents a set of tax bands for a given tax regime for a period, typically a full tax year. public record IncomeTaxReferenceDataEntry : IApplicableFromTill, IEquatable<IncomeTaxReferenceDataEntry> Inheritance object IncomeTaxReferenceDataEntry Implements IApplicableFromTill IEquatable<IncomeTaxReferenceDataEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly TaxEntries Gets a read-only list of applicable tax bands. public ImmutableList<IncomeTaxBandEntry> TaxEntries { get; init; } Property Value ImmutableList<IncomeTaxBandEntry>"
  },
  "api/Payetools.ReferenceData.IncomeTax.PersonalAllowance.html": {
    "href": "api/Payetools.ReferenceData.IncomeTax.PersonalAllowance.html",
    "title": "Struct PersonalAllowance | Paytools",
    "keywords": "Struct PersonalAllowance Namespace Payetools.ReferenceData.IncomeTax Assembly Payetools.ReferenceData.dll Represents a given personal allowance value for a specific pay frequency. public readonly struct PersonalAllowance Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties PayFrequency Gets the pay frequency applicable to this personal allowance value. public PayFrequency PayFrequency { get; init; } Property Value PayFrequency Value Gets the personal allowance value for this pay frequency. public decimal Value { get; init; } Property Value decimal"
  },
  "api/Payetools.ReferenceData.NationalInsurance.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.html",
    "title": "Namespace Payetools.ReferenceData.NationalInsurance | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.NationalInsurance Classes NiCategoryRatesEntry Represents a set of National Insurance rates applicable to a specific NI category. NiCategoryRateSet Represents a set of National Insurance rates across all NI categories. Each NI category specifies its own set rate of rates across the various NI thresholds. NiEmployeeRatesEntry Record that represents the employee NI rates to be applied at various earnings thresholds. NiEmployerRatesEntry Record that represents the employee NI rates to be applied at various earnings thresholds. NiReferenceDataEntry Represents a set of Ni thresholds and rates for a period; where there have been in-year changes, then there may be several such entries for a given tax year. NiReferenceDataThresholdEntry Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only."
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiCategoryRatesEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiCategoryRatesEntry.html",
    "title": "Class NiCategoryRatesEntry | Paytools",
    "keywords": "Class NiCategoryRatesEntry Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Represents a set of National Insurance rates applicable to a specific NI category. public record NiCategoryRatesEntry : INiCategoryRatesEntry, IEquatable<NiCategoryRatesEntry> Inheritance object NiCategoryRatesEntry Implements INiCategoryRatesEntry IEquatable<NiCategoryRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NiCategoryRatesEntry(NiCategory) Initialises a new instance of NiCategoryRatesEntry for the specified NI category. public NiCategoryRatesEntry(NiCategory category) Parameters category NiCategory NI category for this NiCategoryRatesEntry. Properties Category Gets the applicable National Insurance Category. public NiCategory Category { get; } Property Value NiCategory EmployeeRateAboveUEL Gets or sets the employee rate for balance of earnings above upper earnings limit. public decimal EmployeeRateAboveUEL { get; set; } Property Value decimal EmployeeRatePTToUEL Gets or sets the employee rate for earnings above the primary threshold up to and including upper earnings limit. public decimal EmployeeRatePTToUEL { get; set; } Property Value decimal EmployeeRateToPT Gets or sets the employee rate for earnings at or above lower earnings limit up to and including primary threshold. public decimal EmployeeRateToPT { get; set; } Property Value decimal EmployerRateAboveUEL Gets or sets the employer rate for balance of earnings above upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. public decimal EmployerRateAboveUEL { get; set; } Property Value decimal EmployerRateFUSTtoUEL Gets or sets the employer rate for earnings above Freeport upper secondary threshold up to and including upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. public decimal EmployerRateFUSTtoUEL { get; set; } Property Value decimal EmployerRateLELtoST Gets or sets the employer rate for earnings at or above lower earnings limit up to and including secondary threshold,. public decimal EmployerRateLELtoST { get; set; } Property Value decimal EmployerRateSTtoFUST Gets or sets the employer rate for earnings above secondary threshold up to and including Freeport upper secondary threshold. public decimal EmployerRateSTtoFUST { get; set; } Property Value decimal Methods ToString() Gets a string representation of this NiCategoryRatesEntry. public override string ToString() Returns string String representation of this instance."
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiCategoryRateSet.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiCategoryRateSet.html",
    "title": "Class NiCategoryRateSet | Paytools",
    "keywords": "Class NiCategoryRateSet Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Represents a set of National Insurance rates across all NI categories. Each NI category specifies its own set rate of rates across the various NI thresholds. public record NiCategoryRateSet : IEquatable<NiCategoryRateSet> Inheritance object NiCategoryRateSet Implements IEquatable<NiCategoryRateSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCategoryRateSet() Initialises a new instance of NiCategoryRateSet. public NiCategoryRateSet() Methods GetRatesForCategory(NiCategory) Gets the set of NI rates applicable to the specified NiCategory. public INiCategoryRatesEntry GetRatesForCategory(NiCategory category) Parameters category NiCategory NI category to retrieve the applicable rates for. Returns INiCategoryRatesEntry Set of rates applicable to the specified NI category."
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiEmployeeRatesEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiEmployeeRatesEntry.html",
    "title": "Class NiEmployeeRatesEntry | Paytools",
    "keywords": "Class NiEmployeeRatesEntry Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Record that represents the employee NI rates to be applied at various earnings thresholds. public record NiEmployeeRatesEntry : IEquatable<NiEmployeeRatesEntry> Inheritance object NiEmployeeRatesEntry Implements IEquatable<NiEmployeeRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ForEarningsAbovePTUpToAndIncludingUEL Gets the employee rate applicable for earnings between the Primary Threshold and the Upper Earnings Limit. public decimal ForEarningsAbovePTUpToAndIncludingUEL { get; init; } Property Value decimal ForEarningsAboveUEL Gets the employee rate applicable for earnings above the Upper Earnings Limit. public decimal ForEarningsAboveUEL { get; init; } Property Value decimal ForEarningsAtOrAboveLELUpTAndIncludingPT Gets the employee rate applicable for earnings between the Lower Earnings Limit and the Primary Threshold. public decimal ForEarningsAtOrAboveLELUpTAndIncludingPT { get; init; } Property Value decimal NiCategories Gets the list of applicable NI categories for this rates entry. public ImmutableList<NiCategory> NiCategories { get; init; } Property Value ImmutableList<NiCategory>"
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiEmployerRatesEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiEmployerRatesEntry.html",
    "title": "Class NiEmployerRatesEntry | Paytools",
    "keywords": "Class NiEmployerRatesEntry Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Record that represents the employee NI rates to be applied at various earnings thresholds. public record NiEmployerRatesEntry : IEquatable<NiEmployerRatesEntry> Inheritance object NiEmployerRatesEntry Implements IEquatable<NiEmployerRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ForEarningsAboveFUSTUpToAndIncludingUELOrUST Gets the employer rate applicable for earnings between the Freeport Upper Secondary Threshold and the Upper Earnings Limit or any applicable Upper Secondary Threshold. public decimal ForEarningsAboveFUSTUpToAndIncludingUELOrUST { get; init; } Property Value decimal ForEarningsAboveSTUpToAndIncludingFUST Gets the employer rate applicable for earnings between the Secondary Threshold and the Freeport Upper Secondary Threshold. public decimal ForEarningsAboveSTUpToAndIncludingFUST { get; init; } Property Value decimal ForEarningsAboveUELOrUST Gets the employer rate applicable for earnings above the Upper Earnings Limit. public decimal ForEarningsAboveUELOrUST { get; init; } Property Value decimal ForEarningsAtOrAboveLELUpToAndIncludingST Gets the employer rate applicable for earnings between the Lower Earnings Limit and the Secondary Threshold. public decimal ForEarningsAtOrAboveLELUpToAndIncludingST { get; init; } Property Value decimal NiCategories Gets the list of applicable NI categories for this rates entry. public ImmutableList<NiCategory> NiCategories { get; init; } Property Value ImmutableList<NiCategory>"
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiReferenceDataEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiReferenceDataEntry.html",
    "title": "Class NiReferenceDataEntry | Paytools",
    "keywords": "Class NiReferenceDataEntry Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Represents a set of Ni thresholds and rates for a period; where there have been in-year changes, then there may be several such entries for a given tax year. public class NiReferenceDataEntry : IApplicableFromTill Inheritance object NiReferenceDataEntry Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly BasicRateOfTaxForTaxRelief Gets the basic rate of tax to be applied for tax relief on employee pension contributions for relief at source pensions. public decimal BasicRateOfTaxForTaxRelief { get; init; } Property Value decimal DirectorEmployeeRates Gets applicable employee NI rates for directors. Only applicable when there has been an in-year change to National Insurance rates. public ImmutableList<NiEmployeeRatesEntry>? DirectorEmployeeRates { get; init; } Property Value ImmutableList<NiEmployeeRatesEntry> DirectorEmployerRates Gets applicable employer NI rates for directors. Only applicable when there has been an in-year change to National Insurance rates. public ImmutableList<NiEmployerRatesEntry>? DirectorEmployerRates { get; init; } Property Value ImmutableList<NiEmployerRatesEntry> EmployeeRates Gets applicable NI rates for employees. public ImmutableList<NiEmployeeRatesEntry> EmployeeRates { get; init; } Property Value ImmutableList<NiEmployeeRatesEntry> EmployerRates Gets applicable NI rates for employees. public ImmutableList<NiEmployerRatesEntry> EmployerRates { get; init; } Property Value ImmutableList<NiEmployerRatesEntry> NiThresholds Gets a read-only list of applicable NI thresholds. public ImmutableList<NiReferenceDataThresholdEntry> NiThresholds { get; init; } Property Value ImmutableList<NiReferenceDataThresholdEntry>"
  },
  "api/Payetools.ReferenceData.NationalInsurance.NiReferenceDataThresholdEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalInsurance.NiReferenceDataThresholdEntry.html",
    "title": "Class NiReferenceDataThresholdEntry | Paytools",
    "keywords": "Class NiReferenceDataThresholdEntry Namespace Payetools.ReferenceData.NationalInsurance Assembly Payetools.ReferenceData.dll Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. public record NiReferenceDataThresholdEntry : INiThresholdEntry, IEquatable<NiReferenceDataThresholdEntry> Inheritance object NiReferenceDataThresholdEntry Implements INiThresholdEntry IEquatable<NiReferenceDataThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ThresholdType Gets the applicable threshold's name. This name is mapped to the relevant NiThresholdType as part of the deserialisation process. [JsonPropertyName(\"thresholdName\")] public NiThresholdType ThresholdType { get; init; } Property Value NiThresholdType ThresholdValuePerMonth Gets the per month value of the threshold. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per year value of the threshold. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal"
  },
  "api/Payetools.ReferenceData.NationalMinimumWage.html": {
    "href": "api/Payetools.ReferenceData.NationalMinimumWage.html",
    "title": "Namespace Payetools.ReferenceData.NationalMinimumWage | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.NationalMinimumWage Classes NmwReferenceDataEntry Represents the set of NMW/NLW levels for a given tax year (and potentially pay frequency/pay period combination."
  },
  "api/Payetools.ReferenceData.NationalMinimumWage.NmwReferenceDataEntry.html": {
    "href": "api/Payetools.ReferenceData.NationalMinimumWage.NmwReferenceDataEntry.html",
    "title": "Class NmwReferenceDataEntry | Paytools",
    "keywords": "Class NmwReferenceDataEntry Namespace Payetools.ReferenceData.NationalMinimumWage Assembly Payetools.ReferenceData.dll Represents the set of NMW/NLW levels for a given tax year (and potentially pay frequency/pay period combination. public class NmwReferenceDataEntry : INmwLevelSet, IApplicableFromTill Inheritance object NmwReferenceDataEntry Implements INmwLevelSet IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Age18To20Level Gets the NMW level for employees aged between 18 and 20. public decimal Age18To20Level { get; init; } Property Value decimal Age21To22Level Gets the NMW level for employees aged between 21 and 22. public decimal Age21To22Level { get; init; } Property Value decimal Age23AndAboveLevel Gets the NLW (rather than NMW) level for employees aged 23 and over. public decimal Age23AndAboveLevel { get; init; } Property Value decimal ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly ApprenticeLevel Gets the NMW level for apprentices under 19 or apprentices aged 19 and over in the first year of their apprenticeship. public decimal ApprenticeLevel { get; init; } Property Value decimal Under18Level Gets the NMW level for employees under the age of 18 (but over the school leaving age). public decimal Under18Level { get; init; } Property Value decimal"
  },
  "api/Payetools.ReferenceData.Pensions.html": {
    "href": "api/Payetools.ReferenceData.Pensions.html",
    "title": "Namespace Payetools.ReferenceData.Pensions | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.Pensions Classes PensionsReferenceDataSet Represents the reference data for pensions for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. Structs PensionsThresholdEntry Represents a given set of pensions threshold values."
  },
  "api/Payetools.ReferenceData.Pensions.PensionsReferenceDataSet.html": {
    "href": "api/Payetools.ReferenceData.Pensions.PensionsReferenceDataSet.html",
    "title": "Class PensionsReferenceDataSet | Paytools",
    "keywords": "Class PensionsReferenceDataSet Namespace Payetools.ReferenceData.Pensions Assembly Payetools.ReferenceData.dll Represents the reference data for pensions for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. public class PensionsReferenceDataSet : IApplicableFromTill Inheritance object PensionsReferenceDataSet Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AeEarningsTrigger Gets the set of earnings triggers for Automatic Enrolment (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry AeEarningsTrigger { get; init; } Property Value PensionsThresholdEntry ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly BasicRateOfTaxForTaxRelief Gets the basic rate of tax applicable across all tax regimes for relief at source pension contributions, for the specified tax year. (As at the time of writing, one basic rate of tax is used across all jurisdictions in spite of the fact that some have a lower basic rate of tax.) public decimal BasicRateOfTaxForTaxRelief { get; init; } Property Value decimal QualifyingEarningsLowerLevel Gets the lower set of earnings thresholds for Qualifying Earnings (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry QualifyingEarningsLowerLevel { get; init; } Property Value PensionsThresholdEntry QualifyingEarningsUpperLevel Gets the upper set of earnings thresholds for Qualifying Earnings (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry QualifyingEarningsUpperLevel { get; init; } Property Value PensionsThresholdEntry"
  },
  "api/Payetools.ReferenceData.Pensions.PensionsThresholdEntry.html": {
    "href": "api/Payetools.ReferenceData.Pensions.PensionsThresholdEntry.html",
    "title": "Struct PensionsThresholdEntry | Paytools",
    "keywords": "Struct PensionsThresholdEntry Namespace Payetools.ReferenceData.Pensions Assembly Payetools.ReferenceData.dll Represents a given set of pensions threshold values. public readonly struct PensionsThresholdEntry : IPensionsThresholdEntry Implements IPensionsThresholdEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ThresholdValuePerFourWeeks Gets the per 4-week value of the threshold. [JsonPropertyName(\"perFourWeeks\")] public decimal ThresholdValuePerFourWeeks { get; init; } Property Value decimal ThresholdValuePerHalfYear Gets the per half-year value of the threshold. [JsonPropertyName(\"perHalfYear\")] public decimal ThresholdValuePerHalfYear { get; init; } Property Value decimal ThresholdValuePerMonth Gets the per month value of the threshold. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerQuarter Gets the per quarter value of the threshold. [JsonPropertyName(\"perQuarter\")] public decimal ThresholdValuePerQuarter { get; init; } Property Value decimal ThresholdValuePerTwoWeeks Gets the per 2-week value of the threshold. [JsonPropertyName(\"perTwoWeeks\")] public decimal ThresholdValuePerTwoWeeks { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per annum value of the threshold. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal Methods GetThresholdForPayFrequency(PayFrequency) Gets the applicable threshold value for the supplied pay frequency. public decimal GetThresholdForPayFrequency(PayFrequency payFrequency) Parameters payFrequency PayFrequency Applicable pay frequency. Returns decimal Applicable threshold value for the supplied pay frequency."
  },
  "api/Payetools.ReferenceData.Serialization.html": {
    "href": "api/Payetools.ReferenceData.Serialization.html",
    "title": "Namespace Payetools.ReferenceData.Serialization | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.Serialization Classes NiCategoryJsonTypeConverter JSON Converter for the NiCategory enumeration. NiThresholdTypeJsonConverter JSON Converter for instances of NiThresholdType types."
  },
  "api/Payetools.ReferenceData.Serialization.NiCategoryJsonTypeConverter.html": {
    "href": "api/Payetools.ReferenceData.Serialization.NiCategoryJsonTypeConverter.html",
    "title": "Class NiCategoryJsonTypeConverter | Paytools",
    "keywords": "Class NiCategoryJsonTypeConverter Namespace Payetools.ReferenceData.Serialization Assembly Payetools.ReferenceData.dll JSON Converter for the NiCategory enumeration. public class NiCategoryJsonTypeConverter : JsonConverter<NiCategory> Inheritance object JsonConverter JsonConverter<NiCategory> NiCategoryJsonTypeConverter Inherited Members JsonConverter<NiCategory>.CanConvert(Type) JsonConverter<NiCategory>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<NiCategory>.WriteAsPropertyName(Utf8JsonWriter, NiCategory, JsonSerializerOptions) JsonConverter<NiCategory>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a NiCategory enumerated value in string format and converts to the appropriate enum value. public override NiCategory Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns NiCategory PayFrequency value. Write(Utf8JsonWriter, NiCategory, JsonSerializerOptions) Writes a NiCategory enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, NiCategory value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value NiCategory Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.ReferenceData.Serialization.NiThresholdTypeJsonConverter.html": {
    "href": "api/Payetools.ReferenceData.Serialization.NiThresholdTypeJsonConverter.html",
    "title": "Class NiThresholdTypeJsonConverter | Paytools",
    "keywords": "Class NiThresholdTypeJsonConverter Namespace Payetools.ReferenceData.Serialization Assembly Payetools.ReferenceData.dll JSON Converter for instances of NiThresholdType types. public class NiThresholdTypeJsonConverter : JsonConverter<NiThresholdType> Inheritance object JsonConverter JsonConverter<NiThresholdType> NiThresholdTypeJsonConverter Inherited Members JsonConverter<NiThresholdType>.CanConvert(Type) JsonConverter<NiThresholdType>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<NiThresholdType>.WriteAsPropertyName(Utf8JsonWriter, NiThresholdType, JsonSerializerOptions) JsonConverter<NiThresholdType>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a National Insurance threshold element in string format and converts to the appropriate NiThresholdType value. public override NiThresholdType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns NiThresholdType NiThresholdType value. Write(Utf8JsonWriter, NiThresholdType, JsonSerializerOptions) Writes a NiThresholdType value to the JSON stream in long form string format, e.g., \"Lower Earnings Limit\". public override void Write(Utf8JsonWriter writer, NiThresholdType value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value NiThresholdType NiThresholdType value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Payetools.ReferenceData.StudentLoans.html": {
    "href": "api/Payetools.ReferenceData.StudentLoans.html",
    "title": "Namespace Payetools.ReferenceData.StudentLoans | Paytools",
    "keywords": "Namespace Payetools.ReferenceData.StudentLoans Classes StudentLoanReferenceDataEntry Represents the reference data for student loans for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. Structs StudentLoanRatesSet Represents the set of deduction rates to be applied for student and post-graduate loans. StudentLoanThresholdsEntry Represents a set of student loan thresholds, expressed per week, per month and per year."
  },
  "api/Payetools.ReferenceData.StudentLoans.StudentLoanRatesSet.html": {
    "href": "api/Payetools.ReferenceData.StudentLoans.StudentLoanRatesSet.html",
    "title": "Struct StudentLoanRatesSet | Paytools",
    "keywords": "Struct StudentLoanRatesSet Namespace Payetools.ReferenceData.StudentLoans Assembly Payetools.ReferenceData.dll Represents the set of deduction rates to be applied for student and post-graduate loans. public readonly struct StudentLoanRatesSet : IStudentLoanRateSet Implements IStudentLoanRateSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties PostGrad Gets the deduction rate for post-graduate student loan deductions. public decimal PostGrad { get; init; } Property Value decimal Student Gets the deduction rate for Plan 1, 2 and 4 student loan deductions. public decimal Student { get; init; } Property Value decimal"
  },
  "api/Payetools.ReferenceData.StudentLoans.StudentLoanReferenceDataEntry.html": {
    "href": "api/Payetools.ReferenceData.StudentLoans.StudentLoanReferenceDataEntry.html",
    "title": "Class StudentLoanReferenceDataEntry | Paytools",
    "keywords": "Class StudentLoanReferenceDataEntry Namespace Payetools.ReferenceData.StudentLoans Assembly Payetools.ReferenceData.dll Represents the reference data for student loans for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. public class StudentLoanReferenceDataEntry : IApplicableFromTill Inheritance object StudentLoanReferenceDataEntry Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly DeductionRates Gets the set of rates to be used for student and post-graduate loan deductions. public StudentLoanRatesSet DeductionRates { get; init; } Property Value StudentLoanRatesSet Plan1Thresholds Gets the weekly, monthly and annual threshold for Plan 1 student loan deductions. public StudentLoanThresholdsEntry Plan1Thresholds { get; init; } Property Value StudentLoanThresholdsEntry Plan2Thresholds Gets the weekly, monthly and annual threshold for Plan 2 student loan deductions. public StudentLoanThresholdsEntry Plan2Thresholds { get; init; } Property Value StudentLoanThresholdsEntry Plan4Thresholds Gets the weekly, monthly and annual threshold for Plan 4 student loan deductions. public StudentLoanThresholdsEntry Plan4Thresholds { get; init; } Property Value StudentLoanThresholdsEntry PostGradThresholds Gets the weekly, monthly and annual threshold for post-graduate student loan deductions. public StudentLoanThresholdsEntry PostGradThresholds { get; init; } Property Value StudentLoanThresholdsEntry"
  },
  "api/Payetools.ReferenceData.StudentLoans.StudentLoanThresholdsEntry.html": {
    "href": "api/Payetools.ReferenceData.StudentLoans.StudentLoanThresholdsEntry.html",
    "title": "Struct StudentLoanThresholdsEntry | Paytools",
    "keywords": "Struct StudentLoanThresholdsEntry Namespace Payetools.ReferenceData.StudentLoans Assembly Payetools.ReferenceData.dll Represents a set of student loan thresholds, expressed per week, per month and per year. public readonly struct StudentLoanThresholdsEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ThresholdValuePerMonth Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.html": {
    "href": "api/Payetools.StudentLoans.html",
    "title": "Namespace Payetools.StudentLoans | Paytools",
    "keywords": "Namespace Payetools.StudentLoans Payetools.StudentLoans includes calculations for student and post-graduate loan repayments via payroll. Payetools.StudentLoans.Model Payetools.StudentLoans.ReferenceData Classes StudentLoanCalculator Represents a student loan calculator that implements IStudentLoanCalculator. StudentLoanCalculatorFactory Factory to generate IStudentLoanCalculator implementations that are for a given pay date. Interfaces IStudentLoanCalculator Interface that student loan calculators must implement. IStudentLoanCalculatorFactory Interface that represents factories that can generate IStudentLoanCalculator implementations."
  },
  "api/Payetools.StudentLoans.IStudentLoanCalculator.html": {
    "href": "api/Payetools.StudentLoans.IStudentLoanCalculator.html",
    "title": "Interface IStudentLoanCalculator | Paytools",
    "keywords": "Interface IStudentLoanCalculator Namespace Payetools.StudentLoans Assembly Payetools.StudentLoans.dll Interface that student loan calculators must implement. public interface IStudentLoanCalculator Methods Calculate(decimal, StudentLoanType?, bool, out IStudentLoanCalculationResult) Calculates the necessary student loan deduction based on the input salary, the student loan type (if applicable) and indication of whether to apply post-graduate loan deductions. void Calculate(decimal grossSalary, StudentLoanType? studentLoanType, bool hasPostGradLoan, out IStudentLoanCalculationResult result) Parameters grossSalary decimal Gross salary. studentLoanType StudentLoanType? Optional student loan type. Null if no student loan applies. hasPostGradLoan bool True if post-graduate loan deductions should be applied; false otherwise. result IStudentLoanCalculationResult An implementation of IStudentLoanCalculationResult containing the results of the calculation."
  },
  "api/Payetools.StudentLoans.IStudentLoanCalculatorFactory.html": {
    "href": "api/Payetools.StudentLoans.IStudentLoanCalculatorFactory.html",
    "title": "Interface IStudentLoanCalculatorFactory | Paytools",
    "keywords": "Interface IStudentLoanCalculatorFactory Namespace Payetools.StudentLoans Assembly Payetools.StudentLoans.dll Interface that represents factories that can generate IStudentLoanCalculator implementations. public interface IStudentLoanCalculatorFactory Methods GetCalculator(PayDate) Gets a new IStudentLoanCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. IStudentLoanCalculator GetCalculator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns IStudentLoanCalculator A new calculator instance. Remarks The supplied PayDate is also used to calculate the appropriate period threshold to apply, from the PayFrequency property, e.g., weekly, monthly, etc."
  },
  "api/Payetools.StudentLoans.Model.html": {
    "href": "api/Payetools.StudentLoans.Model.html",
    "title": "Namespace Payetools.StudentLoans.Model | Paytools",
    "keywords": "Namespace Payetools.StudentLoans.Model Structs StudentLoanCalculationResult Represents the result of a student loan calculation. Interfaces IStudentLoanCalculationResult Interface that types implement to provide access to the results of a student loan calculation."
  },
  "api/Payetools.StudentLoans.Model.IStudentLoanCalculationResult.html": {
    "href": "api/Payetools.StudentLoans.Model.IStudentLoanCalculationResult.html",
    "title": "Interface IStudentLoanCalculationResult | Paytools",
    "keywords": "Interface IStudentLoanCalculationResult Namespace Payetools.StudentLoans.Model Assembly Payetools.StudentLoans.dll Interface that types implement to provide access to the results of a student loan calculation. public interface IStudentLoanCalculationResult Properties HasPostGradLoan Gets a value indicating whether post-graduate loan deductions were applied. bool HasPostGradLoan { get; } Property Value bool PostGradLoanThresholdUsed Gets the post-graduate loan threshold for the period used in calculating student loan (but not student loan) deductions. decimal? PostGradLoanThresholdUsed { get; } Property Value decimal? PostGraduateLoanDeduction Gets the post-graduate loan deduction applied. amounts. decimal PostGraduateLoanDeduction { get; } Property Value decimal StudentLoanDeduction Gets the student loan deduction applied (excluding post-grad loan deductions). amounts. decimal StudentLoanDeduction { get; } Property Value decimal StudentLoanThresholdUsed Gets the student loan threshold for the period used in calculating student loan (but not post-graduate loan) deductions. decimal? StudentLoanThresholdUsed { get; } Property Value decimal? StudentLoanType Gets the optional student loan type. Null if no student loan applied. (Post-graduate loans are treated separately via HasPostGradLoan. StudentLoanType? StudentLoanType { get; } Property Value StudentLoanType? TotalDeduction Gets the total deduction to be made, the sum of any student and post-graduate loan deduction amounts. decimal TotalDeduction { get; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.Model.StudentLoanCalculationResult.html": {
    "href": "api/Payetools.StudentLoans.Model.StudentLoanCalculationResult.html",
    "title": "Struct StudentLoanCalculationResult | Paytools",
    "keywords": "Struct StudentLoanCalculationResult Namespace Payetools.StudentLoans.Model Assembly Payetools.StudentLoans.dll Represents the result of a student loan calculation. public readonly struct StudentLoanCalculationResult : IStudentLoanCalculationResult Implements IStudentLoanCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasPostGradLoan Gets a value indicating whether post-graduate loan deductions were applied. public bool HasPostGradLoan { get; init; } Property Value bool NoStudentLoanApplicable Gets an empty StudentLoanCalculationResult that indicates that no pension is applicable. public static StudentLoanCalculationResult NoStudentLoanApplicable { get; } Property Value StudentLoanCalculationResult PostGradLoanThresholdUsed Gets the post-graduate loan threshold for the period used in calculating student loan (but not student loan) deductions. public decimal? PostGradLoanThresholdUsed { get; init; } Property Value decimal? PostGraduateLoanDeduction Gets the post-graduate loan deduction applied. amounts. public decimal PostGraduateLoanDeduction { get; init; } Property Value decimal StudentLoanDeduction Gets the student loan deduction applied (excluding post-grad loan deductions). amounts. public decimal StudentLoanDeduction { get; init; } Property Value decimal StudentLoanThresholdUsed Gets the student loan threshold for the period used in calculating student loan (but not post-graduate loan) deductions. public decimal? StudentLoanThresholdUsed { get; init; } Property Value decimal? StudentLoanType Gets the optional student loan type. Null if no student loan applied. (Post-graduate loans are treated separately via HasPostGradLoan. public StudentLoanType? StudentLoanType { get; init; } Property Value StudentLoanType? TotalDeduction Gets the total deduction to be made, the sum of any student and post-graduate loan deduction amounts. public decimal TotalDeduction { get; init; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.ReferenceData.html": {
    "href": "api/Payetools.StudentLoans.ReferenceData.html",
    "title": "Namespace Payetools.StudentLoans.ReferenceData | Paytools",
    "keywords": "Namespace Payetools.StudentLoans.ReferenceData Structs StudentLoanThresholdSet Type that provides access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. Interfaces IStudentLoanRateSet Interface for types that detail the various HMRC-published student loan deduction rates. IStudentLoanReferenceDataProvider Interface that classes implement in order to provide access to student loan reference data. IStudentLoanThresholdSet Interface for types that provide access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period."
  },
  "api/Payetools.StudentLoans.ReferenceData.IStudentLoanRateSet.html": {
    "href": "api/Payetools.StudentLoans.ReferenceData.IStudentLoanRateSet.html",
    "title": "Interface IStudentLoanRateSet | Paytools",
    "keywords": "Interface IStudentLoanRateSet Namespace Payetools.StudentLoans.ReferenceData Assembly Payetools.StudentLoans.dll Interface for types that detail the various HMRC-published student loan deduction rates. public interface IStudentLoanRateSet Properties PostGrad Gets the deduction rate for post-graduate student loan deductions. decimal PostGrad { get; } Property Value decimal Student Gets the deduction rate for Plan 1, 2 and 4 student loan deductions. decimal Student { get; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.ReferenceData.IStudentLoanReferenceDataProvider.html": {
    "href": "api/Payetools.StudentLoans.ReferenceData.IStudentLoanReferenceDataProvider.html",
    "title": "Interface IStudentLoanReferenceDataProvider | Paytools",
    "keywords": "Interface IStudentLoanReferenceDataProvider Namespace Payetools.StudentLoans.ReferenceData Assembly Payetools.StudentLoans.dll Interface that classes implement in order to provide access to student loan reference data. public interface IStudentLoanReferenceDataProvider Methods GetStudentLoanRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the student and post graduate deduction rates for the specified tax year and tax period, as denoted by the supplied pay frequency. and pay period. IStudentLoanRateSet GetStudentLoanRatesForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IStudentLoanRateSet An instance of IStudentLoanRateSet containing the rates for the specified point in time. GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the set of annual thresholds to be applied for a given tax year and tax period. IStudentLoanThresholdSet GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IStudentLoanThresholdSet An implementation of IStudentLoanThresholdSet that provides the appropriate set of annual thresholds for the specified point."
  },
  "api/Payetools.StudentLoans.ReferenceData.IStudentLoanThresholdSet.html": {
    "href": "api/Payetools.StudentLoans.ReferenceData.IStudentLoanThresholdSet.html",
    "title": "Interface IStudentLoanThresholdSet | Paytools",
    "keywords": "Interface IStudentLoanThresholdSet Namespace Payetools.StudentLoans.ReferenceData Assembly Payetools.StudentLoans.dll Interface for types that provide access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. public interface IStudentLoanThresholdSet Properties Plan1PerPeriodThreshold Gets the period threshold for Plan 1 student loan deductions. decimal Plan1PerPeriodThreshold { get; } Property Value decimal Plan2PerPeriodThreshold Gets the period threshold for Plan 2 student loan deductions. decimal Plan2PerPeriodThreshold { get; } Property Value decimal Plan4PerPeriodThreshold Gets the period threshold for Plan 4 student loan deductions. decimal Plan4PerPeriodThreshold { get; } Property Value decimal PostGradPerPeriodThreshold Gets the period threshold for post-graduate student loan deductions. decimal PostGradPerPeriodThreshold { get; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.ReferenceData.StudentLoanThresholdSet.html": {
    "href": "api/Payetools.StudentLoans.ReferenceData.StudentLoanThresholdSet.html",
    "title": "Struct StudentLoanThresholdSet | Paytools",
    "keywords": "Struct StudentLoanThresholdSet Namespace Payetools.StudentLoans.ReferenceData Assembly Payetools.StudentLoans.dll Type that provides access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. public readonly struct StudentLoanThresholdSet : IStudentLoanThresholdSet Implements IStudentLoanThresholdSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Plan1PerPeriodThreshold Gets the period threshold for Plan 1 student loan deductions. public decimal Plan1PerPeriodThreshold { get; init; } Property Value decimal Plan2PerPeriodThreshold Gets the period threshold for Plan 2 student loan deductions. public decimal Plan2PerPeriodThreshold { get; init; } Property Value decimal Plan4PerPeriodThreshold Gets the period threshold for Plan 4 student loan deductions. public decimal Plan4PerPeriodThreshold { get; init; } Property Value decimal PostGradPerPeriodThreshold Gets the period threshold for post-graduate student loan deductions. public decimal PostGradPerPeriodThreshold { get; init; } Property Value decimal"
  },
  "api/Payetools.StudentLoans.StudentLoanCalculator.html": {
    "href": "api/Payetools.StudentLoans.StudentLoanCalculator.html",
    "title": "Class StudentLoanCalculator | Paytools",
    "keywords": "Class StudentLoanCalculator Namespace Payetools.StudentLoans Assembly Payetools.StudentLoans.dll Represents a student loan calculator that implements IStudentLoanCalculator. public class StudentLoanCalculator : IStudentLoanCalculator Inheritance object StudentLoanCalculator Implements IStudentLoanCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StudentLoanCalculator(IStudentLoanThresholdSet, IStudentLoanRateSet) Initialises a new instance of a StudentLoanCalculator with the supplied thresholds and rates. Note that supplied thresholds have been adjusted to correspond to the appropriate pay frequency for this calculator instance. public StudentLoanCalculator(IStudentLoanThresholdSet thresholds, IStudentLoanRateSet rates) Parameters thresholds IStudentLoanThresholdSet Thresholds adjusted to match pay frequency for this calculator. rates IStudentLoanRateSet Student and post-grad loan deduction rates. Methods Calculate(decimal, StudentLoanType?, bool, out IStudentLoanCalculationResult) Calculates the necessary student loan deduction based on the input salary, the student loan type (if applicable) and indication of whether to apply post-graduate loan deductions. public void Calculate(decimal grossSalary, StudentLoanType? studentLoanType, bool hasPostGradLoan, out IStudentLoanCalculationResult result) Parameters grossSalary decimal Gross salary. studentLoanType StudentLoanType? Optional student loan type. Null if no student loan applies. hasPostGradLoan bool True if post-graduate loan deductions should be applied; false otherwise. result IStudentLoanCalculationResult An implementation of IStudentLoanCalculationResult containing the results of the calculation."
  },
  "api/Payetools.StudentLoans.StudentLoanCalculatorFactory.html": {
    "href": "api/Payetools.StudentLoans.StudentLoanCalculatorFactory.html",
    "title": "Class StudentLoanCalculatorFactory | Paytools",
    "keywords": "Class StudentLoanCalculatorFactory Namespace Payetools.StudentLoans Assembly Payetools.StudentLoans.dll Factory to generate IStudentLoanCalculator implementations that are for a given pay date. public class StudentLoanCalculatorFactory : IStudentLoanCalculatorFactory Inheritance object StudentLoanCalculatorFactory Implements IStudentLoanCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StudentLoanCalculatorFactory(IStudentLoanReferenceDataProvider) Initialises a new instance of StudentLoanCalculator using the supplied reference data provider. public StudentLoanCalculatorFactory(IStudentLoanReferenceDataProvider referenceDataProvider) Parameters referenceDataProvider IStudentLoanReferenceDataProvider Reference data provider that provides access to HMRC-published thresholds and rates for student loan deductions. Methods GetCalculator(PayDate) Gets a new IStudentLoanCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. public IStudentLoanCalculator GetCalculator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns IStudentLoanCalculator A new calculator instance."
  },
  "api/Paytools.Common.Diagnostics.html": {
    "href": "api/Paytools.Common.Diagnostics.html",
    "title": "Namespace Paytools.Common.Diagnostics | Paytools",
    "keywords": "Namespace Paytools.Common.Diagnostics Classes InconsistentDataException Exception that is thrown when inconsistent data is detected, for example, when a tax code regime is invalid for the tax year in question. InvalidReferenceDataException Exception that is thrown when invalid reference data is provided."
  },
  "api/Paytools.Common.Diagnostics.InconsistentDataException.html": {
    "href": "api/Paytools.Common.Diagnostics.InconsistentDataException.html",
    "title": "Class InconsistentDataException | Paytools",
    "keywords": "Class InconsistentDataException Namespace Paytools.Common.Diagnostics Assembly Paytools.Common.dll Exception that is thrown when inconsistent data is detected, for example, when a tax code regime is invalid for the tax year in question. public class InconsistentDataException : Exception, ISerializable Inheritance object Exception InconsistentDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InconsistentDataException(string) Initialises a new instance of the InconsistentDataException class. public InconsistentDataException(string message) Parameters message string Human-readable text providing further details on the exception."
  },
  "api/Paytools.Common.Diagnostics.InvalidReferenceDataException.html": {
    "href": "api/Paytools.Common.Diagnostics.InvalidReferenceDataException.html",
    "title": "Class InvalidReferenceDataException | Paytools",
    "keywords": "Class InvalidReferenceDataException Namespace Paytools.Common.Diagnostics Assembly Paytools.Common.dll Exception that is thrown when invalid reference data is provided. public class InvalidReferenceDataException : Exception, ISerializable Inheritance object Exception InvalidReferenceDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidReferenceDataException(string, Exception) Initialises a new instance of the InvalidReferenceDataException class with the supplied inner exception. public InvalidReferenceDataException(string message, Exception innerException) Parameters message string Human-readable text providing further details on the exception. innerException Exception Inner exception. InvalidReferenceDataException(string) Initialises a new instance of the InvalidReferenceDataException class. public InvalidReferenceDataException(string message) Parameters message string Human-readable text providing further details on the exception."
  },
  "api/Paytools.Common.Extensions.DateOnlyExtensions.html": {
    "href": "api/Paytools.Common.Extensions.DateOnlyExtensions.html",
    "title": "Class DateOnlyExtensions | Paytools",
    "keywords": "Class DateOnlyExtensions Namespace Paytools.Common.Extensions Assembly Paytools.Common.dll Extension methods for instances of DateOnly. public static class DateOnlyExtensions Inheritance object DateOnlyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AgeAt(DateOnly, DateOnly) Calculates the age of a person on a certain date based on the supplied date of birth. Takes account of leap years, using the convention that someone born on 29th February in a leap year is not legally one year older until 1st March of a non-leap year. public static int AgeAt(this DateOnly dateOfBirth, DateOnly date) Parameters dateOfBirth DateOnly Individual's date of birth. date DateOnly Date at which to evaluate age at. Returns int Age of the individual in years (as an integer). Remarks This code is not guaranteed to be correct for non-UK locales, as some countries have skipped certain dates within living memory. ToMiddayUtcDateTime(DateOnly) Provides an equivalent DateTime to the supplied DateOnly with the time portion set to midday (12:00:00) UTC. This is used to minimise the possibility of dates being misinterpreted as the next or previous day due to the use of non-UTC timezones. public static DateTime ToMiddayUtcDateTime(this DateOnly date) Parameters date DateOnly DateOnly to convert to DateTime. Returns DateTime DateTime instance with the same date as the supplied DateOnly and time portion set to 12:00:00 UTC. ToPayDate(DateOnly, PayFrequency) Converts the supplied DateOnly to a PayDate based on the specified PayFrequency. public static PayDate ToPayDate(this DateOnly date, PayFrequency payFrequency) Parameters date DateOnly Date to obtain PayDate for. payFrequency PayFrequency Applicable pay frequency for this pay date. Returns PayDate PayDate for the supplied date and pay frequency. ToTaxYearEnding(DateOnly) Gets the TaxYearEnding value for the supplied DateOnly. public static TaxYearEnding ToTaxYearEnding(this DateOnly date) Parameters date DateOnly DateOnly to get the TaxYearEnding for. Returns TaxYearEnding Relevant TaxYearEnding for the supplied date. Exceptions ArgumentOutOfRangeException Thrown if the supplied date is outside the supported set of dates for this library. ToUk(DateOnly) Returns the date as a string in UK format (dd/mm/yyyy). public static string ToUk(this DateOnly date) Parameters date DateOnly Date to get string representation for. Returns string UK format date string."
  },
  "api/Paytools.Common.Extensions.DateTimeExtensions.html": {
    "href": "api/Paytools.Common.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | Paytools",
    "keywords": "Class DateTimeExtensions Namespace Paytools.Common.Extensions Assembly Paytools.Common.dll Extension methods for instances of DateTime. public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MiddayUtc(DateTime) Gets an instance of DateTime from the supplied DateTime but with the time portion set to midday (12:00:00) UTC. public static DateTime MiddayUtc(this DateTime dateTime) Parameters dateTime DateTime Source DateTime instance. Returns DateTime DateTime with the same date but time portion set to 12:00:00 UTC."
  },
  "api/Paytools.Common.Extensions.html": {
    "href": "api/Paytools.Common.Extensions.html",
    "title": "Namespace Paytools.Common.Extensions | Paytools",
    "keywords": "Namespace Paytools.Common.Extensions Classes DateOnlyExtensions Extension methods for instances of DateOnly. DateTimeExtensions Extension methods for instances of DateTime. IEnumerableExtensions Extension methods for instances of IEnumerable<T>. ImmutableListExtensions Extension methods for ImmutableList<T>."
  },
  "api/Paytools.Common.Extensions.IEnumerableExtensions.html": {
    "href": "api/Paytools.Common.Extensions.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | Paytools",
    "keywords": "Class IEnumerableExtensions Namespace Paytools.Common.Extensions Assembly Paytools.Common.dll Extension methods for instances of IEnumerable<T>. public static class IEnumerableExtensions Inheritance object IEnumerableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WithIndex<T>(IEnumerable<T>) Provides a new IEnumerable of tuples, where the first element of the tuple is the original item and the second element is the numeric index of the item, zero-based. public static IEnumerable<(T Value, int Index)> WithIndex<T>(this IEnumerable<T> source) Parameters source IEnumerable<T> Source IEnumerable. Returns IEnumerable<(T Value, int Index)> New IEnumerable of tuples as described above. Type Parameters T Type of item in original IEnumerable."
  },
  "api/Paytools.Common.Extensions.ImmutableListExtensions.html": {
    "href": "api/Paytools.Common.Extensions.ImmutableListExtensions.html",
    "title": "Class ImmutableListExtensions | Paytools",
    "keywords": "Class ImmutableListExtensions Namespace Paytools.Common.Extensions Assembly Paytools.Common.dll Extension methods for ImmutableList<T>. public static class ImmutableListExtensions Inheritance object ImmutableListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReplaceLast<T>(ImmutableList<T>, T) Replaces the last item in the list returning a new immutable list. public static ImmutableList<T> ReplaceLast<T>(this ImmutableList<T> list, T newValue) Parameters list ImmutableList<T> List to be updated. newValue T New value to inserted in place of the current last value. Returns ImmutableList<T> A new ImmutableList<T> with the last item in the list updated. Type Parameters T Type of object that the list contains."
  },
  "api/Paytools.Common.html": {
    "href": "api/Paytools.Common.html",
    "title": "Namespace Common | Paytools",
    "keywords": "Namespace Common Paytools.Common.Diagnostics Paytools.Common.Extensions Paytools.Common.Model Paytools.Common.Serialization"
  },
  "api/Paytools.Common.Model.CountriesForTaxPurposes.html": {
    "href": "api/Paytools.Common.Model.CountriesForTaxPurposes.html",
    "title": "Enum CountriesForTaxPurposes | Paytools",
    "keywords": "Enum CountriesForTaxPurposes Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents one or more countries within the United Kingdom for tax purposes. For example, Scotland has had its own thresholds and rates of income tax since 2016. Note that this enum is marked with the [Flags} attribute as it is possible to combine countries for situations where the same set of tax parameters applies to more than one country, e.g. England and Northern Ireland. [Flags] public enum CountriesForTaxPurposes Fields England = 1 England NorthernIreland = 2 Northern Ireland Scotland = 4 Scotland Wales = 8 Wales"
  },
  "api/Paytools.Common.Model.CountriesForTaxPurposesConverter.html": {
    "href": "api/Paytools.Common.Model.CountriesForTaxPurposesConverter.html",
    "title": "Class CountriesForTaxPurposesConverter | Paytools",
    "keywords": "Class CountriesForTaxPurposesConverter Namespace Paytools.Common.Model Assembly Paytools.Common.dll Converter that translates between the string format of countries based on ISO-3166 and CountriesForTaxPurposes enum values. public static class CountriesForTaxPurposesConverter Inheritance object CountriesForTaxPurposesConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToEnum(string?) Gets the CountriesForTaxPurposes enum value for the supplied country or space separated list of ISO-3166 countries, e.g., \"GB-ENG GB-NIR\". public static CountriesForTaxPurposes ToEnum(string? iso3166Countries) Parameters iso3166Countries string Space separated list of ISO-3166 countries. Returns CountriesForTaxPurposes Equivalent CountriesForTaxPurposes enum value. Exceptions ArgumentException Thrown if an invalid country value is supplied. ToString(CountriesForTaxPurposes) Gets the ISO-3166 sub-entity for the supplied country or countries enum value. public static string ToString(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes Instance of CountriesForTaxPurposes specifying one or more countries with the UK. Returns string Space separated ISO-3166 countries list, e.g., \"GB-ENG GB-NIR\"."
  },
  "api/Paytools.Common.Model.Gender.html": {
    "href": "api/Paytools.Common.Model.Gender.html",
    "title": "Enum Gender | Paytools",
    "keywords": "Enum Gender Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enum representing a person's gender. Note that HMRC only recognises the genders male and female for PAYE purposes, hence only two options (plus unknown) are provided. public enum Gender Fields Female = 2 Female Male = 1 Male Unknown = 0 Not known/undefined"
  },
  "api/Paytools.Common.Model.HmrcAccountsOfficeReference.html": {
    "href": "api/Paytools.Common.Model.HmrcAccountsOfficeReference.html",
    "title": "Class HmrcAccountsOfficeReference | Paytools",
    "keywords": "Class HmrcAccountsOfficeReference Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents an HMRC Accounts Office Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/accounts-office-reference/, which is formatted as follows: 3 numbers The letter 'P' 8 numbers, or 7 numbers and the letter ‘X’ (from ) public record HmrcAccountsOfficeReference : IEquatable<HmrcAccountsOfficeReference> Inheritance object HmrcAccountsOfficeReference Implements IEquatable<HmrcAccountsOfficeReference> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HmrcAccountsOfficeReference(string) Initialises a new instance of HmrcAccountsOfficeReference. public HmrcAccountsOfficeReference(string accountsOfficeReference) Parameters accountsOfficeReference string String value containing the HMRC Accounts Office Reference. Exceptions ArgumentException Thrown if the supplied string value does not match the required pattern for valid HMRC Accounts Office Reference values. Methods IsValid(string) Verifies whether the supplied string could be a valid HRMC Accounts Office Reference. public static bool IsValid(string value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid HMRC Accounts Office Reference; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid HRMC Accounts Office Reference, it does not guarantee that the supplied value is registered with HMRC against a given company. ToString() Gets the string representation of this HmrcAccountsOfficeReference. public override string ToString() Returns string The value of this HmrcAccountsOfficeReference as a string. Operators implicit operator string(HmrcAccountsOfficeReference) Operator for casting implicitly from a HmrcAccountsOfficeReference instance to its string equivalent. public static implicit operator string(HmrcAccountsOfficeReference value) Parameters value HmrcAccountsOfficeReference An instance of HmrcAccountsOfficeReference. Returns string"
  },
  "api/Paytools.Common.Model.HmrcPayeReference.html": {
    "href": "api/Paytools.Common.Model.HmrcPayeReference.html",
    "title": "Struct HmrcPayeReference | Paytools",
    "keywords": "Struct HmrcPayeReference Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents an HMRC PAYE Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/employer-paye-reference/, which is formatted as follows: 3 numbers a forward slash ('/') between 1 and 10 characters, which can be letters and numbers public struct HmrcPayeReference Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HmrcPayeReference(int, string) Initialises a new instance of HmrcPayeReference using the Office number and Employer PAYE reference elements. public HmrcPayeReference(int hmrcOfficeNumber, string employerPayeReference) Parameters hmrcOfficeNumber int HMRC Office Number (always 3 digits). employerPayeReference string Employer PAYE reference (the part after the '/'). Properties EmployerPayeReference Gets or sets the PAYE reference portion of the full HMRC PAYE Reference, i.e., the portion on the right hand of '/'. public string EmployerPayeReference { readonly get; set; } Property Value string HmrcOfficeNumber Gets or sets the HMRC office number portion of the full PAYE Reference. Always 3 digits. public int HmrcOfficeNumber { readonly get; set; } Property Value int Methods IsValid(string?) Verifies whether the supplied string could be a valid HMRC PAYE Reference. public static bool IsValid(string? value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid HMRC PAYE Reference; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid HMRC PAYE Reference, it does not guarantee that the supplied value is registered with HMRC against a given company. ToString() Gets the string representation of this HmrcPayeReference. public override string ToString() Returns string The value of this HmrcPayeReference as a string. TryParse(string?, out HmrcPayeReference?) Attempts to parse the supplied string into an HmrcPayeReference object. public static bool TryParse(string? input, out HmrcPayeReference? payeReference) Parameters input string String value containing candidate full HMRC PAYE Reference. Lower case characters are converted to upper case. payeReference HmrcPayeReference? Set to a new instance of HmrcPayeReference if parse succeeds; set to object default otherwise. Returns bool True if the string could be parsed into a valid HMRC PAYE Reference; false otherwise. Operators implicit operator string(HmrcPayeReference) Operator for casting implicitly from a HmrcPayeReference instance to its string representation. public static implicit operator string(HmrcPayeReference value) Parameters value HmrcPayeReference An instance of HmrcPayeReference. Returns string"
  },
  "api/Paytools.Common.Model.html": {
    "href": "api/Paytools.Common.Model.html",
    "title": "Namespace Paytools.Common.Model | Paytools",
    "keywords": "Namespace Paytools.Common.Model Classes CountriesForTaxPurposesConverter Converter that translates between the string format of countries based on ISO-3166 and CountriesForTaxPurposes enum values. HmrcAccountsOfficeReference Represents an HMRC Accounts Office Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/accounts-office-reference/, which is formatted as follows: 3 numbers The letter 'P' 8 numbers, or 7 numbers and the letter ‘X’ (from ) PayFrequencyExtensions Extension methods for PayFrequency. PayrollId Represents a payroll ID (also known as a \"worker ID\", \"payroll number\", \"works number\") as reported to HMRC. PostalAddress Represents a postal address. If it is a UK address, Postcode should be supplied ForeignCountry set to null; if the address is non-UK, then Postcode should be null and ForeignCountry should be provided. TaxTreatmentExtensions Extension methods for TaxTreatment. TaxYear Represents a given UK tax year, running from 6th April of a given year through to 5th April the following year. TaxYearEndingExtensions Extension methods for TaxYearEnding enum. UkPostcode Represents a UK Postcode. Structs HmrcPayeReference Represents an HMRC PAYE Reference, as defined at https://design.tax.service.gov.uk/hmrc-design-patterns/employer-paye-reference/, which is formatted as follows: 3 numbers a forward slash ('/') between 1 and 10 characters, which can be letters and numbers NiNumber Represents a Uk National Insurance number, also referred to as NI number or NINO. A NINO is made up of 2 letters, 6 numbers and a final letter which is always A, B, C or D. (See HMRC's National Insurance Manual, section NIM39110 (https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110.) PayDate Represents a specific pay date for a specific pay frequency. PayReferencePeriod Represents a pay reference period, i.e. the range of dates from the first day an individual is being paid for, to the last day, inclusive. TaxCode Represents a UK tax code, with the ability to calculate tax-free pay based the code and the relevant tax period. Title Represents an individual's title (e.g., Mr., Mrs). Interfaces IApplicableFromTill Interface for reference data that indicates the period that a reference data applies for. INamedPerson Represents a named individual, i.e., a (usually living) person. This interface is provided for all the situations where a contact person is required, but is also the base entity for employees. Enums CountriesForTaxPurposes Represents one or more countries within the United Kingdom for tax purposes. For example, Scotland has had its own thresholds and rates of income tax since 2016. Note that this enum is marked with the [Flags} attribute as it is possible to combine countries for situations where the same set of tax parameters applies to more than one country, e.g. England and Northern Ireland. Gender Enum representing a person's gender. Note that HMRC only recognises the genders male and female for PAYE purposes, hence only two options (plus unknown) are provided. NiCategory Represents the set of National Insurance category letters assigned by HMRC. Taken from https://www.gov.uk/national-insurance-rates-letters/category-letters (retrieved 5-Dec-2022). PayFrequency Enumerated value for payment frequency. PensionsEarningsBasis Represents the earnings basis which is used to calculate pension contributions. PensionTaxTreatment Enum that represents the tax treatment to be applied to employee pension contributions. StudentLoanType Enum that represents a given type of student loan plan. Post-graduate loans are handled separately. TaxTreatment Enum representing the tax treatment aspect of the tax code. TaxYearEnding Enum representing a given tax year based on the last day of the tax year (i.e., 5 April 20xx)."
  },
  "api/Paytools.Common.Model.IApplicableFromTill.html": {
    "href": "api/Paytools.Common.Model.IApplicableFromTill.html",
    "title": "Interface IApplicableFromTill | Paytools",
    "keywords": "Interface IApplicableFromTill Namespace Paytools.Common.Model Assembly Paytools.Common.dll Interface for reference data that indicates the period that a reference data applies for. public interface IApplicableFromTill Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. Use DateOnly.MinValue to indicate there is no effective start date. DateOnly ApplicableFrom { get; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. Use DateOnly.MaxValue to indicate there is no effective end date. DateOnly ApplicableTill { get; } Property Value DateOnly"
  },
  "api/Paytools.Common.Model.INamedPerson.html": {
    "href": "api/Paytools.Common.Model.INamedPerson.html",
    "title": "Interface INamedPerson | Paytools",
    "keywords": "Interface INamedPerson Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a named individual, i.e., a (usually living) person. This interface is provided for all the situations where a contact person is required, but is also the base entity for employees. public interface INamedPerson Properties FirstName Gets the individual's first (also known as \"given\" or \"Christian\") name. string? FirstName { get; init; } Property Value string HasMiddleName Gets a value indicating whether the individual has supplied a middle name. bool HasMiddleName { get; } Property Value bool Initials Gets a list of the individual's initials as an array. Note that this property is only used if the individual's first name is not known, and its use is mutually exclusive with FirstName and MiddleNames. string[]? Initials { get; init; } Property Value string[] InitialsAsString Gets any initials provided as a space separated string. Will be null if a FirstName has been provided. string? InitialsAsString { get; init; } Property Value string LastName Gets the individual's last (also known as \"family\") name. string LastName { get; init; } Property Value string MiddleNames Gets the middle names of the individual, space separated. Note that this property is optional, as some people do not have middle names, or they choose not to disclose them. string? MiddleNames { get; init; } Property Value string Title Gets the individual's title, e.g., Mr, Mrs, Miss, Dr., etc. Title? Title { get; init; } Property Value Title?"
  },
  "api/Paytools.Common.Model.NiCategory.html": {
    "href": "api/Paytools.Common.Model.NiCategory.html",
    "title": "Enum NiCategory | Paytools",
    "keywords": "Enum NiCategory Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents the set of National Insurance category letters assigned by HMRC. Taken from https://www.gov.uk/national-insurance-rates-letters/category-letters (retrieved 5-Dec-2022). public enum NiCategory Fields A = 1 All employees apart from those in groups B, C, H, J, M, V and Z, and those that work in freeports (F, I, L and S) and those that are exempt (X). B = 2 Married women and widows entitled to pay reduced National Insurance. C = 3 Employees over the State Pension age. F = 4 All employees who work in freeports, apart from those in categories I, L, and S. H = 5 Apprentices under 25. I = 6 Married women and widows who work in freeports and are entitled to pay reduced National Insurance. J = 7 Employees who can defer National Insurance because they’re already paying it in another job. L = 8 Employees who work in freeports and can defer National Insurance because they’re already paying it in another job. M = 9 Employees under 21. S = 10 Employees who work in freeports and are over the State Pension age. Unspecified = 0 Not specified. V = 11 Employees who are working in their first job since leaving the armed forces (veterans). X = 12 Employees who do not have to pay National Insurance, for example because they’re under 16. Z = 13 Employees under 21 who can defer National Insurance because they’re already paying it in another job."
  },
  "api/Paytools.Common.Model.NiNumber.html": {
    "href": "api/Paytools.Common.Model.NiNumber.html",
    "title": "Struct NiNumber | Paytools",
    "keywords": "Struct NiNumber Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a Uk National Insurance number, also referred to as NI number or NINO. A NINO is made up of 2 letters, 6 numbers and a final letter which is always A, B, C or D. (See HMRC's National Insurance Manual, section NIM39110 (https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110.) public readonly struct NiNumber Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NiNumber(string) Initialises a new NiNumber instance. public NiNumber(string niNumber) Parameters niNumber string National insurance number as string. Exceptions ArgumentException Thrown if the supplied string is not a valid NI number. Properties Unknown Gets the NiNumber to be used when an employee does not know their National Insurance number. public static NiNumber Unknown { get; } Property Value NiNumber Methods IsValid(string) Verifies whether the supplied string could be a valid NI number. public static bool IsValid(string value) Parameters value string String value to check. Returns bool True if the supplied value could be a valid NI number; false otherwise. Remarks Although this method confirms whether the string supplied could be a valid Ni nummber, it does not guarantee that the supplied value is registered with HMRC against a given individual. ToString() Gets the string representation of this NiNumber. public override string ToString() Returns string String representation of this NI number in non-spaced format. ToString(bool) Gets the string representation of this NiNumber. public string ToString(bool asSpacedFormat) Parameters asSpacedFormat bool True if spaced format is to be returned (e.g., \"NA 12 34 67 C\"; false otherwise. Returns string String representation of this NI number in either spaced or non-spaced format. Operators implicit operator string(NiNumber) Operator for casting implicitly from a NiNumber instance to its string representation. public static implicit operator string(NiNumber niNumber) Parameters niNumber NiNumber NI number. Returns string implicit operator NiNumber(string) Operator for casting implicitly from a string to an instance of a NiNumber. public static implicit operator NiNumber(string niNumber) Parameters niNumber string NI number as string. Returns NiNumber Exceptions ArgumentException Thrown if the supplied string is not a valid NI number."
  },
  "api/Paytools.Common.Model.PayDate.html": {
    "href": "api/Paytools.Common.Model.PayDate.html",
    "title": "Struct PayDate | Paytools",
    "keywords": "Struct PayDate Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a specific pay date for a specific pay frequency. public readonly struct PayDate Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PayDate(DateOnly, PayFrequency) Initialises a new PayDate based on the supplied date and pay frequency. public PayDate(DateOnly date, PayFrequency payFrequency) Parameters date DateOnly Pay date. payFrequency PayFrequency Pay frequency. PayDate(int, int, int, PayFrequency) Initialises a new PayDate based on the supplied date and pay frequency. public PayDate(int year, int month, int day, PayFrequency payFrequency) Parameters year int Year. month int Month (1-12). day int Day. payFrequency PayFrequency Pay frequency. Properties Date Gets the date of this PayDate. public DateOnly Date { get; init; } Property Value DateOnly PayFrequency Gets the pay frequency for this PayDate. public PayFrequency PayFrequency { get; init; } Property Value PayFrequency TaxPeriod Gets the tax period for this PayDate, for example, a pay date of 20th May for a monthly payroll would be tax period 2. public int TaxPeriod { get; init; } Property Value int TaxYear Gets the TaxYear for this PayDate. public TaxYear TaxYear { get; init; } Property Value TaxYear Operators implicit operator DateTime(PayDate) Gets the equivalent DateTime for this paydate, with the time portion set to midday (12:00:00) UTC. public static implicit operator DateTime(PayDate payDate) Parameters payDate PayDate PayDate to get the DateTime for. Returns DateTime"
  },
  "api/Paytools.Common.Model.PayFrequency.html": {
    "href": "api/Paytools.Common.Model.PayFrequency.html",
    "title": "Enum PayFrequency | Paytools",
    "keywords": "Enum PayFrequency Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enumerated value for payment frequency. public enum PayFrequency Extension Methods PayFrequencyExtensions.GetStandardTaxPeriodCount(PayFrequency) PayFrequencyExtensions.GetTaxPeriodLength(PayFrequency) Fields Annually = 7 Once a year BiAnnually = 6 Every six months FourWeekly = 3 Every four weeks Monthly = 4 Monthly Quarterly = 5 Every three months TwoWeekly = 2 Every two weeks Unspecified = 0 Not specified Weekly = 1 Weekly"
  },
  "api/Paytools.Common.Model.PayFrequencyExtensions.html": {
    "href": "api/Paytools.Common.Model.PayFrequencyExtensions.html",
    "title": "Class PayFrequencyExtensions | Paytools",
    "keywords": "Class PayFrequencyExtensions Namespace Paytools.Common.Model Assembly Paytools.Common.dll Extension methods for PayFrequency. public static class PayFrequencyExtensions Inheritance object PayFrequencyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetStandardTaxPeriodCount(PayFrequency) Provides access to the number of tax periods within a tax year for a given PayFrequency. public static int GetStandardTaxPeriodCount(this PayFrequency payFrequency) Parameters payFrequency PayFrequency PayFrequency to provide period count for. Returns int The number of tax periods within a tax year for a this PayFrequency, for example, PayFrequency.Monthly returns 12. Exceptions ArgumentException Thrown if an invalid PayFrequency value is supplied. GetTaxPeriodLength(PayFrequency) Provides access to the number of tax periods within a tax year for a given PayFrequency. public static int GetTaxPeriodLength(this PayFrequency payFrequency) Parameters payFrequency PayFrequency PayFrequency to provide period count for. Returns int The number of tax periods within a tax year for a this PayFrequency, for example, PayFrequency.Monthly returns 12. Exceptions ArgumentException Thrown if an invalid PayFrequency value is supplied."
  },
  "api/Paytools.Common.Model.PayReferencePeriod.html": {
    "href": "api/Paytools.Common.Model.PayReferencePeriod.html",
    "title": "Struct PayReferencePeriod | Paytools",
    "keywords": "Struct PayReferencePeriod Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a pay reference period, i.e. the range of dates from the first day an individual is being paid for, to the last day, inclusive. public readonly struct PayReferencePeriod Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PayReferencePeriod(DateOnly, DateOnly) Initialises a new instance of PayReferencePeriod with the supplied start and end dates. public PayReferencePeriod(DateOnly startOfPayPeriod, DateOnly endOfPayPeriod) Parameters startOfPayPeriod DateOnly First day of pay period. endOfPayPeriod DateOnly Last day of pay period. Properties EndOfPayPeriod Gets the last day of the pay period. public DateOnly EndOfPayPeriod { get; init; } Property Value DateOnly StartOfPayPeriod Gets the first day of the pay period. public DateOnly StartOfPayPeriod { get; init; } Property Value DateOnly"
  },
  "api/Paytools.Common.Model.PayrollId.html": {
    "href": "api/Paytools.Common.Model.PayrollId.html",
    "title": "Class PayrollId | Paytools",
    "keywords": "Class PayrollId Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a payroll ID (also known as a \"worker ID\", \"payroll number\", \"works number\") as reported to HMRC. public sealed record PayrollId : IEquatable<PayrollId> Inheritance object PayrollId Implements IEquatable<PayrollId> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PayrollId(string) Initialises a new instance of PayrollId with the supplied value. public PayrollId(string payrollId) Parameters payrollId string Payroll ID value. Methods Parse(string) Parses the supplied payroll ID. TBA. public static PayrollId Parse(string value) Parameters value string Value to parse. Returns PayrollId Parsed value. TBA. Operators implicit operator string(PayrollId) Operator for casting implicitly from a PayrollId instance to its string representation. public static implicit operator string(PayrollId payrollId) Parameters payrollId PayrollId An instance of PayrollId. Returns string implicit operator PayrollId(string) Operator for casting implicitly from a payroll ID string value to a PayrollId instance. public static implicit operator PayrollId(string payrollId) Parameters payrollId string String representation of payroll ID. Returns PayrollId"
  },
  "api/Paytools.Common.Model.PensionsEarningsBasis.html": {
    "href": "api/Paytools.Common.Model.PensionsEarningsBasis.html",
    "title": "Enum PensionsEarningsBasis | Paytools",
    "keywords": "Enum PensionsEarningsBasis Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents the earnings basis which is used to calculate pension contributions. public enum PensionsEarningsBasis Fields PensionablePaySet1 = 2 Pensionable Pay Set 1 contributions are worked out on at least basic pay. Basic pay includes at a minimum, earnings before deductions, holiday pay and statutory benefits such as maternity, paternity, adoption and sick pay delivered through payroll. PensionablePaySet2 = 3 Pensionable Pay Set 2 contributions are worked out on at least basic pay, but the key difference between this and Set 1 is that basic pay must make up at least 85% of total earnings. The employer must monitor this. PensionablePaySet3 = 4 Pensionable Pay Set 2 contributions includes salary, wages, commission, bonuses, overtime, statutory sick pay, statutory maternity pay, ordinary or additional statutory paternity pay and statutory adoption pay. QualifyingEarnings = 1 Qualifying Earnings includes salary, wages, commission, bonuses, overtime, statutory sick pay, statutory maternity pay, ordinary or additional statutory paternity pay and statutory adoption pay. Qualifying earnings is calculated from pensionable pay deducting a lower threshold and capping at an upper threshold, the thresholds being decided by Government each year. Unspecified = 0 Not specified."
  },
  "api/Paytools.Common.Model.PensionTaxTreatment.html": {
    "href": "api/Paytools.Common.Model.PensionTaxTreatment.html",
    "title": "Enum PensionTaxTreatment | Paytools",
    "keywords": "Enum PensionTaxTreatment Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enum that represents the tax treatment to be applied to employee pension contributions. public enum PensionTaxTreatment Fields NetPayArrangement = 2 Net pay arrangement. Contributions are taken from salary before tax. ReliefAtSource = 1 Relief at source. Contributions are taken from post-tax salary and the pension provider claims back basic rate tax from HMRC. Unspecified = 0 Not specified."
  },
  "api/Paytools.Common.Model.PostalAddress.html": {
    "href": "api/Paytools.Common.Model.PostalAddress.html",
    "title": "Class PostalAddress | Paytools",
    "keywords": "Class PostalAddress Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a postal address. If it is a UK address, Postcode should be supplied ForeignCountry set to null; if the address is non-UK, then Postcode should be null and ForeignCountry should be provided. public class PostalAddress Inheritance object PostalAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AddressLine1 Gets or sets the first line of the address. public string AddressLine1 { get; set; } Property Value string AddressLine2 Gets or sets the second line of the address. public string AddressLine2 { get; set; } Property Value string AddressLine3 Gets or sets the third line of the address. public string? AddressLine3 { get; set; } Property Value string AddressLine4 Gets or sets the fourth line of the address. public string? AddressLine4 { get; set; } Property Value string ForeignCountry Gets or sets the TBA. public string? ForeignCountry { get; set; } Property Value string Postcode Gets or sets the postcode (UK addresses only). public UkPostcode? Postcode { get; set; } Property Value UkPostcode"
  },
  "api/Paytools.Common.Model.StudentLoanType.html": {
    "href": "api/Paytools.Common.Model.StudentLoanType.html",
    "title": "Enum StudentLoanType | Paytools",
    "keywords": "Enum StudentLoanType Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enum that represents a given type of student loan plan. Post-graduate loans are handled separately. public enum StudentLoanType Fields Plan1 = 0 Student loan Plan 1 type Plan2 = 1 Student loan Plan 2 type Plan4 = 2 Student loan Plan 4 type"
  },
  "api/Paytools.Common.Model.TaxCode.html": {
    "href": "api/Paytools.Common.Model.TaxCode.html",
    "title": "Struct TaxCode | Paytools",
    "keywords": "Struct TaxCode Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a UK tax code, with the ability to calculate tax-free pay based the code and the relevant tax period. public readonly struct TaxCode Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ApplicableCountries Gets the country or countries that this tax code applies to, i.e., the tax regime. public CountriesForTaxPurposes ApplicableCountries { get; } Property Value CountriesForTaxPurposes IsFixedCode Gets a value indicating whether the tax code is a \"fixed code\", such as BR, D0, NT, etc., or a variable code, such as 1257L. public bool IsFixedCode { get; } Property Value bool IsNonCumulative Gets a value indicating whether the tax code is cumulative (e.g., 1257L) or non-cumulative (e.g., 1257L W1/M1). public bool IsNonCumulative { get; } Property Value bool NotionalAllowance Gets the notional annual personal allowance for the tax code. This may be negative in the event the tax code has a K prefix. public decimal NotionalAllowance { get; } Property Value decimal NumericPortionOfCode Gets the integer portion of the tax code, if applicable, or zero otherwise. public int NumericPortionOfCode { get; } Property Value int TaxRegimeLetter Gets the tax regime letter, e.g., S for Scotland, C for Wales. Returns an empty string if no specific regime is applicable. public string TaxRegimeLetter { get; } Property Value string TaxTreatment Gets the tax treatment specified by this tax code. For the most part, this is the prefix or suffix for the tax code, omitting the tax regime letter. public TaxTreatment TaxTreatment { get; } Property Value TaxTreatment Methods GetTaxFreePayForPeriod(int, int) Calculates the tax free pay for the specified tax period and given tax code. public decimal GetTaxFreePayForPeriod(int taxPeriod, int periodCount) Parameters taxPeriod int Tax period. periodCount int Number of tax periods in the year (e.g., 12 for monthly pay). Returns decimal Tax-free pay applicable up to and including the end of the specified tax period. May be negative. MapCountryToTaxRegime(CountriesForTaxPurposes) Static method that maps a CountriesForTaxPurposes value to the regime prefix letter, for example Scotland => \"S\". public static string MapCountryToTaxRegime(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes Country or countries to be mapped. Returns string Prefix letter for single country regimes (currently Scotland, Wales); Empty string otherwise. ToString() Returns the string representation of the tax code including the tax regime letter if applicable, but without any indication of whether the code is cumulative or non-cumulative. public override string ToString() Returns string String representation of tax code without tax regime prefix. ToString(bool, bool) Returns the string representation of the tax code optional including the tax regime letter if applicable, and optionally indicating whether the code is cumulative or non-cumulative by means of an \"X\" suffix. public string ToString(bool includeNonCumulativeFlag, bool includeTaxRegime) Parameters includeNonCumulativeFlag bool True to include the non-cumulative flag; false otherwise. includeTaxRegime bool True to include the tax regime prefix; false otherwise. Returns string String representation of tax code with or without tax regime prefix and with or without non-cumulative indicator. TryParse(string, out TaxCode) Attempts to parse the supplied tax code into its component parts, assuming the tax regimes for the current tax year. Non-cumulative codes must be identified by an 'X', 'W1', 'M1' or 'W1/M1' suffix, with or without preceding space. Tax code parsing is case-insensitive. public static bool TryParse(string taxCode, out TaxCode result) Parameters taxCode string Tax code as a string. result TaxCode Instance of TaxCode if valid; default(TaxCode) otherwise. Returns bool True if the tax code could be parsed; false otherwise. TryParse(string, TaxYear, out TaxCode) Attempts to parse the supplied tax code. Non-cumulative codes must be identified by an 'X', 'W1', 'M1' or 'W1/M1' suffix, with or without preceding space. Tax code parsing is case-insensitive. public static bool TryParse(string taxCode, TaxYear taxYear, out TaxCode result) Parameters taxCode string Tax code as a string. taxYear TaxYear Tax year for the supplied tax code. result TaxCode Instance of TaxCode if valid; default(TaxCode) otherwise. Returns bool True if the tax code could be parsed; false otherwise."
  },
  "api/Paytools.Common.Model.TaxTreatment.html": {
    "href": "api/Paytools.Common.Model.TaxTreatment.html",
    "title": "Enum TaxTreatment | Paytools",
    "keywords": "Enum TaxTreatment Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enum representing the tax treatment aspect of the tax code. public enum TaxTreatment Extension Methods TaxTreatmentExtensions.GetBandIndex(TaxTreatment, CountriesForTaxPurposes) Fields _0T = 6 Zero personal allowance to be applied. BR = 2 BR - basic rate tax to be applied to all taxable earnings. D0 = 3 D0 - next highest rate above BR to be applied to all taxable earnings. D1 = 4 D1 - next highest rate above D0 to be applied to all taxable earnings. D2 = 5 D2 - next highest rate above D1 to be applied to all taxable earnings. K = 7 Additional notional taxable income must be applied to existing taxable earnings. L = 8 Tax payer is entitled to the standard Personal Allowance. M = 9 Married Allowance where individual has received a transfer of 10% of their partner’s Personal Allowance. N = 10 Married Allowance where individual has transferred 10% of their Personal Allowance to their partner. NT = 1 NT - no tax payable. Unspecified = 0 Not specified."
  },
  "api/Paytools.Common.Model.TaxTreatmentExtensions.html": {
    "href": "api/Paytools.Common.Model.TaxTreatmentExtensions.html",
    "title": "Class TaxTreatmentExtensions | Paytools",
    "keywords": "Class TaxTreatmentExtensions Namespace Paytools.Common.Model Assembly Paytools.Common.dll Extension methods for TaxTreatment. public static class TaxTreatmentExtensions Inheritance object TaxTreatmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBandIndex(TaxTreatment, CountriesForTaxPurposes) Gets the zero-based index of the band that a given tax code (BR, D0, D1, D2) applies to. public static int GetBandIndex(this TaxTreatment taxTreatment, CountriesForTaxPurposes applicableCountries) Parameters taxTreatment TaxTreatment Tax treatment to determine band index for. applicableCountries CountriesForTaxPurposes Applicable countries for the input tax treatment. Returns int Band index for supplied tax treatment. Exceptions ArgumentException Thrown if it is not possible to retrieve a band index for ththe supplied tax treatment."
  },
  "api/Paytools.Common.Model.TaxYear.html": {
    "href": "api/Paytools.Common.Model.TaxYear.html",
    "title": "Class TaxYear | Paytools",
    "keywords": "Class TaxYear Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a given UK tax year, running from 6th April of a given year through to 5th April the following year. public record TaxYear : IEquatable<TaxYear> Inheritance object TaxYear Implements IEquatable<TaxYear> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks TaxYear provides utility methods to access the relevant tax regimes (i.e., sub-countries within the UK) which have changed over the period 2018 to date. TaxYear also provides conversions from dates to tax periods, based on payment frequency. Constructors TaxYear(TaxYearEnding) Initialises a new instance of TaxYear based on the supplied TaxYearEnding value. public TaxYear(TaxYearEnding taxYearEnding) Parameters taxYearEnding TaxYearEnding TaxYearEnding enum value for this tax year. TaxYear(DateOnly) Initialises a new instance of TaxYear based on the supplied date. public TaxYear(DateOnly taxDate) Parameters taxDate DateOnly Date to create TaxYear for. Properties Current Gets the TaxYearEnding for the \"current\" tax year (based on today's date). public static TaxYearEnding Current { get; } Property Value TaxYearEnding EndOfTaxYear Gets the date of the end of this tax year. public DateOnly EndOfTaxYear { get; init; } Property Value DateOnly StartOfTaxYear Gets the date of the start of this tax year. public DateOnly StartOfTaxYear { get; init; } Property Value DateOnly TaxYearEnding Gets the TaxYearEnding enumeration value for this TaxYear. public TaxYearEnding TaxYearEnding { get; init; } Property Value TaxYearEnding Methods GetCountriesForYear() Gets the list (as an array) of the country groupings that are applicable for a given tax year. public CountriesForTaxPurposes[] GetCountriesForYear() Returns CountriesForTaxPurposes[] Array of CountriesForTaxPurposes values listing the tax regime groupings for this tax year. Exceptions InvalidOperationException Thrown if an invalid/unspecified tax year is provided. GetDefaultCountriesForYear() Gets the 'default' tax regime for this tax year as an CountriesForTaxPurposes value. This is the regime that all other tax treatments fall into if they are not in a specific regime, e.g., Scotland. public CountriesForTaxPurposes GetDefaultCountriesForYear() Returns CountriesForTaxPurposes Default tax regime for this tax year. Exceptions InvalidOperationException Thrown if the tax year is invalid or has not been specified. GetLastDayOfTaxPeriod(PayFrequency, int) Gets the very last day of the specified tax period based on the applicable pay frequency. public DateOnly GetLastDayOfTaxPeriod(PayFrequency payFrequency, int taxPeriod) Parameters payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns DateOnly Last day of the tax period. Exceptions ArgumentException Thrown if the supplied pay frequency is not supported. GetTaxPeriod(DateOnly, PayFrequency) Gets the tax period for the supplied pay date and payment frequencey. For example, if the pay frequency is monthly and the pay date is, say, 20th May, then the tax pariod is 2, as in \"Month 2\". public int GetTaxPeriod(DateOnly payDate, PayFrequency payFrequency) Parameters payDate DateOnly Pay date to determine tax period for. payFrequency PayFrequency Payment frequency applicable. Returns int Relevant tax period. Exceptions ArgumentException Thrown if the pay date falls outside this tax year. IsValidForYear(CountriesForTaxPurposes) Determines whether the supplied country groupings is valid for this tax year. public bool IsValidForYear(CountriesForTaxPurposes countries) Parameters countries CountriesForTaxPurposes One or more CountriesForTaxPurposes values. Returns bool True if the supplied countries parameter is valid for this tax year; false otherwise."
  },
  "api/Paytools.Common.Model.TaxYearEnding.html": {
    "href": "api/Paytools.Common.Model.TaxYearEnding.html",
    "title": "Enum TaxYearEnding | Paytools",
    "keywords": "Enum TaxYearEnding Namespace Paytools.Common.Model Assembly Paytools.Common.dll Enum representing a given tax year based on the last day of the tax year (i.e., 5 April 20xx). public enum TaxYearEnding Extension Methods TaxYearEndingExtensions.YearAsString(TaxYearEnding) Fields Apr5_2019 = 2019 2018-2019 Apr5_2020 = 2020 2019-2020 Apr5_2021 = 2021 2020-2021 Apr5_2022 = 2022 2021-2022 Apr5_2023 = 2023 2022-2023 Apr5_2024 = 2024 2023-2024 MaxValue = 2024 Maximum value supported for TaxYearEnding MinValue = 2019 Minimum value supported for TaxYearEnding Unspecified = 0 No tax year specified Remarks This enumeration is updated each tax year to provide access to the forthcoming tax year."
  },
  "api/Paytools.Common.Model.TaxYearEndingExtensions.html": {
    "href": "api/Paytools.Common.Model.TaxYearEndingExtensions.html",
    "title": "Class TaxYearEndingExtensions | Paytools",
    "keywords": "Class TaxYearEndingExtensions Namespace Paytools.Common.Model Assembly Paytools.Common.dll Extension methods for TaxYearEnding enum. public static class TaxYearEndingExtensions Inheritance object TaxYearEndingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods YearAsString(TaxYearEnding) Converts a TaxYearEnding enumerated value into a string. public static string YearAsString(this TaxYearEnding value) Parameters value TaxYearEnding An instance of TaxYearEnding. Returns string Year as string, e.g., \"2020\", indicating the year that the tax year ends in."
  },
  "api/Paytools.Common.Model.Title.html": {
    "href": "api/Paytools.Common.Model.Title.html",
    "title": "Struct Title | Paytools",
    "keywords": "Struct Title Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents an individual's title (e.g., Mr., Mrs). public readonly struct Title Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks Some ideas on standardisation sourced from https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1112942/Titles__V12_.pdf. As per general Government guidance, no attempt is made to deduce a person's gender from their title. Methods Parse(string) Inspects the supplied title and returns a new Title instance holding either the title supplied, or if it is a standard title (e.g., Mr, Mrs, Miss, etc.) then the standardised form of that title. public static Title? Parse(string title) Parameters title string Externally supplied string value for title. Returns Title? Null if no title provided, a standardised title (e.g., \"Mr\") if a standardised title is provided, or the supplied string otherwise. ToString() Gets the string representation of the Title. public override string ToString() Returns string String representation of title, e.g., \"Mr\", \"Ms\". Operators implicit operator string(Title) Implicit cast from Title to string. public static implicit operator string(Title title) Parameters title Title Title to obtain the string representation of. Returns string"
  },
  "api/Paytools.Common.Model.UkPostcode.html": {
    "href": "api/Paytools.Common.Model.UkPostcode.html",
    "title": "Class UkPostcode | Paytools",
    "keywords": "Class UkPostcode Namespace Paytools.Common.Model Assembly Paytools.Common.dll Represents a UK Postcode. public record UkPostcode : IEquatable<UkPostcode> Inheritance object UkPostcode Implements IEquatable<UkPostcode> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UkPostcode(string) Initialises a new instance of UkPostcode. public UkPostcode(string value) Parameters value string Postcode as string. Operators implicit operator string(UkPostcode) Operator for casting implicitly from a UkPostcode instance to its string equivalent. public static implicit operator string(UkPostcode value) Parameters value UkPostcode An instance of UkPostcode. Returns string"
  },
  "api/Paytools.Common.Serialization.CountriesForTaxPurposesJsonConverter.html": {
    "href": "api/Paytools.Common.Serialization.CountriesForTaxPurposesJsonConverter.html",
    "title": "Class CountriesForTaxPurposesJsonConverter | Paytools",
    "keywords": "Class CountriesForTaxPurposesJsonConverter Namespace Paytools.Common.Serialization Assembly Paytools.Common.dll JSON Converter for the CountriesForTaxPurposes enumeration. When encoded in a JSON payload, values are represented using space separated ISO-3166 format, e.g. \"GB-ENG GB-NIR\". public class CountriesForTaxPurposesJsonConverter : JsonConverter<CountriesForTaxPurposes> Inheritance object JsonConverter JsonConverter<CountriesForTaxPurposes> CountriesForTaxPurposesJsonConverter Inherited Members JsonConverter<CountriesForTaxPurposes>.CanConvert(Type) JsonConverter<CountriesForTaxPurposes>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<CountriesForTaxPurposes>.WriteAsPropertyName(Utf8JsonWriter, CountriesForTaxPurposes, JsonSerializerOptions) JsonConverter<CountriesForTaxPurposes>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a CountriesForTaxPurposes value in ISO-3166 format and converts to the appropriate enum value(s). public override CountriesForTaxPurposes Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns CountriesForTaxPurposes CountriesForTaxPurposes value. Write(Utf8JsonWriter, CountriesForTaxPurposes, JsonSerializerOptions) Writes a CountriesForTaxPurposes enum value or values (as [Flags attribute is present), converted to the appropriate ISO-3166 space separated string format, e.g., \"GB-ENG GB-WLS GB-NIR\". public override void Write(Utf8JsonWriter writer, CountriesForTaxPurposes value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value CountriesForTaxPurposes Enum value(s) to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.Common.Serialization.DateOnlyJsonConverter.html": {
    "href": "api/Paytools.Common.Serialization.DateOnlyJsonConverter.html",
    "title": "Class DateOnlyJsonConverter | Paytools",
    "keywords": "Class DateOnlyJsonConverter Namespace Paytools.Common.Serialization Assembly Paytools.Common.dll JSON Converter for instances of DateOnly types. public class DateOnlyJsonConverter : JsonConverter<DateOnly> Inheritance object JsonConverter JsonConverter<DateOnly> DateOnlyJsonConverter Inherited Members JsonConverter<DateOnly>.CanConvert(Type) JsonConverter<DateOnly>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<DateOnly>.WriteAsPropertyName(Utf8JsonWriter, DateOnly, JsonSerializerOptions) JsonConverter<DateOnly>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads an ISO 8601 format date in string format and converts to the appropriate DateOnly value. public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns DateOnly DateOnly value. Write(Utf8JsonWriter, DateOnly, JsonSerializerOptions) Writes a DateOnly value to the JSON stream in ISO 8601 format date in string format. public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value DateOnly DateOnly value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.Common.Serialization.html": {
    "href": "api/Paytools.Common.Serialization.html",
    "title": "Namespace Paytools.Common.Serialization | Paytools",
    "keywords": "Namespace Paytools.Common.Serialization Classes CountriesForTaxPurposesJsonConverter JSON Converter for the CountriesForTaxPurposes enumeration. When encoded in a JSON payload, values are represented using space separated ISO-3166 format, e.g. \"GB-ENG GB-NIR\". DateOnlyJsonConverter JSON Converter for instances of DateOnly types. PayFrequencyJsonConverter JSON Converter for the PayFrequency enumeration. TaxYearEndingJsonConverter JSON Converter for the TaxYearEnding enumeration."
  },
  "api/Paytools.Common.Serialization.PayFrequencyJsonConverter.html": {
    "href": "api/Paytools.Common.Serialization.PayFrequencyJsonConverter.html",
    "title": "Class PayFrequencyJsonConverter | Paytools",
    "keywords": "Class PayFrequencyJsonConverter Namespace Paytools.Common.Serialization Assembly Paytools.Common.dll JSON Converter for the PayFrequency enumeration. public class PayFrequencyJsonConverter : JsonConverter<PayFrequency> Inheritance object JsonConverter JsonConverter<PayFrequency> PayFrequencyJsonConverter Inherited Members JsonConverter<PayFrequency>.CanConvert(Type) JsonConverter<PayFrequency>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<PayFrequency>.WriteAsPropertyName(Utf8JsonWriter, PayFrequency, JsonSerializerOptions) JsonConverter<PayFrequency>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a PayFrequency enumerated value in string format and converts to the appropriate enum value. public override PayFrequency Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns PayFrequency PayFrequency value. Write(Utf8JsonWriter, PayFrequency, JsonSerializerOptions) Writes a PayFrequency enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, PayFrequency value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value PayFrequency Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.Common.Serialization.TaxYearEndingJsonConverter.html": {
    "href": "api/Paytools.Common.Serialization.TaxYearEndingJsonConverter.html",
    "title": "Class TaxYearEndingJsonConverter | Paytools",
    "keywords": "Class TaxYearEndingJsonConverter Namespace Paytools.Common.Serialization Assembly Paytools.Common.dll JSON Converter for the TaxYearEnding enumeration. public class TaxYearEndingJsonConverter : JsonConverter<TaxYearEnding> Inheritance object JsonConverter JsonConverter<TaxYearEnding> TaxYearEndingJsonConverter Inherited Members JsonConverter<TaxYearEnding>.CanConvert(Type) JsonConverter<TaxYearEnding>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<TaxYearEnding>.WriteAsPropertyName(Utf8JsonWriter, TaxYearEnding, JsonSerializerOptions) JsonConverter<TaxYearEnding>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a TaxYearEnding enumerated value in string format and converts to the appropriate enum value. public override TaxYearEnding Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns TaxYearEnding TaxYearEnding value. Write(Utf8JsonWriter, TaxYearEnding, JsonSerializerOptions) Writes a TaxYearEnding enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, TaxYearEnding value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value TaxYearEnding Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.Employment.Model.HourlyPaidPayStructure.html": {
    "href": "api/Paytools.Employment.Model.HourlyPaidPayStructure.html",
    "title": "Class HourlyPaidPayStructure | Paytools",
    "keywords": "Class HourlyPaidPayStructure Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents the pay structure for hourly paid employees. public record HourlyPaidPayStructure : IEmployeePayStructure, IEquatable<HourlyPaidPayStructure> Inheritance object HourlyPaidPayStructure Implements IEmployeePayStructure IEquatable<HourlyPaidPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; init; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Paytools.Employment.Model.html": {
    "href": "api/Paytools.Employment.Model.html",
    "title": "Namespace Paytools.Employment.Model | Paytools",
    "keywords": "Namespace Paytools.Employment.Model Classes HourlyPaidPayStructure Represents the pay structure for hourly paid employees. NmwHourlyPaidPayStructure Represents an hourly paid pay structure that tracks National Minimum/Living Wage levels. P45FromPreviousEmployment Represents the information from a P45 provided from previous employment. SalariedPayStructure Represents the pay structure for salaried (i.e., annually paid) employees. Structs StudentLoanStatus Struct that holds student loan status information for an employee. Interfaces IDeductionDetails Interface that represents the various types of deduction that can be made from payroll. IDeductionEntry Interface that represents a deduction from payroll. IDeductionHistoryYtd Interface that represents an employee's deductions history for the tax year to date. IEarningsDetails Interface that represents a pay component (e.g., salary, bonus, sick pay, etc.). IEarningsEntry Represents an element of an employee's pay. IEarningsHistoryYtd Interface that represents an employee's earnings history for the tax year to date. IEmployee Interface that represents an employee for payroll purposes. IEmployeePayrollHistoryYtd Interface for types that represent the historical set of information for an employee's payroll for the current tax year. IEmployeePayStructure Interface that represents an employee's pay structure. IEmployer Interface that represents an employer for payroll purposes. IEmployment Interface that represents an employee's employment for payroll purposes. INewStarter Interface that represents a new starter for employment purposes. IPayrollAmount Interface that types should implement to communicate an amount that is either fixed or calculated as a product of quantity in units and per unit rate. IPayrolledBenefit Represents a payrolled benefit. IRecurringDeduction Interface that represents a recurring deduction for an employee. IRecurringEarnings Interface that represents a recurring earnings for an employee. Enums PayRateType Enum representing different pay types, i.e., salaried, hourly paid, etc. PayRateUnits Enum representing different pay units, i.e., per annum, per hour, etc. StarterDeclaration Represents a new employee's starter declaration, if provided. In the case of high earners, the starter declaration may be omitted and the employee put on a 0T tax code rather than a BR or \"emergency tax code\", in order to avoid paying insufficient tax."
  },
  "api/Paytools.Employment.Model.IDeductionDetails.html": {
    "href": "api/Paytools.Employment.Model.IDeductionDetails.html",
    "title": "Interface IDeductionDetails | Paytools",
    "keywords": "Interface IDeductionDetails Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents the various types of deduction that can be made from payroll. public interface IDeductionDetails Properties IsUnderSalaryExchangeArrangement Gets a value indicating whether this type of deduction is made as part of a salary exchange (aka salary sacrifice) arrangement. Note that when this flag is set, ReducesGrossPay, ReducesTaxablePay and ReducesNicablePay will also normally be set to true. bool IsUnderSalaryExchangeArrangement { get; } Property Value bool Remarks This property is primarily included to assist when it is time to show the deduction on the payslip, enabling all salary exchange deductions including pensions to be grouped together. Name Gets the full name of this type of deduction. string Name { get; } Property Value string ReducesGrossPay Gets a value indicating whether this type of deduction reduces the gross pay figure used to calculate take-home . bool ReducesGrossPay { get; } Property Value bool ReducesNicablePay Gets a value indicating whether this type of deduction affects pay for National Insurance purposes. bool ReducesNicablePay { get; } Property Value bool ReducesPensionablePay Gets a value indicating whether this type of deduction affects pay for pension purposes. bool ReducesPensionablePay { get; } Property Value bool ReducesTaxablePay Gets a value indicating whether this type of deduction is applied before or after tax. bool ReducesTaxablePay { get; } Property Value bool ShortName Gets the short name for this type of deduction. string ShortName { get; } Property Value string Units Gets the units for this deduction type, if applicable. Null if not applicable. PayRateUnits? Units { get; } Property Value PayRateUnits?"
  },
  "api/Paytools.Employment.Model.IDeductionEntry.html": {
    "href": "api/Paytools.Employment.Model.IDeductionEntry.html",
    "title": "Interface IDeductionEntry | Paytools",
    "keywords": "Interface IDeductionEntry Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents a deduction from payroll. public interface IDeductionEntry Properties DeductionClassification Gets the type of deduction. IDeductionDetails DeductionClassification { get; } Property Value IDeductionDetails QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total deduction. Optional. decimal? QuantityInUnits { get; } Property Value decimal? TotalDeduction Gets the total deduction applied. decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. Optional. decimal? ValuePerUnit { get; } Property Value decimal?"
  },
  "api/Paytools.Employment.Model.IDeductionHistoryYtd.html": {
    "href": "api/Paytools.Employment.Model.IDeductionHistoryYtd.html",
    "title": "Interface IDeductionHistoryYtd | Paytools",
    "keywords": "Interface IDeductionHistoryYtd Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employee's deductions history for the tax year to date. public interface IDeductionHistoryYtd Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty but usually not. ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry>"
  },
  "api/Paytools.Employment.Model.IEarningsDetails.html": {
    "href": "api/Paytools.Employment.Model.IEarningsDetails.html",
    "title": "Interface IEarningsDetails | Paytools",
    "keywords": "Interface IEarningsDetails Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents a pay component (e.g., salary, bonus, sick pay, etc.). public interface IEarningsDetails Properties Id Gets the unique ID for this pay component. Guid Id { get; } Property Value Guid IsNetToGross Gets a value indicating whether this pay component refers to a net amount that should be \"grossed up\", ensuring the employee receives the net amount in their take-home pay. bool IsNetToGross { get; } Property Value bool IsPensionable Gets a value indicating whether this pay component should be included in the employee's pensionable salary. bool IsPensionable { get; } Property Value bool IsSubjectToNi Gets a value indicating whether this pay component is subject to National Insurance. bool IsSubjectToNi { get; } Property Value bool IsSubjectToTax Gets a value indicating whether this pay component is subject to tax. bool IsSubjectToTax { get; } Property Value bool IsTreatedAsOvertime Gets a value indicating whether this pay component should be treated as overtime for the purposes of average overtime calculations. bool IsTreatedAsOvertime { get; } Property Value bool Name Gets the full name of this pay component. string Name { get; } Property Value string ShortName Gets the short name for this pay component. string ShortName { get; } Property Value string Units Gets the units for this pay component, if applicable. Null if not applicable. PayRateUnits? Units { get; } Property Value PayRateUnits?"
  },
  "api/Paytools.Employment.Model.IEarningsEntry.html": {
    "href": "api/Paytools.Employment.Model.IEarningsEntry.html",
    "title": "Interface IEarningsEntry | Paytools",
    "keywords": "Interface IEarningsEntry Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents an element of an employee's pay. public interface IEarningsEntry Properties EarningsDetails Gets the type of deduction. IEarningsDetails EarningsDetails { get; } Property Value IEarningsDetails QuantityInUnits Gets the quantity of this earnings entry that when multiplied by the ValuePerUnit gives the total earnings. decimal? QuantityInUnits { get; } Property Value decimal? TotalEarnings Gets the total earnings to be applied. decimal TotalEarnings { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total earnings. decimal? ValuePerUnit { get; } Property Value decimal?"
  },
  "api/Paytools.Employment.Model.IEarningsHistoryYtd.html": {
    "href": "api/Paytools.Employment.Model.IEarningsHistoryYtd.html",
    "title": "Interface IEarningsHistoryYtd | Paytools",
    "keywords": "Interface IEarningsHistoryYtd Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employee's earnings history for the tax year to date. public interface IEarningsHistoryYtd Properties Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry>"
  },
  "api/Paytools.Employment.Model.IEmployee.html": {
    "href": "api/Paytools.Employment.Model.IEmployee.html",
    "title": "Interface IEmployee | Paytools",
    "keywords": "Interface IEmployee Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employee for payroll purposes. public interface IEmployee : INamedPerson Inherited Members INamedPerson.Title INamedPerson.FirstName INamedPerson.Initials INamedPerson.MiddleNames INamedPerson.LastName INamedPerson.HasMiddleName INamedPerson.InitialsAsString Properties DateOfBirth Gets the individual's date of birth. DateOnly DateOfBirth { get; init; } Property Value DateOnly EmailAddress Gets or sets the employee's email address, if known. MailAddress? EmailAddress { get; set; } Property Value MailAddress Gender Gets the individual's \"official\" gender as recognised by HMRC for payroll purposes. Gender Gender { get; init; } Property Value Gender NiNumber Gets the individual's National Insurance number. NiNumber NiNumber { get; init; } Property Value NiNumber PostalAddress Gets or sets the employee's postal address. PostalAddress PostalAddress { get; set; } Property Value PostalAddress"
  },
  "api/Paytools.Employment.Model.IEmployeePayrollHistoryYtd.html": {
    "href": "api/Paytools.Employment.Model.IEmployeePayrollHistoryYtd.html",
    "title": "Interface IEmployeePayrollHistoryYtd | Paytools",
    "keywords": "Interface IEmployeePayrollHistoryYtd Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface for types that represent the historical set of information for an employee's payroll for the current tax year. public interface IEmployeePayrollHistoryYtd Extension Methods IEmployeePayrollHistoryYtdExtensions.Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Properties DeductionHistoryYtd Gets the employee's deduction history for the tax year to date. IDeductionHistoryYtd DeductionHistoryYtd { get; } Property Value IDeductionHistoryYtd EarningsHistoryYtd Gets the employee's earnings history for the tax year to date. IEarningsHistoryYtd EarningsHistoryYtd { get; } Property Value IEarningsHistoryYtd EmployeeNiHistoryEntries Gets the National Insurance payment history for the current tax year. Employees may transition between NI categories during the tax year and each NI category's payment record must be retained. NiYtdHistory EmployeeNiHistoryEntries { get; } Property Value NiYtdHistory EmployeePensionContributionsUnderNpaYtd Gets the total employee pension contributions made under a net pay arrangement to date this tax year. decimal EmployeePensionContributionsUnderNpaYtd { get; } Property Value decimal EmployeePensionContributionsUnderRasYtd Gets the total employee pension contributions made under relief at source to date this tax year. decimal EmployeePensionContributionsUnderRasYtd { get; } Property Value decimal EmployerPensionContributionsYtd Gets the total employer pension contributions made to date this tax year. decimal EmployerPensionContributionsYtd { get; } Property Value decimal GraduateLoanRepaymentsYtd Gets the graduate loan deductions made to date this tax year. decimal GraduateLoanRepaymentsYtd { get; } Property Value decimal GrossPayYtd Gets the gross pay paid to date this tax year. decimal GrossPayYtd { get; } Property Value decimal NicablePayYtd Gets the NI-able pay paid to date this tax year. decimal NicablePayYtd { get; } Property Value decimal PayrolledBenefitsYtd Gets the amount accrued against payrolled benefits to date this tax year. decimal PayrolledBenefitsYtd { get; } Property Value decimal SharedParentalPayYtd Gets any statutory parental pay paid to date this tax year. decimal SharedParentalPayYtd { get; } Property Value decimal StatutoryAdoptionPayYtd Gets any statutory adoption pay paid to date this tax year. decimal StatutoryAdoptionPayYtd { get; } Property Value decimal StatutoryMaternityPayYtd Gets any statutory maternity pay paid to date this tax year. decimal StatutoryMaternityPayYtd { get; } Property Value decimal StatutoryParentalBereavementPayYtd Gets any statutory parental bereavement pay paid to date this tax year. decimal StatutoryParentalBereavementPayYtd { get; } Property Value decimal StatutoryPaternityPayYtd Gets any statutory paternity pay paid to date this tax year. decimal StatutoryPaternityPayYtd { get; } Property Value decimal StudentLoanRepaymentsYtd Gets the student loan deductions made to date this tax year. decimal StudentLoanRepaymentsYtd { get; } Property Value decimal TaxablePayYtd Gets the taxable pay paid to date this tax year. decimal TaxablePayYtd { get; } Property Value decimal TaxPaidYtd Gets the income tax paid to date this tax year. decimal TaxPaidYtd { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets the tax that it has not been possible to collect so far this tax year due to the regulatory limit on income tax deductions. decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Paytools.Employment.Model.IEmployeePayStructure.html": {
    "href": "api/Paytools.Employment.Model.IEmployeePayStructure.html",
    "title": "Interface IEmployeePayStructure | Paytools",
    "keywords": "Interface IEmployeePayStructure Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employee's pay structure. public interface IEmployeePayStructure Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. Guid Id { get; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. IEarningsDetails PayComponent { get; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. decimal PayRate { get; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Paytools.Employment.Model.IEmployer.html": {
    "href": "api/Paytools.Employment.Model.IEmployer.html",
    "title": "Interface IEmployer | Paytools",
    "keywords": "Interface IEmployer Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employer for payroll purposes. public interface IEmployer Properties AccountsOfficeReference Gets the employer's HMRC Accounts Office reference, if known. HmrcAccountsOfficeReference? AccountsOfficeReference { get; } Property Value HmrcAccountsOfficeReference BusinessLegalName Gets the legal name of the business, including any legally required suffix, e.g., Ltd, LLP, etc. string BusinessLegalName { get; } Property Value string HmrcPayeReference Gets the employer's HMRC PAYE reference, if known. HmrcPayeReference? HmrcPayeReference { get; } Property Value HmrcPayeReference?"
  },
  "api/Paytools.Employment.Model.IEmployment.html": {
    "href": "api/Paytools.Employment.Model.IEmployment.html",
    "title": "Interface IEmployment | Paytools",
    "keywords": "Interface IEmployment Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents an employee's employment for payroll purposes. public interface IEmployment Properties DefaultPensionContributionLevels Gets the default pension contributions to apply in each pay period, unless overridden by employee or employer instruction for that pay period. IPensionContributionLevels DefaultPensionContributionLevels { get; } Property Value IPensionContributionLevels DirectorsNiCalculationMethod Gets the method for calculating National Insurance contributions. Applicable only for directors; null otherwise. DirectorsNiCalculationMethod? DirectorsNiCalculationMethod { get; } Property Value DirectorsNiCalculationMethod? EmploymentEndDate Gets the employee's official employment termination date, i.e., their last working day. Null if the employee is still employed. DateOnly? EmploymentEndDate { get; } Property Value DateOnly? EmploymentStartDate Gets the employee's official employment start date. DateOnly EmploymentStartDate { get; } Property Value DateOnly IsDirector Gets a value indicating whether the employee is a company director. bool IsDirector { get; } Property Value bool NiCategory Gets the employee's NI category. NiCategory NiCategory { get; } Property Value NiCategory PayrolledBenefits Gets the list of payrolled benefits that apply to this employment. ImmutableList<IPayrolledBenefit> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefit> PayrollHistoryYtd Gets the key figures from the employee's payroll history for the tax year to date. ref IEmployeePayrollHistoryYtd PayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd PayrollId Gets the employee's payroll ID, as reported to HMRC. Sometimes known as \"works number\". PayrollId PayrollId { get; } Property Value PayrollId PensionScheme Gets the pension scheme that the employee is a member of. Null if they are not a member of any scheme. IPensionScheme? PensionScheme { get; } Property Value IPensionScheme PrimaryPayStructure Gets the employee's primary pay structure. IEmployeePayStructure PrimaryPayStructure { get; } Property Value IEmployeePayStructure RecurringDeductions Gets the list of recurring deductions for an employee. ImmutableList<IRecurringDeduction> RecurringDeductions { get; } Property Value ImmutableList<IRecurringDeduction> RecurringEarnings Gets the list of recurring earnings elements for an employee. ImmutableList<IRecurringEarnings> RecurringEarnings { get; } Property Value ImmutableList<IRecurringEarnings> StudentLoanStatus Gets the employee's current student loan status. StudentLoanStatus? StudentLoanStatus { get; } Property Value StudentLoanStatus? TaxCode Gets the employee's tax code. TaxCode TaxCode { get; } Property Value TaxCode"
  },
  "api/Paytools.Employment.Model.INewStarter.html": {
    "href": "api/Paytools.Employment.Model.INewStarter.html",
    "title": "Interface INewStarter | Paytools",
    "keywords": "Interface INewStarter Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents a new starter for employment purposes. public interface INewStarter : IEmployee, INamedPerson Inherited Members IEmployee.NiNumber IEmployee.DateOfBirth IEmployee.Gender IEmployee.EmailAddress IEmployee.PostalAddress INamedPerson.Title INamedPerson.FirstName INamedPerson.Initials INamedPerson.MiddleNames INamedPerson.LastName INamedPerson.HasMiddleName INamedPerson.InitialsAsString Properties GraduateLoanDeductionNeeded Gets or sets a value indicating whether post-graduate loan deductions should continue. bool GraduateLoanDeductionNeeded { get; set; } Property Value bool StarterDeclaration Gets or sets the employee's starter declaration; null if it was not possible to obtain a starter declaration from the employee. StarterDeclaration? StarterDeclaration { get; set; } Property Value StarterDeclaration? StudentLoanDeductionNeeded Gets or sets a value indicating whether student loan deductions should continue. bool StudentLoanDeductionNeeded { get; set; } Property Value bool Remarks As a P45 from a previous employer does not indicate the student loan type, it may be necessary to request the employee's student loan plan type separately. StudentLoanType Gets or sets any applicable student loan type, if known. (See StudentLoanDeductionNeeded). StudentLoanType? StudentLoanType { get; set; } Property Value StudentLoanType?"
  },
  "api/Paytools.Employment.Model.IPayrollAmount.html": {
    "href": "api/Paytools.Employment.Model.IPayrollAmount.html",
    "title": "Interface IPayrollAmount | Paytools",
    "keywords": "Interface IPayrollAmount Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that types should implement to communicate an amount that is either fixed or calculated as a product of quantity in units and per unit rate. public interface IPayrollAmount Properties FixedAmount Gets the fixed amount of the deduction, if that is specified in place of quantity and value per unit. Used for absolute amounts. decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total amount. decimal? QuantityInUnits { get; init; } Property Value decimal? TotalDeduction Gets the total amount to be applied (default implementation). decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Paytools.Employment.Model.IPayrolledBenefit.html": {
    "href": "api/Paytools.Employment.Model.IPayrolledBenefit.html",
    "title": "Interface IPayrolledBenefit | Paytools",
    "keywords": "Interface IPayrolledBenefit Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents a payrolled benefit. public interface IPayrolledBenefit"
  },
  "api/Paytools.Employment.Model.IRecurringDeduction.html": {
    "href": "api/Paytools.Employment.Model.IRecurringDeduction.html",
    "title": "Interface IRecurringDeduction | Paytools",
    "keywords": "Interface IRecurringDeduction Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents a recurring deduction for an employee. public interface IRecurringDeduction : IApplicableFromTill, IPayrollAmount Inherited Members IApplicableFromTill.ApplicableFrom IApplicableFromTill.ApplicableTill IPayrollAmount.QuantityInUnits IPayrollAmount.ValuePerUnit IPayrollAmount.FixedAmount IPayrollAmount.TotalDeduction Properties DeductionType Gets the deduction type for this recurring deduction. IDeductionDetails DeductionType { get; } Property Value IDeductionDetails"
  },
  "api/Paytools.Employment.Model.IRecurringEarnings.html": {
    "href": "api/Paytools.Employment.Model.IRecurringEarnings.html",
    "title": "Interface IRecurringEarnings | Paytools",
    "keywords": "Interface IRecurringEarnings Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Interface that represents a recurring earnings for an employee. public interface IRecurringEarnings : IApplicableFromTill, IPayrollAmount Inherited Members IApplicableFromTill.ApplicableFrom IApplicableFromTill.ApplicableTill IPayrollAmount.QuantityInUnits IPayrollAmount.ValuePerUnit IPayrollAmount.FixedAmount IPayrollAmount.TotalDeduction Properties PayComponent Gets the pay component for this recurring earnings. IEarningsDetails PayComponent { get; } Property Value IEarningsDetails"
  },
  "api/Paytools.Employment.Model.NmwHourlyPaidPayStructure.html": {
    "href": "api/Paytools.Employment.Model.NmwHourlyPaidPayStructure.html",
    "title": "Class NmwHourlyPaidPayStructure | Paytools",
    "keywords": "Class NmwHourlyPaidPayStructure Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents an hourly paid pay structure that tracks National Minimum/Living Wage levels. public record NmwHourlyPaidPayStructure : IEmployeePayStructure, IEquatable<NmwHourlyPaidPayStructure> Inheritance object NmwHourlyPaidPayStructure Implements IEmployeePayStructure IEquatable<NmwHourlyPaidPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType Methods UpdateNmw(INmwEvaluator, PayReferencePeriod, DateOnly) Updates the PayRate based on the applicable NMW/NLW wage rate for the employee using their age at the start of the pay period. public void UpdateNmw(INmwEvaluator nmwEvaluator, PayReferencePeriod payPeriod, DateOnly dateOfBirth) Parameters nmwEvaluator INmwEvaluator Instance of INmwEvaluator used to obtain the appropriate rate. payPeriod PayReferencePeriod Pay period pertaining. dateOfBirth DateOnly Employee's date of birth."
  },
  "api/Paytools.Employment.Model.P45FromPreviousEmployment.html": {
    "href": "api/Paytools.Employment.Model.P45FromPreviousEmployment.html",
    "title": "Class P45FromPreviousEmployment | Paytools",
    "keywords": "Class P45FromPreviousEmployment Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents the information from a P45 provided from previous employment. public record P45FromPreviousEmployment : IEquatable<P45FromPreviousEmployment> Inheritance object P45FromPreviousEmployment Implements IEquatable<P45FromPreviousEmployment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Paytools.Employment.Model.PayRateType.html": {
    "href": "api/Paytools.Employment.Model.PayRateType.html",
    "title": "Enum PayRateType | Paytools",
    "keywords": "Enum PayRateType Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Enum representing different pay types, i.e., salaried, hourly paid, etc. public enum PayRateType Fields HourlyPaid = 1 Hourly pay type for hourly-paid employees. Other = 2 All pay rate type other than salaried and hourly paid. Salaried = 0 Per annum pay type for salaried employees."
  },
  "api/Paytools.Employment.Model.PayRateUnits.html": {
    "href": "api/Paytools.Employment.Model.PayRateUnits.html",
    "title": "Enum PayRateUnits | Paytools",
    "keywords": "Enum PayRateUnits Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Enum representing different pay units, i.e., per annum, per hour, etc. public enum PayRateUnits Fields PerAnnum = 0 Per annum pay type for salaried employees. PerDay = 2 Daily rate, typically for salaried employees with regular working patterns. PerHour = 1 Hourly pay type for hourly-paid employees."
  },
  "api/Paytools.Employment.Model.SalariedPayStructure.html": {
    "href": "api/Paytools.Employment.Model.SalariedPayStructure.html",
    "title": "Class SalariedPayStructure | Paytools",
    "keywords": "Class SalariedPayStructure Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents the pay structure for salaried (i.e., annually paid) employees. public record SalariedPayStructure : IEmployeePayStructure, IEquatable<SalariedPayStructure> Inheritance object SalariedPayStructure Implements IEmployeePayStructure IEquatable<SalariedPayStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayStructureExtensions.GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) IEmployeePayStructureExtensions.GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Properties Id Gets the unique ID for this pay structure. public Guid Id { get; init; } Property Value Guid PayComponent Gets the pay component that this pay structure is based on. public IEarningsDetails PayComponent { get; init; } Property Value IEarningsDetails PayRate Gets the rate of pay. The type of this rate of pay is given by PayRateType. public decimal PayRate { get; init; } Property Value decimal PayRateType Gets the type of pay that PayRate represents. public PayRateType PayRateType { get; } Property Value PayRateType"
  },
  "api/Paytools.Employment.Model.StarterDeclaration.html": {
    "href": "api/Paytools.Employment.Model.StarterDeclaration.html",
    "title": "Enum StarterDeclaration | Paytools",
    "keywords": "Enum StarterDeclaration Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Represents a new employee's starter declaration, if provided. In the case of high earners, the starter declaration may be omitted and the employee put on a 0T tax code rather than a BR or \"emergency tax code\", in order to avoid paying insufficient tax. public enum StarterDeclaration Fields A = 0 HMRC: \"This is my first job since 6 April and since the 6 April I have not received payments from any of the following: Jobseeker's Allowance Employment and Support Allowance Incapacity Benefit \". B = 1 HMRC: \"Since 6 April I have had another job but I do not have a P45. And/or since the 6 April I have received payments from any of the following: Jobseeker's Allowance Employment and Support Allowance Incapacity Benefit \". C = 2 have another job and/or I am in receipt of a State, workplace or private pension. HighEarnerNotRecorded = 3 No Starter Declaration captured as the employee is a high earner."
  },
  "api/Paytools.Employment.Model.StudentLoanStatus.html": {
    "href": "api/Paytools.Employment.Model.StudentLoanStatus.html",
    "title": "Struct StudentLoanStatus | Paytools",
    "keywords": "Struct StudentLoanStatus Namespace Paytools.Employment.Model Assembly Paytools.Employment.dll Struct that holds student loan status information for an employee. public readonly struct StudentLoanStatus Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasPostGradLoan Gets a value indicating whether the employee has an outstanding post-graduate loan. public bool HasPostGradLoan { get; init; } Property Value bool StudentLoanType Gets the student loan applicable for an employee. Null if the employee does not have an outstanding student loan. public StudentLoanType? StudentLoanType { get; init; } Property Value StudentLoanType?"
  },
  "api/Paytools.html": {
    "href": "api/Paytools.html",
    "title": "Namespace Paytools | Paytools",
    "keywords": "Namespace Paytools Paytools.Employment.Model Paytools.IncomeTax Paytools.NationalInsurance Paytools.NationalMinimumWage Paytools.Payroll Paytools.Pensions Paytools.ReferenceData Paytools.StudentLoans"
  },
  "api/Paytools.IncomeTax.html": {
    "href": "api/Paytools.IncomeTax.html",
    "title": "Namespace Paytools.IncomeTax | Paytools",
    "keywords": "Namespace Paytools.IncomeTax Paytools.IncomeTax.Model Paytools.IncomeTax.ReferenceData Classes TaxCalculator Represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. TaxCalculator implements ITaxCalculator; access to tax calculators is through the TaxCalculatorFactory; in normal use, TaxCalculators are not be created directly. A TaxCalculator is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. TaxCalculatorFactory Factory to generate ITaxCalculator implementations that are for a given pay date and specific tax regime. Interfaces ITaxCalculator Interface that represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. Access to tax calculators is through the TaxCalculatorFactory; in normal use, implementations of ITaxCalculator are not be created directly. An ITaxCalculator instance is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. ITaxCalculatorFactory Interface that represents factories that can generate ITaxCalculator implementations."
  },
  "api/Paytools.IncomeTax.ITaxCalculator.html": {
    "href": "api/Paytools.IncomeTax.ITaxCalculator.html",
    "title": "Interface ITaxCalculator | Paytools",
    "keywords": "Interface ITaxCalculator Namespace Paytools.IncomeTax Assembly Paytools.IncomeTax.dll Interface that represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. Access to tax calculators is through the TaxCalculatorFactory; in normal use, implementations of ITaxCalculator are not be created directly. An ITaxCalculator instance is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. public interface ITaxCalculator Properties PayFrequency Gets the pay frequency for this calculator. PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidths Gets the set of pro-rata tax bandwidths in use for a given tax year, tax regime and tax period. TaxPeriodBandwidthSet TaxBandwidths { get; } Property Value TaxPeriodBandwidthSet TaxPeriod Gets the relevant tax period for this calculator. int TaxPeriod { get; } Property Value int TaxPeriodCount Gets the number of tax periods within a given tax year, based on the supplied pay frequency. int TaxPeriodCount { get; } Property Value int TaxYear Gets the tax year that this calculator pertains to. TaxYear TaxYear { get; } Property Value TaxYear Methods Calculate(decimal, decimal, TaxCode, decimal, decimal, decimal, out ITaxCalculationResult) Calculates the tax due based on tax code, total taxable salary and total tax paid to date. void Calculate(decimal totalTaxableSalaryInPeriod, decimal benefitsInKind, TaxCode taxCode, decimal taxableSalaryYearToDate, decimal taxPaidYearToDate, decimal taxUnpaidDueToRegulatoryLimit, out ITaxCalculationResult result) Parameters totalTaxableSalaryInPeriod decimal Taxable pay in period (i.e., gross less pre-tax deductions but including benefits in kind). benefitsInKind decimal Benefits in kind element of the taxable pay for the period. taxCode TaxCode Individual's tax code. taxableSalaryYearToDate decimal Total year to date taxable salary up to and including the end of the previous tax period. taxPaidYearToDate decimal Total year to date tax paid up to and including the end of the previous tax period. taxUnpaidDueToRegulatoryLimit decimal Any tax outstanding due to the effect of the regulatory limit. result ITaxCalculationResult An ITaxCalculationResult containing the tax now due plus related information from the tax calculation."
  },
  "api/Paytools.IncomeTax.ITaxCalculatorFactory.html": {
    "href": "api/Paytools.IncomeTax.ITaxCalculatorFactory.html",
    "title": "Interface ITaxCalculatorFactory | Paytools",
    "keywords": "Interface ITaxCalculatorFactory Namespace Paytools.IncomeTax Assembly Paytools.IncomeTax.dll Interface that represents factories that can generate ITaxCalculator implementations. public interface ITaxCalculatorFactory Methods GetCalculator(CountriesForTaxPurposes, PayDate) Gets an instance of an ITaxCalculator for the specified tax regime and pay date. ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, PayDate payDate) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. payDate PayDate Pay date. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime and pay date."
  },
  "api/Paytools.IncomeTax.Model.html": {
    "href": "api/Paytools.IncomeTax.Model.html",
    "title": "Namespace Paytools.IncomeTax.Model | Paytools",
    "keywords": "Namespace Paytools.IncomeTax.Model Structs TaxCalculationResult Represents the result of an income tax calculation for an individual, providing the tax due plus a rich set of information about how the result was achieved. Interfaces ITaxCalculationResult Interface that represents the result of an income tax calculation. The purpose of this interface (and its implementations) is to provide a richer set of data about the calculation than just the final tax due number. This can be helpful in employee support situations in particular."
  },
  "api/Paytools.IncomeTax.Model.ITaxCalculationResult.html": {
    "href": "api/Paytools.IncomeTax.Model.ITaxCalculationResult.html",
    "title": "Interface ITaxCalculationResult | Paytools",
    "keywords": "Interface ITaxCalculationResult Namespace Paytools.IncomeTax.Model Assembly Paytools.IncomeTax.dll Interface that represents the result of an income tax calculation. The purpose of this interface (and its implementations) is to provide a richer set of data about the calculation than just the final tax due number. This can be helpful in employee support situations in particular. public interface ITaxCalculationResult Properties Calculator Gets the calculator (implementation of ITaxCalculator) used to perform this calculation. ITaxCalculator Calculator { get; } Property Value ITaxCalculator FinalTaxDue Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This figure takes account of both the effect of the regulatory limit and the effect of any unpaid taxes due to the effect of the regulatory limit in previous periods. decimal FinalTaxDue { get; } Property Value decimal HighestApplicableTaxBandIndex Gets the numeric index of the highest tax band used in the calculation. int HighestApplicableTaxBandIndex { get; } Property Value int IncomeAtHighestApplicableBand Gets the total income to date that falls within the highest tax band used in the calculation. decimal IncomeAtHighestApplicableBand { get; } Property Value decimal PreviousPeriodSalaryYearToDate Gets the year to date taxable salary paid up to and including the end of the previous period. decimal PreviousPeriodSalaryYearToDate { get; } Property Value decimal PreviousPeriodTaxPaidYearToDate Gets the year to date tax paid up to and including the end of the previous period. decimal PreviousPeriodTaxPaidYearToDate { get; } Property Value decimal TaxableSalaryAfterTaxFreePay Gets the taxable salary used in this calculation. This is the gross salary less any tax-free pay (or plus any additional notional pay in the case of K tax codes). decimal TaxableSalaryAfterTaxFreePay { get; } Property Value decimal TaxAtHighestApplicableBand Gets the total tax due for income to date that falls within the highest tax band used in the calculation. decimal TaxAtHighestApplicableBand { get; } Property Value decimal TaxCode Gets the TaxCode used in this calculation. TaxCode TaxCode { get; } Property Value TaxCode TaxDueBeforeApplicationOfRegulatoryLimit Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This is before considering the effect of regulatory limits. decimal TaxDueBeforeApplicationOfRegulatoryLimit { get; } Property Value decimal TaxFreePayToEndOfPeriod Gets the tax-free pay applicable to the end of the period, as given by the specified tax code. May be negative in the case of K tax codes. decimal TaxFreePayToEndOfPeriod { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets any unpaid tax due to the regulatory limit. TODO: implement this properly. decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Paytools.IncomeTax.Model.TaxCalculationResult.html": {
    "href": "api/Paytools.IncomeTax.Model.TaxCalculationResult.html",
    "title": "Struct TaxCalculationResult | Paytools",
    "keywords": "Struct TaxCalculationResult Namespace Paytools.IncomeTax.Model Assembly Paytools.IncomeTax.dll Represents the result of an income tax calculation for an individual, providing the tax due plus a rich set of information about how the result was achieved. public readonly struct TaxCalculationResult : ITaxCalculationResult Implements ITaxCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TaxCalculationResult(ITaxCalculator, TaxCode, decimal, decimal, decimal, decimal, int, decimal, decimal, decimal, decimal, decimal) Initialises a new instance of TaxCalculationResult using the supplied parameters. public TaxCalculationResult(ITaxCalculator calculator, TaxCode taxCode, decimal taxFreePayToEndOfPeriod, decimal taxableSalary, decimal previousPeriodSalaryYearToDate, decimal previousPeriodTaxPaidYearToDate, int highestApplicableTaxBandIndex, decimal incomeAtHighestApplicableBand, decimal taxAtHighestApplicableBand, decimal taxUnpaidDueToRegulatoryLimit, decimal taxDueBeforeRegulatoryLimitEffects, decimal finalTaxDue) Parameters calculator ITaxCalculator Calculator (implementation of ITaxCalculator) used to perform this calculation. taxCode TaxCode TaxCode used in this calculation. taxFreePayToEndOfPeriod decimal Tax-free pay applicable to the end of the period, derived from the specified tax code. taxableSalary decimal Taxable salary used in this calculation. previousPeriodSalaryYearToDate decimal Year to date taxable salary paid up to and including the end of the previous period. previousPeriodTaxPaidYearToDate decimal Year to date tax paid up to and including the end of the previous period. highestApplicableTaxBandIndex int Numeric index of the highest tax band (TaxPeriodBandwidthEntry) used in the calculation. incomeAtHighestApplicableBand decimal Total income to date that falls within the highest tax band used in the calculation. taxAtHighestApplicableBand decimal Total tax due for income to date that falls within the highest tax band used in the calculation. taxUnpaidDueToRegulatoryLimit decimal Previous period tax unpaid due to regulatory limit. taxDueBeforeRegulatoryLimitEffects decimal Tax due before considering the effects of regulatory limits. finalTaxDue decimal Tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period, accounting for the effects of regulatory limits, both from this period and any prior periods. Properties Calculator Gets the calculator (implementation of ITaxCalculator) used to perform this calculation. public ITaxCalculator Calculator { get; } Property Value ITaxCalculator FinalTaxDue Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This figure takes account of both the effect of the regulatory limit and the effect of any unpaid taxes due to the effect of the regulatory limit in previous periods. public decimal FinalTaxDue { get; } Property Value decimal HighestApplicableTaxBandIndex Gets the numberic index of the highest tax band used in the calculation. public int HighestApplicableTaxBandIndex { get; } Property Value int IncomeAtHighestApplicableBand Gets the total income to date that falls within the highest tax band used in the calculation. public decimal IncomeAtHighestApplicableBand { get; } Property Value decimal PreviousPeriodSalaryYearToDate Gets the year to date taxable salary paid up to and including the end of the previous period. public decimal PreviousPeriodSalaryYearToDate { get; } Property Value decimal PreviousPeriodTaxPaidYearToDate Gets the year to date tax paid up to and including the end of the previous period. public decimal PreviousPeriodTaxPaidYearToDate { get; } Property Value decimal TaxableSalaryAfterTaxFreePay Gets the taxable salary used in this calculation. This is the gross salary less any tax-free pay (or plus any additional notional pay in the case of K tax codes). public decimal TaxableSalaryAfterTaxFreePay { get; } Property Value decimal TaxAtHighestApplicableBand Gets the total tax due for income to date that falls within the highest tax band used in the calculation. public decimal TaxAtHighestApplicableBand { get; } Property Value decimal TaxCode Gets the TaxCode used in this calculation. public TaxCode TaxCode { get; } Property Value TaxCode TaxDueBeforeApplicationOfRegulatoryLimit Gets the tax due at the end of the period, based on the taxable earnings to the end of the period and accounting for any tax-free pay up to the end of the period. This is before considering the effect of regulatory limits. public decimal TaxDueBeforeApplicationOfRegulatoryLimit { get; } Property Value decimal TaxFreePayToEndOfPeriod Gets the tax-free pay applicable to the end of the period, as given by the specified tax code. May be negative in the case of K tax codes. public decimal TaxFreePayToEndOfPeriod { get; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets any unpaid tax due to the regulatory limit. TODO: implement this properly. public decimal TaxUnpaidDueToRegulatoryLimit { get; } Property Value decimal"
  },
  "api/Paytools.IncomeTax.ReferenceData.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.html",
    "title": "Namespace Paytools.IncomeTax.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.IncomeTax.ReferenceData Classes TaxBandwidthEntry Represents a single tax bandwidth entry for a full tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. This information constitutes a single TaxBandwidthEntry. TaxBandwidthSet Represents a set of tax bandwidths for a given tax regime for a given tax year. TaxPeriodBandwidthEntry Represents a single tax bandwidth entry for a portion of a tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. In simple terms, this bandwidth is distributed evenly across the tax year, so in tax period 1 for a monthly payroll, the bandwidth would be £2,097 / 12 = £174.75. All other parameters are adjusted accordingly in line with the tax period. This information constitutes a single TaxPeriodBandwidthEntry. TaxPeriodBandwidthSet Represents a set of tax bandwidths for a given tax regime for a given tax year, pro-rated for a given tax period. For Example, for weekly payrolls and relating to tax period one, the cumulative thresholds and tax values are calculated as 1/52th of the annual amount. Interfaces ITaxReferenceDataProvider Interface that represents a provider of tax band information."
  },
  "api/Paytools.IncomeTax.ReferenceData.ITaxReferenceDataProvider.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.ITaxReferenceDataProvider.html",
    "title": "Interface ITaxReferenceDataProvider | Paytools",
    "keywords": "Interface ITaxReferenceDataProvider Namespace Paytools.IncomeTax.ReferenceData Assembly Paytools.IncomeTax.dll Interface that represents a provider of tax band information. public interface ITaxReferenceDataProvider Methods GetTaxBandsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Retrieves the tax bands for a given tax year in the form of a dictionary (ReadOnlyDictionary<TKey, TValue>) keyed on tax regime, i.e., CountriesForTaxPurposes. ReadOnlyDictionary<CountriesForTaxPurposes, TaxBandwidthSet> GetTaxBandsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Desired tax year. payFrequency PayFrequency Pay frequency pertaining. Used in conjunction with the taxPeriod parameter to determine the applicable date (in case of in-year tax changes). taxPeriod int Tax period, e.g., 1 for month 1. Currently ignored on the assumption that in-year tax changes are not anticipated but provided for future . Returns ReadOnlyDictionary<CountriesForTaxPurposes, TaxBandwidthSet> ReadOnlyDictionary of TaxBandwidthSet's keyed on tax regime. Remarks Although ReadOnlyDictionary is not guaranteed to be thread-safe, in the current implementation the underlying Dictionary is guaranteed not to change, so thread-safety can be assumed."
  },
  "api/Paytools.IncomeTax.ReferenceData.TaxBandwidthEntry.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.TaxBandwidthEntry.html",
    "title": "Class TaxBandwidthEntry | Paytools",
    "keywords": "Class TaxBandwidthEntry Namespace Paytools.IncomeTax.ReferenceData Assembly Paytools.IncomeTax.dll Represents a single tax bandwidth entry for a full tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. This information constitutes a single TaxBandwidthEntry. public record TaxBandwidthEntry : IEquatable<TaxBandwidthEntry> Inheritance object TaxBandwidthEntry Implements IEquatable<TaxBandwidthEntry> Derived TaxPeriodBandwidthEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxBandwidthEntry(string, decimal, decimal?, bool, TaxBandwidthEntry?) Initialises a new instance of TaxBandwidthEntry with the supplied parameters. public TaxBandwidthEntry(string bandDescription, decimal taxBandRate, decimal? taxBandTo, bool isTopRate, TaxBandwidthEntry? entryBelow) Parameters bandDescription string Descriptive text associated with this TaxBandwidthEntry. taxBandRate decimal Applicable tax rate for this TaxBandwidthEntry. taxBandTo decimal? Upper threshold for this TaxBandwidthEntry. isTopRate bool True if this is the top TaxBandwidthEntry for the tax regime in question. entryBelow TaxBandwidthEntry TaxBandwidthEntry immediately below this TaxBandwidthEntry, if applicable; null otherwise. Properties Bandwidth Gets the bandwidth of this TaxBandwidthEntry, i.e., the upper threshold less any lower threshold. public decimal Bandwidth { get; } Property Value decimal BandWidthEntryBelow Gets the TaxBandwidthEntry that is immediately below this TaxBandwidthEntry, or null if this is the lowest TaxBandwidthEntry for this tax regime. public TaxBandwidthEntry? BandWidthEntryBelow { get; } Property Value TaxBandwidthEntry CumulativeBandwidth Gets or sets the cumulative bandwidth of this TaxBandwidthEntry, i.e., the sum of this bandwidth and all bandwidths below. public decimal CumulativeBandwidth { get; protected set; } Property Value decimal CumulativeTax Gets or sets the tax due in a single tax year for this TaxBandwidthEntry and all bandwidths below, assuming they are all fully used. public decimal CumulativeTax { get; protected set; } Property Value decimal Description Gets the descriptive text associated with this TaxBandwidthEntry. public string Description { get; } Property Value string IsTopBand Gets a value indicating whether this TaxBandwidthEntry represents the top band of tax for this tax regime. public bool IsTopBand { get; } Property Value bool Rate Gets the applicable tax rate for this TaxBandwidthEntry. public decimal Rate { get; } Property Value decimal TaxForBand Gets or sets the tax due in a single tax year for just this TaxBandwidthEntry if it is fully used. public decimal TaxForBand { get; protected set; } Property Value decimal"
  },
  "api/Paytools.IncomeTax.ReferenceData.TaxBandwidthSet.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.TaxBandwidthSet.html",
    "title": "Class TaxBandwidthSet | Paytools",
    "keywords": "Class TaxBandwidthSet Namespace Paytools.IncomeTax.ReferenceData Assembly Paytools.IncomeTax.dll Represents a set of tax bandwidths for a given tax regime for a given tax year. public record TaxBandwidthSet : IEquatable<TaxBandwidthSet> Inheritance object TaxBandwidthSet Implements IEquatable<TaxBandwidthSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxBandwidthSet(TaxBandwidthEntry[]) Initialises a new instance of TaxBandwidthSet. public TaxBandwidthSet(TaxBandwidthEntry[] taxBandwidthEntries) Parameters taxBandwidthEntries TaxBandwidthEntry[] Array of TaxBandwidthEntry's for this tax year/regime combination. Properties TaxBandwidthEntries Gets the set of TaxBandwidthEntry's for this TaxBandwidthSet as an array. public TaxBandwidthEntry[] TaxBandwidthEntries { get; } Property Value TaxBandwidthEntry[]"
  },
  "api/Paytools.IncomeTax.ReferenceData.TaxPeriodBandwidthEntry.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.TaxPeriodBandwidthEntry.html",
    "title": "Class TaxPeriodBandwidthEntry | Paytools",
    "keywords": "Class TaxPeriodBandwidthEntry Namespace Paytools.IncomeTax.ReferenceData Assembly Paytools.IncomeTax.dll Represents a single tax bandwidth entry for a portion of a tax year. For example, in the UK for 2021-2022, the starter rate of tax for Scottish taxpayers was 19%, from zero taxable earnings up to £2,097. In simple terms, this bandwidth is distributed evenly across the tax year, so in tax period 1 for a monthly payroll, the bandwidth would be £2,097 / 12 = £174.75. All other parameters are adjusted accordingly in line with the tax period. This information constitutes a single TaxPeriodBandwidthEntry. public record TaxPeriodBandwidthEntry : TaxBandwidthEntry, IEquatable<TaxBandwidthEntry>, IEquatable<TaxPeriodBandwidthEntry> Inheritance object TaxBandwidthEntry TaxPeriodBandwidthEntry Implements IEquatable<TaxBandwidthEntry> IEquatable<TaxPeriodBandwidthEntry> Inherited Members TaxBandwidthEntry.Description TaxBandwidthEntry.Bandwidth TaxBandwidthEntry.CumulativeBandwidth TaxBandwidthEntry.Rate TaxBandwidthEntry.TaxForBand TaxBandwidthEntry.CumulativeTax TaxBandwidthEntry.IsTopBand object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxPeriodBandwidthEntry(int, TaxBandwidthEntry, PayFrequency, int, TaxPeriodBandwidthEntry?) Initialises a new instance of TaxPeriodBandwidthEntry with the supplied parameters. public TaxPeriodBandwidthEntry(int index, TaxBandwidthEntry annualEntry, PayFrequency payFrequency, int taxPeriod, TaxPeriodBandwidthEntry? periodEntryBelow) Parameters index int Zero-based numeric index of this TaxPeriodBandwidthEntry within its TaxPeriodBandwidthSet. annualEntry TaxBandwidthEntry Corresponding annual tax bandwidth entry, i.e., TaxBandwidthEntry. payFrequency PayFrequency Pay frequency for this TaxPeriodBandwidthEntry. taxPeriod int Tax period, e.g., 1-12 for monthly. periodEntryBelow TaxPeriodBandwidthEntry TaxPeriodBandwidthEntry immediately below this one, or null if this is the lowest band. Properties BandWidthEntryBelow Gets the TaxPeriodBandwidthEntry that is immediately below this TaxPeriodBandwidthEntry, or null if this is the lowest TaxPeriodBandwidthEntry for this tax regime. public TaxPeriodBandwidthEntry? BandWidthEntryBelow { get; } Property Value TaxPeriodBandwidthEntry EntryIndex Gets the numeric index of this TaxPeriodBandwidthEntry within its TaxPeriodBandwidthSet. Zero-based, with 0 being the lowest tax band. public int EntryIndex { get; } Property Value int Period1CumulativeBandwidth Gets the cumulative bandwidth value for tax period 1. public decimal Period1CumulativeBandwidth { get; } Property Value decimal Period1CumulativeTax Gets the cumulative tax value for tax period 1. public decimal Period1CumulativeTax { get; } Property Value decimal"
  },
  "api/Paytools.IncomeTax.ReferenceData.TaxPeriodBandwidthSet.html": {
    "href": "api/Paytools.IncomeTax.ReferenceData.TaxPeriodBandwidthSet.html",
    "title": "Class TaxPeriodBandwidthSet | Paytools",
    "keywords": "Class TaxPeriodBandwidthSet Namespace Paytools.IncomeTax.ReferenceData Assembly Paytools.IncomeTax.dll Represents a set of tax bandwidths for a given tax regime for a given tax year, pro-rated for a given tax period. For Example, for weekly payrolls and relating to tax period one, the cumulative thresholds and tax values are calculated as 1/52th of the annual amount. public record TaxPeriodBandwidthSet : IEquatable<TaxPeriodBandwidthSet> Inheritance object TaxPeriodBandwidthSet Implements IEquatable<TaxPeriodBandwidthSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxPeriodBandwidthSet(TaxBandwidthSet, PayFrequency, int) Initialises a new instance of TaxPeriodBandwidthSet with the supplied parameters. public TaxPeriodBandwidthSet(TaxBandwidthSet annualTaxBandwidthSet, PayFrequency payFrequency, int taxPeriod) Parameters annualTaxBandwidthSet TaxBandwidthSet Tax bandwidth set for the full tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Relevant tax period. Properties PayFrequency Gets the applicable pay frequency for this TaxPeriodBandwidthSet. public PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidthEntries Gets the set of tax bandwidth entries for the given tax regime, tax year and tax period/pay frequency combination, as an array of TaxPeriodBandwidthEntry's. public TaxPeriodBandwidthEntry[] TaxBandwidthEntries { get; } Property Value TaxPeriodBandwidthEntry[] TaxPeriod Gets the relevant tax period for this TaxPeriodBandwidthSet. public int TaxPeriod { get; } Property Value int"
  },
  "api/Paytools.IncomeTax.TaxCalculator.html": {
    "href": "api/Paytools.IncomeTax.TaxCalculator.html",
    "title": "Class TaxCalculator | Paytools",
    "keywords": "Class TaxCalculator Namespace Paytools.IncomeTax Assembly Paytools.IncomeTax.dll Represents a calculator for calculating income tax based on tax code, taxable income and tax paid to date. TaxCalculator implements ITaxCalculator; access to tax calculators is through the TaxCalculatorFactory; in normal use, TaxCalculators are not be created directly. A TaxCalculator is specific to a given pay frequency and tax period, which corresponds to an instance of a given PayDate. public class TaxCalculator : ITaxCalculator Inheritance object TaxCalculator Implements ITaxCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PayFrequency Gets the pay frequency for this calculator. public PayFrequency PayFrequency { get; } Property Value PayFrequency TaxBandwidths Gets the set of pro-rata tax bandwidths in use for a given tax year, tax regime and tax period. public TaxPeriodBandwidthSet TaxBandwidths { get; } Property Value TaxPeriodBandwidthSet TaxPeriod Gets the relevant tax period for this calculator. public int TaxPeriod { get; } Property Value int TaxPeriodCount Gets the number of tax periods within a given tax year, based on the supplied pay frequency. public int TaxPeriodCount { get; } Property Value int TaxYear Gets the tax year that this calculator pertains to. public TaxYear TaxYear { get; } Property Value TaxYear Methods Calculate(decimal, decimal, TaxCode, decimal, decimal, decimal, out ITaxCalculationResult) Calculates the tax due based on tax code, total taxable salary and total tax paid to date. public void Calculate(decimal totalTaxableSalaryInPeriod, decimal benefitsInKind, TaxCode taxCode, decimal taxableSalaryYearToDate, decimal taxPaidYearToDate, decimal taxUnpaidDueToRegulatoryLimit, out ITaxCalculationResult result) Parameters totalTaxableSalaryInPeriod decimal Taxable pay in period (i.e., gross less pre-tax deductions but including benefits in kind). benefitsInKind decimal Benefits in kind element of the taxable pay for the period. taxCode TaxCode Individual's tax code. This is required in order to 1) determine the tax-free pay and 2) determine the appropriate calculation to perform. Note that an income tax calculator is specify to a given tax regime; an ArgumentException is thrown if the tax code is inconsistent with the tax regime for this calculator. taxableSalaryYearToDate decimal Total year to date taxable salary up to and including the end of the previous tax period. taxPaidYearToDate decimal Total year to date tax paid up to and including the end of the previous tax period. taxUnpaidDueToRegulatoryLimit decimal Any tax outstanding due to the effect of the regulatory limit. result ITaxCalculationResult An ITaxCalculationResult containing the tax now due plus related information from the tax calculation. Exceptions ArgumentException Thrown if the tax code supplied is not consistent with the tax regime for this tax calculator. InvalidReferenceDataException Thrown if it is not possible to find an appropriate tax bandwidth in the reference data for this tax regime."
  },
  "api/Paytools.IncomeTax.TaxCalculatorFactory.html": {
    "href": "api/Paytools.IncomeTax.TaxCalculatorFactory.html",
    "title": "Class TaxCalculatorFactory | Paytools",
    "keywords": "Class TaxCalculatorFactory Namespace Paytools.IncomeTax Assembly Paytools.IncomeTax.dll Factory to generate ITaxCalculator implementations that are for a given pay date and specific tax regime. public class TaxCalculatorFactory : ITaxCalculatorFactory Inheritance object TaxCalculatorFactory Implements ITaxCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxCalculatorFactory(ITaxReferenceDataProvider) Initialises a new instance of TaxCalculatorFactory using the supplied tax band provider. public TaxCalculatorFactory(ITaxReferenceDataProvider taxBandProvider) Parameters taxBandProvider ITaxReferenceDataProvider Tax band provider for providing access to tax bands for given tax years. Methods GetCalculator(CountriesForTaxPurposes, PayDate) Gets an instance of an ITaxCalculator for the specified tax regime and pay date. public ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, PayDate payDate) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. payDate PayDate Pay date. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime and pay date. Exceptions InvalidReferenceDataException Thrown if it was not possible to find a tax bandwidth set for the specified tax regime and tax year combination. GetCalculator(CountriesForTaxPurposes, TaxYear, PayFrequency, int) Gets an instance of an ITaxCalculator for the specified tax regime, tax year, tax period and pay frequency. public ITaxCalculator GetCalculator(CountriesForTaxPurposes applicableCountries, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters applicableCountries CountriesForTaxPurposes Applicable tax regime. taxYear TaxYear Relevant tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns ITaxCalculator Instance of ITaxCalculator for the specified tax regime, tax year and period and pay frequency. Exceptions InvalidReferenceDataException Thrown if it was not possible to find a tax bandwidth set for the specified tax regime and tax year combination."
  },
  "api/Paytools.NationalInsurance.Extensions.DecimalNiRoundingExtensions.html": {
    "href": "api/Paytools.NationalInsurance.Extensions.DecimalNiRoundingExtensions.html",
    "title": "Class DecimalNiRoundingExtensions | Paytools",
    "keywords": "Class DecimalNiRoundingExtensions Namespace Paytools.NationalInsurance.Extensions Assembly Paytools.NationalInsurance.dll Extension methods for decimal instances to provide specialised rounding as per HMRC documentation. public static class DecimalNiRoundingExtensions Inheritance object DecimalNiRoundingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NiRound(decimal) Rounds a decimal value based on the value of the third digit after the decimal point. If the value of the third digit is 6 or above, the number is rounded up to the nearest whole pence; if the value of the third digit is 5 or below, the number is rounded down. public static decimal NiRound(this decimal value) Parameters value decimal decimal value to be rounded. Returns decimal Rounded decimal value. Remarks This extension method is included to support the specific rounding required for NI calculations as set out in the 'National Insurance contributions (NICs) guidance for software developers' document published by HMRC. Exceptions ArgumentOutOfRangeException Thrown if a negative number is supplied for value."
  },
  "api/Paytools.NationalInsurance.Extensions.html": {
    "href": "api/Paytools.NationalInsurance.Extensions.html",
    "title": "Namespace Paytools.NationalInsurance.Extensions | Paytools",
    "keywords": "Namespace Paytools.NationalInsurance.Extensions Classes DecimalNiRoundingExtensions Extension methods for decimal instances to provide specialised rounding as per HMRC documentation."
  },
  "api/Paytools.NationalInsurance.html": {
    "href": "api/Paytools.NationalInsurance.html",
    "title": "Namespace Paytools.NationalInsurance | Paytools",
    "keywords": "Namespace Paytools.NationalInsurance Paytools.NationalInsurance.Extensions Paytools.NationalInsurance.Model Paytools.NationalInsurance.ReferenceData Classes NiCalculator Represents a National Insurance calculator that implements INiCalculator. NiCalculatorFactory Factory to generate INiCalculatorFactory implementations that are for a given pay date. Interfaces INiCalculator Interface for types that provide National Insurance calculations. INiCalculatorFactory Interface that represents factories that can generate INiCalculator implementations."
  },
  "api/Paytools.NationalInsurance.INiCalculator.html": {
    "href": "api/Paytools.NationalInsurance.INiCalculator.html",
    "title": "Interface INiCalculator | Paytools",
    "keywords": "Interface INiCalculator Namespace Paytools.NationalInsurance Assembly Paytools.NationalInsurance.dll Interface for types that provide National Insurance calculations. public interface INiCalculator Methods Calculate(NiCategory, decimal, out INiCalculationResult) Calculates the National Insurance contributions required for an employee for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. void Calculate(NiCategory niCategory, decimal nicableEarningsInPeriod, out INiCalculationResult result) Parameters niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal NI-able salary for the period. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult. CalculateDirectors(DirectorsNiCalculationMethod, NiCategory, decimal, decimal, decimal, decimal?, out INiCalculationResult) Calculates the National Insurance contributions required for a company director for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. void CalculateDirectors(DirectorsNiCalculationMethod calculationMethod, NiCategory niCategory, decimal nicableEarningsYearToDate, decimal employeesNiPaidYearToDate, decimal employersNiPaidYearToDate, decimal? proRataFactor, out INiCalculationResult result) Parameters calculationMethod DirectorsNiCalculationMethod Calculation method to use. niCategory NiCategory National Insurance category. nicableEarningsYearToDate decimal NI-able salary for the period. employeesNiPaidYearToDate decimal Total employees NI paid so far this tax year up to and including the end of the previous period. employersNiPaidYearToDate decimal Total employers NI paid so far this tax year up to and including the end of the previous period. proRataFactor decimal? Factor to apply to annual thresholds when the employee starts being a director part way through the tax year. Null if not applicable. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult."
  },
  "api/Paytools.NationalInsurance.INiCalculatorFactory.html": {
    "href": "api/Paytools.NationalInsurance.INiCalculatorFactory.html",
    "title": "Interface INiCalculatorFactory | Paytools",
    "keywords": "Interface INiCalculatorFactory Namespace Paytools.NationalInsurance Assembly Paytools.NationalInsurance.dll Interface that represents factories that can generate INiCalculator implementations. public interface INiCalculatorFactory Methods GetCalculator(PayDate, int) Gets an instance of an INiCalculator for the specified pay date. INiCalculator GetCalculator(PayDate payDate, int numberOfTaxPeriods = 1) Parameters payDate PayDate Pay date. numberOfTaxPeriods int Number of tax periods be applied by calculator. Defaults to 1. Returns INiCalculator Instance of INiCalculator for the specified tax regime and pay date."
  },
  "api/Paytools.NationalInsurance.Model.DirectorsNiCalculationMethod.html": {
    "href": "api/Paytools.NationalInsurance.Model.DirectorsNiCalculationMethod.html",
    "title": "Enum DirectorsNiCalculationMethod | Paytools",
    "keywords": "Enum DirectorsNiCalculationMethod Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Represents the method of director's NI calculation to be applied when calculating National Insurance contributions for a director. public enum DirectorsNiCalculationMethod Fields AlternativeMethod = 1 Alternativee method; common for directors who are paid regularly. StandardAnnualisedEarningsMethod = 0 Standard annualised earnings method; common for directors who are paid irregularly."
  },
  "api/Paytools.NationalInsurance.Model.EmployeeNiHistoryEntry.html": {
    "href": "api/Paytools.NationalInsurance.Model.EmployeeNiHistoryEntry.html",
    "title": "Struct EmployeeNiHistoryEntry | Paytools",
    "keywords": "Struct EmployeeNiHistoryEntry Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. public readonly struct EmployeeNiHistoryEntry : IEmployeeNiHistoryEntry Implements IEmployeeNiHistoryEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors EmployeeNiHistoryEntry(NiCategory, NiEarningsBreakdown, decimal, decimal, decimal, decimal) Initialises a new instance of EmployeeNiHistoryEntry. public EmployeeNiHistoryEntry(NiCategory niCategoryPertaining, NiEarningsBreakdown niEarningsBreakdown, decimal grossNicableEarnings, decimal employeeContribution, decimal employerContribution, decimal totalContribution) Parameters niCategoryPertaining NiCategory NI category for this record. niEarningsBreakdown NiEarningsBreakdown NI earnings breakdown for this record. grossNicableEarnings decimal Gross Nicable earnings for this record. employeeContribution decimal Employee contribution for this record. employerContribution decimal Employer contribution for this record. totalContribution decimal Total (i.e., employee + employer) contribution for this record. EmployeeNiHistoryEntry(in INiCalculationResult) Initialises a new EmployeeNiHistoryEntry from the supplied calculation result. public EmployeeNiHistoryEntry(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation result. Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveFUSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. public decimal EarningsAboveLELUpToAndIncludingST { get; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. public decimal EarningsAbovePTUpToAndIncludingFUST { get; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. public decimal EarningsAboveSTUpToAndIncludingPT { get; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. public decimal EarningsAboveUEL { get; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. public decimal EarningsUpToAndIncludingLEL { get; } Property Value decimal EmployeeContribution Gets the total employee contribution made during the duration of this record. public decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution made during the duration of this record. public decimal EmployerContribution { get; } Property Value decimal GrossNicableEarnings Gets the gross NI-able earnings applicable for the duration of this record. public decimal GrossNicableEarnings { get; } Property Value decimal NiCategoryPertaining Gets the National Insurance category letter pertaining to this record. public NiCategory NiCategoryPertaining { get; } Property Value NiCategory TotalContribution Gets the total contribution (employee + employer) made during the duration of this record. public decimal TotalContribution { get; } Property Value decimal Methods Add(in INiCalculationResult) Adds the results of an NI calculation to the current history and returns a new instance of IEmployeeNiHistoryEntry with the results applied. public IEmployeeNiHistoryEntry Add(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation results to add to this history entry. Returns IEmployeeNiHistoryEntry New instance of IEmployeeNiHistoryEntry with the NI calculation result applied."
  },
  "api/Paytools.NationalInsurance.Model.html": {
    "href": "api/Paytools.NationalInsurance.Model.html",
    "title": "Namespace Paytools.NationalInsurance.Model | Paytools",
    "keywords": "Namespace Paytools.NationalInsurance.Model Classes NationalInsuranceThresholdExtensions Extension methods for instances of NiThresholdType. NiYtdHistory Represents an employee's year to date National Insurance history. Structs EmployeeNiHistoryEntry Represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. NiCalculationResult Represents a National Insurance calculation result. NiEarningsBreakdown Represents the breakdown of earnings against each of the relevant National Insurance thresholds. Interfaces IEmployeeNiHistoryEntry Interface that represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. INiCalculationResult Interface for types representing National Insurance calculation results. Enums DirectorsNiCalculationMethod Represents the method of director's NI calculation to be applied when calculating National Insurance contributions for a director. NiThresholdType Enum enumerating the various National Insurance threshold levels."
  },
  "api/Paytools.NationalInsurance.Model.IEmployeeNiHistoryEntry.html": {
    "href": "api/Paytools.NationalInsurance.Model.IEmployeeNiHistoryEntry.html",
    "title": "Interface IEmployeeNiHistoryEntry | Paytools",
    "keywords": "Interface IEmployeeNiHistoryEntry Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Interface that represents once element of the employee's NI history during the current tax year. For employees that have only have one NI category throughout the tax year, they will have just one instance of EmployeeNiHistoryEntry applicable. But it is of course possible for an employee's NI category to change throughout the tax year (for example because they turned 21 years of age), and in this case, multiple records must be held. public interface IEmployeeNiHistoryEntry Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. decimal EarningsAboveFUSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. decimal EarningsAboveLELUpToAndIncludingST { get; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. decimal EarningsAbovePTUpToAndIncludingFUST { get; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. decimal EarningsAboveSTUpToAndIncludingPT { get; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. decimal EarningsAboveSTUpToAndIncludingUEL { get; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. decimal EarningsAboveUEL { get; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. decimal EarningsUpToAndIncludingLEL { get; } Property Value decimal EmployeeContribution Gets the total employee contribution made during the duration of this record. decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution made during the duration of this record. decimal EmployerContribution { get; } Property Value decimal GrossNicableEarnings Gets the gross NI-able earnings applicable for the duration of this record. decimal GrossNicableEarnings { get; } Property Value decimal NiCategoryPertaining Gets the National Insurance category letter pertaining to this record. NiCategory NiCategoryPertaining { get; } Property Value NiCategory TotalContribution Gets the total contribution (employee + employer) made during the duration of this record. decimal TotalContribution { get; } Property Value decimal Methods Add(in INiCalculationResult) Adds the results of an NI calculation to the current history and returns a new instance of IEmployeeNiHistoryEntry with the results applied. IEmployeeNiHistoryEntry Add(in INiCalculationResult result) Parameters result INiCalculationResult NI calculation results to add to this history entry. Returns IEmployeeNiHistoryEntry New instance of IEmployeeNiHistoryEntry with the NI calculation result applied."
  },
  "api/Paytools.NationalInsurance.Model.INiCalculationResult.html": {
    "href": "api/Paytools.NationalInsurance.Model.INiCalculationResult.html",
    "title": "Interface INiCalculationResult | Paytools",
    "keywords": "Interface INiCalculationResult Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Interface for types representing National Insurance calculation results. public interface INiCalculationResult Properties EarningsBreakdown Gets the breakdown of earnings across each of the different National Insurance thresholds. NiEarningsBreakdown EarningsBreakdown { get; } Property Value NiEarningsBreakdown EmployeeContribution Gets the total employee contribution due as a result of this calculation. decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution due as a result of this calculation. decimal EmployerContribution { get; } Property Value decimal NicablePay Gets the gross pay for NI purposes (\"Nicable pay\") used in this calculation. decimal NicablePay { get; } Property Value decimal NiCategory Gets the NI category used for this calculation. NiCategory NiCategory { get; } Property Value NiCategory NoRecordingRequiredIndicator Gets a value indicating whether the results of this calculation need to be reported to HMRC. bool NoRecordingRequiredIndicator { get; } Property Value bool RatesUsed Gets the rates used for this calculation. INiCategoryRatesEntry RatesUsed { get; } Property Value INiCategoryRatesEntry ThresholdsUsed Gets the set of thresholds used for this calculation. These thresholds are adjusted to match the length of the pay period. INiThresholdSet ThresholdsUsed { get; } Property Value INiThresholdSet TotalContribution Gets the total contribution due (employee + employer) as a result of this calculation. decimal TotalContribution { get; } Property Value decimal"
  },
  "api/Paytools.NationalInsurance.Model.NationalInsuranceThresholdExtensions.html": {
    "href": "api/Paytools.NationalInsurance.Model.NationalInsuranceThresholdExtensions.html",
    "title": "Class NationalInsuranceThresholdExtensions | Paytools",
    "keywords": "Class NationalInsuranceThresholdExtensions Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Extension methods for instances of NiThresholdType. public static class NationalInsuranceThresholdExtensions Inheritance object NationalInsuranceThresholdExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFullName(NiThresholdType) Gets the full name of the threshold as a string. public static string GetFullName(this NiThresholdType thresholdType) Parameters thresholdType NiThresholdType NiThresholdType value. Returns string Full name of the threshold as a string, e.g., \"Lower Earnings Limit\". Exceptions ArgumentException Thrown if the NiThresholdType value supplied is unrecognised. GetIndex(NiThresholdType) Gets the zero-based index of the supplied NiThresholdType. Used when retrieving thresholds from arrays or lists who elements are ordered the same as this enum. public static int GetIndex(this NiThresholdType threshold) Parameters threshold NiThresholdType NiThresholdType value. Returns int Zero-based index of this NiThresholdType."
  },
  "api/Paytools.NationalInsurance.Model.NiCalculationResult.html": {
    "href": "api/Paytools.NationalInsurance.Model.NiCalculationResult.html",
    "title": "Struct NiCalculationResult | Paytools",
    "keywords": "Struct NiCalculationResult Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Represents a National Insurance calculation result. public readonly struct NiCalculationResult : INiCalculationResult Implements INiCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NiCalculationResult(NiCategory, decimal, INiCategoryRatesEntry, INiThresholdSet, NiEarningsBreakdown, decimal, decimal, decimal?) Initialises a new instance of NiCalculationResult with the supplied values. public NiCalculationResult(NiCategory category, decimal nicablePay, INiCategoryRatesEntry ratesUsed, INiThresholdSet thresholdsUsed, NiEarningsBreakdown earningsBreakdown, decimal employeeContribution, decimal employerContribution, decimal? totalContribution = null) Parameters category NiCategory NI category used for this calculation. nicablePay decimal Gross pay for NI purposes (\"Nicable pay\") used in this calculation. ratesUsed INiCategoryRatesEntry Rates used for this calculation. thresholdsUsed INiThresholdSet Thresholds used for this calculation. earningsBreakdown NiEarningsBreakdown Breakdown of earnings across each of the different National Insurance thresholds. employeeContribution decimal Total employee contribution due as a result of this calculation. employerContribution decimal Total employer contribution due as a result of this calculation. totalContribution decimal? Total contribution due (employee + employer) as a result of this calculation. Properties EarningsBreakdown Gets the breakdown of earnings across each of the different National Insurance thresholds. public NiEarningsBreakdown EarningsBreakdown { get; } Property Value NiEarningsBreakdown EmployeeContribution Gets the total employee contribution due as a result of this calculation. public decimal EmployeeContribution { get; } Property Value decimal EmployerContribution Gets the total employer contribution due as a result of this calculation. public decimal EmployerContribution { get; } Property Value decimal NicablePay Gets the gross pay for NI purposes (\"Nicable pay\") used in this calculation. public decimal NicablePay { get; } Property Value decimal NiCategory Gets the NI category used for this calculation. public NiCategory NiCategory { get; } Property Value NiCategory NoRecordingRequired Gets a static value representing an empty result with the NoRecordingRequiredIndicator set to true. public static NiCalculationResult NoRecordingRequired { get; } Property Value NiCalculationResult NoRecordingRequiredIndicator Gets a value indicating whether the results of this calculation need to be reported to HMRC. public bool NoRecordingRequiredIndicator { get; init; } Property Value bool RatesUsed Gets the rates used for this calculation. public INiCategoryRatesEntry RatesUsed { get; } Property Value INiCategoryRatesEntry ThresholdsUsed Gets the set of thresholds used for this calculation. These thresholds are adjusted to match the length of the pay period. public INiThresholdSet ThresholdsUsed { get; } Property Value INiThresholdSet TotalContribution Gets the total contribution due (employee + employer) as a result of this calculation. public decimal TotalContribution { get; } Property Value decimal Methods ToString() Gets the string representation of this calculation result. public override string ToString() Returns string String representation of this calculation result."
  },
  "api/Paytools.NationalInsurance.Model.NiEarningsBreakdown.html": {
    "href": "api/Paytools.NationalInsurance.Model.NiEarningsBreakdown.html",
    "title": "Struct NiEarningsBreakdown | Paytools",
    "keywords": "Struct NiEarningsBreakdown Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Represents the breakdown of earnings against each of the relevant National Insurance thresholds. public struct NiEarningsBreakdown Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties EarningsAboveFUSTUpToAndIncludingUEL Gets the earnings up above the Freeport Upper Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveFUSTUpToAndIncludingUEL { readonly get; init; } Property Value decimal EarningsAboveLELUpToAndIncludingST Gets the earnings up above the Lower Earnings Limit and up to and including the Secondary Threshold for this record. public decimal EarningsAboveLELUpToAndIncludingST { readonly get; init; } Property Value decimal EarningsAbovePTUpToAndIncludingFUST Gets the earnings up above the Primary Threshold and up to and including the Freeport Upper Secondary Threshold for this record. public decimal EarningsAbovePTUpToAndIncludingFUST { readonly get; init; } Property Value decimal EarningsAboveSTUpToAndIncludingPT Gets the earnings up above the Secondary Threshold and up to and including the Primary Threshold for this record. public decimal EarningsAboveSTUpToAndIncludingPT { readonly get; init; } Property Value decimal EarningsAboveSTUpToAndIncludingUEL Gets the earnings up above the Secondary Threshold and up to and including the Upper Earnings Limit for this record. public decimal EarningsAboveSTUpToAndIncludingUEL { readonly get; init; } Property Value decimal EarningsAboveUEL Gets the earnings up above the Upper Earnings Limit for this record. public decimal EarningsAboveUEL { readonly get; init; } Property Value decimal EarningsUpToAndIncludingLEL Gets the earnings up to and including the Lower Earnings Limit for this record. public decimal EarningsUpToAndIncludingLEL { readonly get; init; } Property Value decimal Methods Add(in NiEarningsBreakdown) Adds the supplied breakdown to the current state and returns a new instance of NiEarningsBreakdown with the updated values. public NiEarningsBreakdown Add(in NiEarningsBreakdown addedBreakdown) Parameters addedBreakdown NiEarningsBreakdown NI breakdown to be added. Returns NiEarningsBreakdown Combined breakdown as a new NiEarningsBreakdown instance."
  },
  "api/Paytools.NationalInsurance.Model.NiThresholdType.html": {
    "href": "api/Paytools.NationalInsurance.Model.NiThresholdType.html",
    "title": "Enum NiThresholdType | Paytools",
    "keywords": "Enum NiThresholdType Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Enum enumerating the various National Insurance threshold levels. public enum NiThresholdType Extension Methods NationalInsuranceThresholdExtensions.GetFullName(NiThresholdType) NationalInsuranceThresholdExtensions.GetIndex(NiThresholdType) Fields AUST = 5 Apprentice Upper Secondary Threshold Count = 9 Number of elements in enum DPT = 8 Directors Primary Threshold (if applicable) FUST = 3 Freeport Upper Secondary Threshold LEL = 0 Lower Earnings Limit PT = 1 Primary Threshold ST = 2 Secondary Threshold UEL = 7 Upper Earnings Limit UST = 4 Upper Secondary Threshold VUST = 6 Veterans Upper Secondary Threshold"
  },
  "api/Paytools.NationalInsurance.Model.NiYtdHistory.html": {
    "href": "api/Paytools.NationalInsurance.Model.NiYtdHistory.html",
    "title": "Class NiYtdHistory | Paytools",
    "keywords": "Class NiYtdHistory Namespace Paytools.NationalInsurance.Model Assembly Paytools.NationalInsurance.dll Represents an employee's year to date National Insurance history. public record NiYtdHistory : IEquatable<NiYtdHistory> Inheritance object NiYtdHistory Implements IEquatable<NiYtdHistory> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiYtdHistory(in INiCalculationResult) Initialises a new instance of NiYtdHistory with the supplied NI calculation result. This constructor is intended to be used for the first time a payrun is run during the tax year. public NiYtdHistory(in INiCalculationResult initialNiCalculationResult) Parameters initialNiCalculationResult INiCalculationResult NI calculation result for the first payrun of the tax year for a given employee. NiYtdHistory(in ImmutableList<IEmployeeNiHistoryEntry>) Initialises a new instance of NiYtdHistory. public NiYtdHistory(in ImmutableList<IEmployeeNiHistoryEntry> entries) Parameters entries ImmutableList<IEmployeeNiHistoryEntry> NI history entries for the tax year to date. Methods Add(in INiCalculationResult) Returns a new instance of NiYtdHistory with the previous history updated by the latest payrun result. Where the most recent entry in the history matches the current NI category, that entry is updated, but otherwise a new history entry is created and appended. public NiYtdHistory Add(in INiCalculationResult latestNiCalculationResult) Parameters latestNiCalculationResult INiCalculationResult Result of this payrun's NI calculation. Returns NiYtdHistory A new instance of NiYtdHistory with the previous history updated by the latest payrun result. GetNiYtdTotals() Gets the totals of employee and employer NI contributions paid to date across all entries. public (decimal employeeTotal, decimal employerTotal) GetNiYtdTotals() Returns (decimal employeeTotal, decimal employerTotal) Totals of employee and employer NI contributions paid tear to date."
  },
  "api/Paytools.NationalInsurance.NiCalculator.html": {
    "href": "api/Paytools.NationalInsurance.NiCalculator.html",
    "title": "Class NiCalculator | Paytools",
    "keywords": "Class NiCalculator Namespace Paytools.NationalInsurance Assembly Paytools.NationalInsurance.dll Represents a National Insurance calculator that implements INiCalculator. public class NiCalculator : INiCalculator Inheritance object NiCalculator Implements INiCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCalculator(INiThresholdSet, INiPeriodThresholdSet, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>?) Initialises a new NiCalculator with the supplied thresholds and rates for the period. public NiCalculator(INiThresholdSet niAnnualThresholds, INiPeriodThresholdSet niPeriodThresholds, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> niRateEntriesForRegularEmployees, ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>? niDirectorsRateEntries = null) Parameters niAnnualThresholds INiThresholdSet NI threshold set for the full tax year applicable to this NI calculator. niPeriodThresholds INiPeriodThresholdSet NI threshold set for the tax period applicable to this NI calculator. niRateEntriesForRegularEmployees ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> NI rates for the tax period applicable to non-directors for this NI calculator. niDirectorsRateEntries ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> NI rates for the tax period applicable to directors for this NI calculator. Optional; where the same set of rates applies to both non-directors and directors, this parameter should be null. Methods Calculate(NiCategory, decimal, out INiCalculationResult) Calculates the National Insurance contributions required for an employee for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. public void Calculate(NiCategory niCategory, decimal nicableEarningsInPeriod, out INiCalculationResult result) Parameters niCategory NiCategory National Insurance category. nicableEarningsInPeriod decimal NI-able salary for the period. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult. CalculateDirectors(DirectorsNiCalculationMethod, NiCategory, decimal, decimal, decimal, decimal?, out INiCalculationResult) Calculates the National Insurance contributions required for a company director for a given pay period, based on their NI-able salary and their allocated National Insurance category letter. public void CalculateDirectors(DirectorsNiCalculationMethod calculationMethod, NiCategory niCategory, decimal nicableEarningsYearToDate, decimal employeesNiPaidYearToDate, decimal employersNiPaidYearToDate, decimal? proRataFactor, out INiCalculationResult result) Parameters calculationMethod DirectorsNiCalculationMethod Calculation method to use. niCategory NiCategory National Insurance category. nicableEarningsYearToDate decimal NI-able salary for the period. employeesNiPaidYearToDate decimal Total employees NI paid so far this tax year up to and including the end of the previous period. employersNiPaidYearToDate decimal Total employers NI paid so far this tax year up to and including the end of the previous period. proRataFactor decimal? Factor to apply to annual thresholds when the employee starts being a director part way through the tax year. Null if not applicable. result INiCalculationResult The NI contributions due via an instance of a type that implements INiCalculationResult."
  },
  "api/Paytools.NationalInsurance.NiCalculatorFactory.html": {
    "href": "api/Paytools.NationalInsurance.NiCalculatorFactory.html",
    "title": "Class NiCalculatorFactory | Paytools",
    "keywords": "Class NiCalculatorFactory Namespace Paytools.NationalInsurance Assembly Paytools.NationalInsurance.dll Factory to generate INiCalculatorFactory implementations that are for a given pay date. public class NiCalculatorFactory : INiCalculatorFactory Inheritance object NiCalculatorFactory Implements INiCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCalculatorFactory(INiReferenceDataProvider) Initialises a new instance of NiCalculatorFactory with the supplied INiReferenceDataProvider. public NiCalculatorFactory(INiReferenceDataProvider niReferenceDataProvider) Parameters niReferenceDataProvider INiReferenceDataProvider Reference data provider used to seed new NI calculators. Methods GetCalculator(PayDate, int) Gets a new INiCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. public INiCalculator GetCalculator(PayDate payDate, int numberOfTaxPeriods = 1) Parameters payDate PayDate Applicable pay date. numberOfTaxPeriods int Number of tax periods applicable, usually 1. Defaults to 1. Returns INiCalculator A new calculator instance. GetCalculator(TaxYear, PayFrequency, int, int) Gets a new INiCalculator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. public INiCalculator GetCalculator(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod, int numberOfTaxPeriods = 1) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. numberOfTaxPeriods int Number of tax periods applicable, usually 1. Defaults to 1. Returns INiCalculator A new calculator instance."
  },
  "api/Paytools.NationalInsurance.ReferenceData.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.html",
    "title": "Namespace Paytools.NationalInsurance.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.NationalInsurance.ReferenceData Classes NiPeriodThresholdEntry Represents a specific National Insurance threshold (e.g., LEL, UEL) adjusted for a specific pay frequency and number of periods, as NI is calculated based on the appropriate fraction of the applicable annual threshold. NiPeriodThresholdSet Represents a set of NI thresholds that have been adjusted to a proportion of the tax year. NiThresholdEntry Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. NiThresholdSet Represents a set of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. Interfaces INiCategoryRatesEntry Interface for types that detail the various HMRC-published National Insurance threshold levels. INiPeriodThresholdSet Interface that represents a set of NI thresholds that have been adjusted to a proportion of the tax year. INiReferenceDataProvider Interface that classes implement in order to provide access to National Insurance reference data, i.e., rates and thresholds. INiThresholdEntry Interface for types that provide access to a given NI threshold value. INiThresholdSet Interface for types that represent a list of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. The list isn't specifically ordered; the items within the list provide their own mapping to NiThresholdType values."
  },
  "api/Paytools.NationalInsurance.ReferenceData.INiCategoryRatesEntry.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.INiCategoryRatesEntry.html",
    "title": "Interface INiCategoryRatesEntry | Paytools",
    "keywords": "Interface INiCategoryRatesEntry Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Interface for types that detail the various HMRC-published National Insurance threshold levels. public interface INiCategoryRatesEntry Properties Category Gets the applicable National Insurance Category. NiCategory Category { get; } Property Value NiCategory EmployeeRateAboveUEL Gets the employee rate for balance of earnings above upper earnings limit. decimal EmployeeRateAboveUEL { get; } Property Value decimal EmployeeRatePTToUEL Gets the employee rate for earnings above the primary threshold up to and including upper earnings limit. decimal EmployeeRatePTToUEL { get; } Property Value decimal EmployeeRateToPT Gets the employee rate for earnings at or above lower earnings limit up to and including primary threshold. decimal EmployeeRateToPT { get; } Property Value decimal EmployerRateAboveUEL Gets the employer rate for balance of earnings above upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. decimal EmployerRateAboveUEL { get; } Property Value decimal EmployerRateFUSTtoUEL Gets the employer rate for earnings above Freeport upper secondary threshold up to and including upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. decimal EmployerRateFUSTtoUEL { get; } Property Value decimal EmployerRateLELtoST Gets the employer rate for earnings at or above lower earnings limit up to and including secondary threshold. decimal EmployerRateLELtoST { get; } Property Value decimal EmployerRateSTtoFUST Gets the employer rate for earnings above secondary threshold up to and including Freeport upper secondary threshold. decimal EmployerRateSTtoFUST { get; } Property Value decimal"
  },
  "api/Paytools.NationalInsurance.ReferenceData.INiPeriodThresholdSet.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.INiPeriodThresholdSet.html",
    "title": "Interface INiPeriodThresholdSet | Paytools",
    "keywords": "Interface INiPeriodThresholdSet Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Interface that represents a set of NI thresholds that have been adjusted to a proportion of the tax year. public interface INiPeriodThresholdSet : INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable Inherited Members INiThresholdSet.this[int] INiThresholdSet.Count INiThresholdSet.GetThreshold(NiThresholdType) IEnumerable<INiThresholdEntry>.GetEnumerator() Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Methods GetThreshold1(NiThresholdType) Gets the modified threshold for the period (as distinct from the value returned by GetThreshold1(NiThresholdType)) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. decimal GetThreshold1(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type."
  },
  "api/Paytools.NationalInsurance.ReferenceData.INiReferenceDataProvider.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.INiReferenceDataProvider.html",
    "title": "Interface INiReferenceDataProvider | Paytools",
    "keywords": "Interface INiReferenceDataProvider Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Interface that classes implement in order to provide access to National Insurance reference data, i.e., rates and thresholds. public interface INiReferenceDataProvider Methods GetDirectorsNiRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets a read-only dictionary that maps NiCategory values to the set of rates to be applied for a given tax year and tax period, for directors. (For most tax years, this method returns null, but if there have been in-year changes, specific directors' rates may apply.) ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry>? GetDirectorsNiRatesForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> Read-only dictionary that maps NiCategory values to the appropriate set of rates for the specified point in time, if specific rates apply. Otherwise null. GetNiRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets a read-only dictionary that maps NiCategory values to the set of rates to be applied for a given tax year and tax period. ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> GetNiRatesForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns ReadOnlyDictionary<NiCategory, INiCategoryRatesEntry> Read-only dictionary that maps NiCategory values to the appropriate set of rates for the specified point in time. GetNiThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the NI thresholds for the specified tax year and tax period, as denoted by the supplied pay frequency and pay period. INiThresholdSet GetNiThresholdsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INiThresholdSet An instance of INiThresholdSet containing the thresholds for the specified point in time."
  },
  "api/Paytools.NationalInsurance.ReferenceData.INiThresholdEntry.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.INiThresholdEntry.html",
    "title": "Interface INiThresholdEntry | Paytools",
    "keywords": "Interface INiThresholdEntry Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Interface for types that provide access to a given NI threshold value. public interface INiThresholdEntry Properties ThresholdType Gets the type of threshold this instance pertains to. NiThresholdType ThresholdType { get; } Property Value NiThresholdType ThresholdValuePerYear Gets the per annum value of the threshold. decimal ThresholdValuePerYear { get; } Property Value decimal"
  },
  "api/Paytools.NationalInsurance.ReferenceData.INiThresholdSet.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.INiThresholdSet.html",
    "title": "Interface INiThresholdSet | Paytools",
    "keywords": "Interface INiThresholdSet Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Interface for types that represent a list of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. The list isn't specifically ordered; the items within the list provide their own mapping to NiThresholdType values. public interface INiThresholdSet : IEnumerable<INiThresholdEntry>, IEnumerable Inherited Members IEnumerable<INiThresholdEntry>.GetEnumerator() Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Properties Count Gets the number of threshold value this threshold set contains. int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetThreshold(NiThresholdType) Gets the annual threshold for the period for the specified threshold type. decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Annual threshold value applicable to threshold type."
  },
  "api/Paytools.NationalInsurance.ReferenceData.NiPeriodThresholdEntry.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.NiPeriodThresholdEntry.html",
    "title": "Class NiPeriodThresholdEntry | Paytools",
    "keywords": "Class NiPeriodThresholdEntry Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Represents a specific National Insurance threshold (e.g., LEL, UEL) adjusted for a specific pay frequency and number of periods, as NI is calculated based on the appropriate fraction of the applicable annual threshold. public record NiPeriodThresholdEntry : IEquatable<NiPeriodThresholdEntry> Inheritance object NiPeriodThresholdEntry Implements IEquatable<NiPeriodThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NiPeriodThresholdEntry(INiThresholdEntry, PayFrequency, int) Initialises a new instance of NiPeriodThresholdEntry based on the supplied annual threshold, specified pay frequency and optional number of tax periods. public NiPeriodThresholdEntry(INiThresholdEntry baseEntry, PayFrequency payFrequency, int numberOfTaxPeriods = 1) Parameters baseEntry INiThresholdEntry Annual threshold entry to calculate period threshold from. payFrequency PayFrequency Applicable pay frequency. numberOfTaxPeriods int Number of pay periods. Defaults to 1. Properties NumberOfTaxPeriods Gets the number of tax periods applicable for this period threshold. public int NumberOfTaxPeriods { get; } Property Value int PayFrequency Gets the applicable pay frequency for this period threshold. public PayFrequency PayFrequency { get; } Property Value PayFrequency ThresholdForPeriod Gets the base threshold for the period, as distinct from ThresholdForPeriod1 (see below). public decimal ThresholdForPeriod { get; } Property Value decimal ThresholdForPeriod1 Gets the modified threshold for the period (as distinct from ThresholdForPeriod) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. public decimal ThresholdForPeriod1 { get; } Property Value decimal ThresholdType Gets the type of this threshold entry (e.g., LEL, PT, ST, etc.). public NiThresholdType ThresholdType { get; } Property Value NiThresholdType Methods ToString() Gets a string representation of this NiPeriodThresholdEntry. public override string ToString() Returns string String representation of this instance."
  },
  "api/Paytools.NationalInsurance.ReferenceData.NiPeriodThresholdSet.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.NiPeriodThresholdSet.html",
    "title": "Class NiPeriodThresholdSet | Paytools",
    "keywords": "Class NiPeriodThresholdSet Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Represents a set of NI thresholds that have been adjusted to a proportion of the tax year. public record NiPeriodThresholdSet : INiPeriodThresholdSet, INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable, IEquatable<NiPeriodThresholdSet> Inheritance object NiPeriodThresholdSet Implements INiPeriodThresholdSet INiThresholdSet IEnumerable<INiThresholdEntry> IEnumerable IEquatable<NiPeriodThresholdSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Constructors NiPeriodThresholdSet(INiThresholdSet, PayFrequency, int) Initialises a new instance of NiPeriodThresholdSet based on the supplied annual thresholds, the applicable pay frequency and the applicable number of tax periods. public NiPeriodThresholdSet(INiThresholdSet entries, PayFrequency payFrequency, int numberOfTaxPeriods = 1) Parameters entries INiThresholdSet Set of National Insurance thresholds as defined by HMRC for a given tax year (or portion of a tax year, when there are in-year changes). payFrequency PayFrequency Applicable pay frequency. numberOfTaxPeriods int Number of tax periods, if applicable. Defaults to 1. Properties Count Gets the number of threshold value this threshold set contains. public int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. public INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetEnumerator() Returns an enumerator that iterates through the thresholds (of type INiThresholdEntry). public IEnumerator<INiThresholdEntry> GetEnumerator() Returns IEnumerator<INiThresholdEntry> An enumerator that can be used to iterate through the collection of thresholds. Exceptions InvalidOperationException Throw if the enumerator cannot be obtained. (Should never be thrown). GetThreshold(NiThresholdType) Gets the base threshold for the period, as distinct from the value returned by GetThreshold1(NiThresholdType) (see below). public decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type. GetThreshold1(NiThresholdType) Gets the modified threshold for the period (as distinct from the value returned by GetThreshold1(NiThresholdType)) where rounding is applied based on whether the pay frequency is weekly or monthly, or otherwise. As detailed in HMRC's NI calculation documentation as 'p1'. public decimal GetThreshold1(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Pro-rata threshold value applicable to the period and threshold type. ToString() Gets a string representation of this NiPeriodThresholdSet. public override string ToString() Returns string String representation of this instance."
  },
  "api/Paytools.NationalInsurance.ReferenceData.NiThresholdEntry.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.NiThresholdEntry.html",
    "title": "Class NiThresholdEntry | Paytools",
    "keywords": "Class NiThresholdEntry Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. public record NiThresholdEntry : INiThresholdEntry, IEquatable<NiThresholdEntry> Inheritance object NiThresholdEntry Implements INiThresholdEntry IEquatable<NiThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ThresholdType Gets the type of threshold this instance pertains to. public NiThresholdType ThresholdType { get; init; } Property Value NiThresholdType ThresholdValuePerYear Gets the per annum value of the threshold. public decimal ThresholdValuePerYear { get; init; } Property Value decimal Methods ToString() Gets the string representation of this NiThresholdEntry for debugging purposes. public override string ToString() Returns string String representation of this instance."
  },
  "api/Paytools.NationalInsurance.ReferenceData.NiThresholdSet.html": {
    "href": "api/Paytools.NationalInsurance.ReferenceData.NiThresholdSet.html",
    "title": "Class NiThresholdSet | Paytools",
    "keywords": "Class NiThresholdSet Namespace Paytools.NationalInsurance.ReferenceData Assembly Paytools.NationalInsurance.dll Represents a set of National Insurance thresholds as defined by HMRC for a given tax year or portion of a tax year. public class NiThresholdSet : INiThresholdSet, IEnumerable<INiThresholdEntry>, IEnumerable Inheritance object NiThresholdSet Implements INiThresholdSet IEnumerable<INiThresholdEntry> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IEnumerableExtensions.WithIndex<T>(IEnumerable<T>) Constructors NiThresholdSet(INiThresholdSet, decimal) Initialises a new instance of NiThresholdSet adjusted by the supplied prorata factor. Used in director's NI calculation when an employee is a director for part of the year. public NiThresholdSet(INiThresholdSet originalAnnualNiThresholds, decimal proRataFactor) Parameters originalAnnualNiThresholds INiThresholdSet Original set of thresholds. proRataFactor decimal Pro-rata factor to apply to each threshold. NiThresholdSet(ImmutableList<INiThresholdEntry>) Initialises a new instance of NiThresholdSet. public NiThresholdSet(ImmutableList<INiThresholdEntry> niThresholds) Parameters niThresholds ImmutableList<INiThresholdEntry> Immutable input list of thresholds. Exceptions ArgumentException Thrown if the number of thresholds supplied does not match the expected number of possible thresholds. Properties Count Gets the number of threshold value this threshold set contains. public int Count { get; } Property Value int this[int] Gets the INiThresholdEntry at the specified index. public INiThresholdEntry this[int index] { get; } Parameters index int Zero-based index into list. Property Value INiThresholdEntry The INiThresholdEntry for the specified index. Methods GetEnumerator() Returns an enumerator that iterates through the thresholds (of type INiThresholdEntry). public IEnumerator<INiThresholdEntry> GetEnumerator() Returns IEnumerator<INiThresholdEntry> An enumerator that can be used to iterate through the collection of thresholds. Exceptions InvalidOperationException Throw if the enumerator cannot be obtained. (Should never be thrown). GetThreshold(NiThresholdType) Gets the annual threshold for the period for the specified threshold type. public decimal GetThreshold(NiThresholdType thresholdType) Parameters thresholdType NiThresholdType Applicable threshold (e.g., LEL, UEL, PT). Returns decimal Annual threshold value applicable to threshold type. ToString() Gets a string representation of this NiPeriodThresholdSet. public override string ToString() Returns string String representation of this instance."
  },
  "api/Paytools.NationalMinimumWage.html": {
    "href": "api/Paytools.NationalMinimumWage.html",
    "title": "Namespace Paytools.NationalMinimumWage | Paytools",
    "keywords": "Namespace Paytools.NationalMinimumWage Paytools.NationalMinimumWage.ReferenceData Classes NmwEvaluator Represents a National Minimum/Living Wage evaluator that implements INmwEvaluator. NmwEvaluatorFactory Factory to generate INmwEvaluator implementations that are for a given pay date. Structs NmwEvaluationResult Represents the result of an NMW/NLW evaluation for a particular individual for particular pay period. Interfaces INmwEvaluator Interface for types that provide National Minimum/Living Wage evaluations. INmwEvaluatorFactory Interface that represents factories that can generate INmwEvaluator implementations."
  },
  "api/Paytools.NationalMinimumWage.INmwEvaluator.html": {
    "href": "api/Paytools.NationalMinimumWage.INmwEvaluator.html",
    "title": "Interface INmwEvaluator | Paytools",
    "keywords": "Interface INmwEvaluator Namespace Paytools.NationalMinimumWage Assembly Paytools.NationalMinimumWage.dll Interface for types that provide National Minimum/Living Wage evaluations. public interface INmwEvaluator Methods Evaluate(PayReferencePeriod, DateOnly, decimal, decimal, bool, decimal?) Evauates whether an employee's pay is compliant with the NMW/NLW regulations by considering their pay, hours and date of birth. Note that apprentices have special treatment. NmwEvaluationResult Evaluate(PayReferencePeriod payPeriod, DateOnly dateOfBirth, decimal grossPay, decimal hoursWorkedForPay, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters payPeriod PayReferencePeriod Applicable pay period. dateOfBirth DateOnly Employee's date of birth. grossPay decimal Gross pay to be used for the evaluation. This pay should correspond to the number of hours worked given in the subequent parameter. hoursWorkedForPay decimal Hours worked that corresponds to the gross pay figure supplied. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns NmwEvaluationResult An instance of NmwEvaluationResult that indicates whether the pay is compliant with the NMW/NLW regulations. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period. GetNmwHourlyRateForEmployee(int, bool, decimal?) Gets the expected hourly rate of pay for an employee that is paid is the National Minimum or National Living Wage. decimal GetNmwHourlyRateForEmployee(int ageAtStartOfPeriod, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters ageAtStartOfPeriod int Age at the start of the applicable pay period. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns decimal Appropriate hourly rate of pay. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period."
  },
  "api/Paytools.NationalMinimumWage.INmwEvaluatorFactory.html": {
    "href": "api/Paytools.NationalMinimumWage.INmwEvaluatorFactory.html",
    "title": "Interface INmwEvaluatorFactory | Paytools",
    "keywords": "Interface INmwEvaluatorFactory Namespace Paytools.NationalMinimumWage Assembly Paytools.NationalMinimumWage.dll Interface that represents factories that can generate INmwEvaluator implementations. public interface INmwEvaluatorFactory Methods GetEvaluator(PayDate) Gets a new INmwEvaluator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. INmwEvaluator GetEvaluator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns INmwEvaluator A new evaluator instance. GetEvaluator(TaxYear, PayFrequency, int) Gets a new INmwEvaluator based on the specified tax year, pay frequency and pay period. The tax year, pay frequency and pay period are provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. INmwEvaluator GetEvaluator(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwEvaluator A new evaluator instance."
  },
  "api/Paytools.NationalMinimumWage.NmwEvaluationResult.html": {
    "href": "api/Paytools.NationalMinimumWage.NmwEvaluationResult.html",
    "title": "Struct NmwEvaluationResult | Paytools",
    "keywords": "Struct NmwEvaluationResult Namespace Paytools.NationalMinimumWage Assembly Paytools.NationalMinimumWage.dll Represents the result of an NMW/NLW evaluation for a particular individual for particular pay period. public readonly struct NmwEvaluationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NmwEvaluationResult(bool, decimal?, int, string) Initialises a new instance of NmwEvaluationResult. public NmwEvaluationResult(bool isCompliant, decimal? nmwLevelApplied, int ageAtStartOfPayPeriod, string commentary) Parameters isCompliant bool True if the pay is compliant with the regulations; false otherwise. nmwLevelApplied decimal? NMW/NLW level used for compliance checking. ageAtStartOfPayPeriod int Age at the start of the pay period (in whole years). commentary string Human-readable commentary on the evaluation. Properties AgeAtStartOfPayPeriod Gets the age of the individual at the start of the pay period. public int AgeAtStartOfPayPeriod { get; } Property Value int Commentary Gets the human-readable commentary relating to this evaluation. May be empty. public string Commentary { get; } Property Value string IsCompliant Gets a value indicating whether an individual's pay is compliant with the NMW/NLW regulations. public bool IsCompliant { get; } Property Value bool NmwLevelApplied Gets the level (hourly rate) used to verify the employee's compliance with the regulations. Null if no level applies. public decimal? NmwLevelApplied { get; } Property Value decimal?"
  },
  "api/Paytools.NationalMinimumWage.NmwEvaluator.html": {
    "href": "api/Paytools.NationalMinimumWage.NmwEvaluator.html",
    "title": "Class NmwEvaluator | Paytools",
    "keywords": "Class NmwEvaluator Namespace Paytools.NationalMinimumWage Assembly Paytools.NationalMinimumWage.dll Represents a National Minimum/Living Wage evaluator that implements INmwEvaluator. public class NmwEvaluator : INmwEvaluator Inheritance object NmwEvaluator Implements INmwEvaluator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NmwEvaluator(INmwLevelSet) Initialises a new instance of NmwEvaluator using the supplied set of levels. public NmwEvaluator(INmwLevelSet nmwLevels) Parameters nmwLevels INmwLevelSet NMW/NLW levels to use. Methods Evaluate(PayReferencePeriod, DateOnly, decimal, decimal, bool, decimal?) Evauates whether an employee's pay is compliant with the NMW/NLW regulations by considering their pay, hours and date of birth. Note that apprentices have special treatment. public NmwEvaluationResult Evaluate(PayReferencePeriod payPeriod, DateOnly dateOfBirth, decimal grossPay, decimal hoursWorkedForPay, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters payPeriod PayReferencePeriod Applicable pay period. dateOfBirth DateOnly Employee's date of birth. grossPay decimal Gross pay to be used for the evaluation. This pay should correspond to the number of hours worked given in the subequent parameter. hoursWorkedForPay decimal Hours worked that corresponds to the gross pay figure supplied. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns NmwEvaluationResult An instance of NmwEvaluationResult that indicates whether the pay is compliant with the NMW/NLW regulations. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at teh start of the pay reference period. GetNmwHourlyRateForEmployee(int, bool, decimal?) Gets the expected hourly rate of pay for an employee that is paid is the National Minimum or National Living Wage. public decimal GetNmwHourlyRateForEmployee(int ageAtStartOfPeriod, bool isApprentice = false, decimal? yearsAsApprentice = null) Parameters ageAtStartOfPeriod int Age at the start of the applicable pay period. isApprentice bool True if the employee is an apprentice; false otherwise. Optional, defaults to false. yearsAsApprentice decimal? Number of years an apprentice has served in their apprenticeship. May be a figure less than one. Optional, defaults to null; not required if the employee is not an apprentice. Returns decimal Appropriate hourly rate of pay. Remarks As per https://www.gov.uk/hmrc-internal-manuals/national-minimum-wage-manual/nmwm03010, the rate that applies to each worker depends on their age at the start of the pay reference period."
  },
  "api/Paytools.NationalMinimumWage.NmwEvaluatorFactory.html": {
    "href": "api/Paytools.NationalMinimumWage.NmwEvaluatorFactory.html",
    "title": "Class NmwEvaluatorFactory | Paytools",
    "keywords": "Class NmwEvaluatorFactory Namespace Paytools.NationalMinimumWage Assembly Paytools.NationalMinimumWage.dll Factory to generate INmwEvaluator implementations that are for a given pay date. public class NmwEvaluatorFactory : INmwEvaluatorFactory Inheritance object NmwEvaluatorFactory Implements INmwEvaluatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NmwEvaluatorFactory(INmwReferenceDataProvider) Initialises a new instance of NmwEvaluatorFactory with the supplied INmwReferenceDataProvider. public NmwEvaluatorFactory(INmwReferenceDataProvider provider) Parameters provider INmwReferenceDataProvider Reference data provider used to seed new NMW/NLW evaluators. Methods GetEvaluator(PayDate) Gets a new INmwEvaluator based on the specified pay date. The pay date is provided in order to determine which set of level to use, noting that these may (but rarely do) change in-year. public INmwEvaluator GetEvaluator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns INmwEvaluator A new evaluator instance. GetEvaluator(TaxYear, PayFrequency, int) Gets a new INmwEvaluator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. public INmwEvaluator GetEvaluator(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwEvaluator A new evaluator instance."
  },
  "api/Paytools.NationalMinimumWage.ReferenceData.html": {
    "href": "api/Paytools.NationalMinimumWage.ReferenceData.html",
    "title": "Namespace Paytools.NationalMinimumWage.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.NationalMinimumWage.ReferenceData Interfaces INmwLevelSet Interface for types that detail the various HMRC-published National Minimum/Living Wage (NMW/NLW) levels. INmwReferenceDataProvider Interface that classes implement in order to provide access to National Minimum/Living Wage reference data."
  },
  "api/Paytools.NationalMinimumWage.ReferenceData.INmwLevelSet.html": {
    "href": "api/Paytools.NationalMinimumWage.ReferenceData.INmwLevelSet.html",
    "title": "Interface INmwLevelSet | Paytools",
    "keywords": "Interface INmwLevelSet Namespace Paytools.NationalMinimumWage.ReferenceData Assembly Paytools.NationalMinimumWage.dll Interface for types that detail the various HMRC-published National Minimum/Living Wage (NMW/NLW) levels. public interface INmwLevelSet Properties Age18To20Level Gets the NMW level for employees aged between 18 and 20. decimal Age18To20Level { get; } Property Value decimal Age21To22Level Gets the NMW level for employees aged between 21 and 22. decimal Age21To22Level { get; } Property Value decimal Age23AndAboveLevel Gets the NLW (rather than NMW) level for employees aged 23 and over. decimal Age23AndAboveLevel { get; } Property Value decimal ApprenticeLevel Gets the NMW level for apprentices under 19 or apprentices aged 19 and over in the first year of their apprenticeship. decimal ApprenticeLevel { get; } Property Value decimal Under18Level Gets the NMW level for employees under the age of 18 (but over the school leaving age). decimal Under18Level { get; } Property Value decimal"
  },
  "api/Paytools.NationalMinimumWage.ReferenceData.INmwReferenceDataProvider.html": {
    "href": "api/Paytools.NationalMinimumWage.ReferenceData.INmwReferenceDataProvider.html",
    "title": "Interface INmwReferenceDataProvider | Paytools",
    "keywords": "Interface INmwReferenceDataProvider Namespace Paytools.NationalMinimumWage.ReferenceData Assembly Paytools.NationalMinimumWage.dll Interface that classes implement in order to provide access to National Minimum/Living Wage reference data. public interface INmwReferenceDataProvider Methods GetNmwLevelsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the NMW/NLW levels for the specified tax year and tax period, as denoted by the supplied pay frequency and pay period. INmwLevelSet GetNmwLevelsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns INmwLevelSet An instance of INmwLevelSet containing the levels for the specified point in time."
  },
  "api/Paytools.Payroll.Extensions.html": {
    "href": "api/Paytools.Payroll.Extensions.html",
    "title": "Namespace Paytools.Payroll.Extensions | Paytools",
    "keywords": "Namespace Paytools.Payroll.Extensions Classes IEmployeePayrollHistoryYtdExtensions Extension methods for IEmployeePayrollHistoryYtd. IEmployeePayStructureExtensions Extension methods for IEmployeePayStructure."
  },
  "api/Paytools.Payroll.Extensions.IEmployeePayrollHistoryYtdExtensions.html": {
    "href": "api/Paytools.Payroll.Extensions.IEmployeePayrollHistoryYtdExtensions.html",
    "title": "Class IEmployeePayrollHistoryYtdExtensions | Paytools",
    "keywords": "Class IEmployeePayrollHistoryYtdExtensions Namespace Paytools.Payroll.Extensions Assembly Paytools.Payroll.dll Extension methods for IEmployeePayrollHistoryYtd. public static class IEmployeePayrollHistoryYtdExtensions Inheritance object IEmployeePayrollHistoryYtdExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Adds the results of the payrun provided to the current instance and returns a new instance of IEmployeePayrollHistoryYtd. public static IEmployeePayrollHistoryYtd Add(this IEmployeePayrollHistoryYtd value, IEmployeePayrunResult payrunResult) Parameters value IEmployeePayrollHistoryYtd Instance of IEmployeePayrollHistoryYtd to be updated. payrunResult IEmployeePayrunResult Results of a set of payroll calculations for a given employee. Returns IEmployeePayrollHistoryYtd New instance of IEmployeePayrollHistoryYtd with the calculation results applied."
  },
  "api/Paytools.Payroll.Extensions.IEmployeePayStructureExtensions.html": {
    "href": "api/Paytools.Payroll.Extensions.IEmployeePayStructureExtensions.html",
    "title": "Class IEmployeePayStructureExtensions | Paytools",
    "keywords": "Class IEmployeePayStructureExtensions Namespace Paytools.Payroll.Extensions Assembly Paytools.Payroll.dll Extension methods for IEmployeePayStructure. public static class IEmployeePayStructureExtensions Inheritance object IEmployeePayStructureExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPayForPeriod(IEmployeePayStructure, decimal, PayRateUnits) Calculates the pay for the period based on the specified amount of time/unit. Currently only supports hourly pay. public static decimal GetPayForPeriod(this IEmployeePayStructure value, decimal quantity, PayRateUnits units) Parameters value IEmployeePayStructure IEmployeePayStructure instance. quantity decimal Amount of time/unit to calculate pay for. units PayRateUnits Units for quantity. Returns decimal Pay for the period. GetPayForSinglePeriod(IEmployeePayStructure, PayFrequency) Calculates the pay for one period at the specified pay frequency. public static decimal GetPayForSinglePeriod(this IEmployeePayStructure value, PayFrequency payFrequency) Parameters value IEmployeePayStructure IEmployeePayStructure instance. payFrequency PayFrequency Pay frequency. Returns decimal Pay for the period. Exceptions ArgumentException Thrown if the pay structure does not refer to an annually paid employee."
  },
  "api/Paytools.Payroll.html": {
    "href": "api/Paytools.Payroll.html",
    "title": "Namespace Paytools.Payroll | Paytools",
    "keywords": "Namespace Paytools.Payroll Paytools.Payroll.Extensions Paytools.Payroll.Model Paytools.Payroll.Payruns Interfaces IEmployerInfoProvider Not sure what this is here for."
  },
  "api/Paytools.Payroll.IEmployerInfoProvider.html": {
    "href": "api/Paytools.Payroll.IEmployerInfoProvider.html",
    "title": "Interface IEmployerInfoProvider | Paytools",
    "keywords": "Interface IEmployerInfoProvider Namespace Paytools.Payroll Assembly Paytools.Payroll.dll Not sure what this is here for. public interface IEmployerInfoProvider Properties Employer Gets Not sure what this is here for. IEmployer Employer { get; } Property Value IEmployer"
  },
  "api/Paytools.Payroll.Model.DeductionEntry.html": {
    "href": "api/Paytools.Payroll.Model.DeductionEntry.html",
    "title": "Class DeductionEntry | Paytools",
    "keywords": "Class DeductionEntry Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents a deduction from payroll. public record DeductionEntry : IDeductionEntry, IEquatable<DeductionEntry> Inheritance object DeductionEntry Implements IDeductionEntry IEquatable<DeductionEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeductionClassification Gets the type of deduction. public IDeductionDetails DeductionClassification { get; init; } Property Value IDeductionDetails FixedAmount Gets the fixed amount of the deduction, if that is specified in place of quantity and value per unit. Used for absolute amounts. public decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this deduction that when multiplied by the ValuePerUnit gives the total deduction. public decimal? QuantityInUnits { get; init; } Property Value decimal? TotalDeduction Gets the total deduction to be applied. public decimal TotalDeduction { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total deduction. public decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Paytools.Payroll.Model.EarningsEntry.html": {
    "href": "api/Paytools.Payroll.Model.EarningsEntry.html",
    "title": "Class EarningsEntry | Paytools",
    "keywords": "Class EarningsEntry Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an element of an employee's pay. public class EarningsEntry : IEarningsEntry Inheritance object EarningsEntry Implements IEarningsEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EarningsDetails Gets the type of deduction. public IEarningsDetails EarningsDetails { get; init; } Property Value IEarningsDetails FixedAmount Gets the fixed amount of the earnings, if that is specified in place of quantity and value per unit. Used for absolute amounts. public decimal? FixedAmount { get; init; } Property Value decimal? QuantityInUnits Gets the quantity of this earnings entry that when multiplied by the ValuePerUnit gives the total earnings. public decimal? QuantityInUnits { get; init; } Property Value decimal? TotalEarnings Gets the total earnings to be applied. public decimal TotalEarnings { get; } Property Value decimal ValuePerUnit Gets the GBP value per unit that when multiplied by the QuantityInUnits gives the total earnings. public decimal? ValuePerUnit { get; init; } Property Value decimal?"
  },
  "api/Paytools.Payroll.Model.EarningsHistoryYtd.html": {
    "href": "api/Paytools.Payroll.Model.EarningsHistoryYtd.html",
    "title": "Class EarningsHistoryYtd | Paytools",
    "keywords": "Class EarningsHistoryYtd Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employee's earnings history for the tax year to date. public record EarningsHistoryYtd : IEarningsHistoryYtd, IEquatable<EarningsHistoryYtd> Inheritance object EarningsHistoryYtd Implements IEarningsHistoryYtd IEquatable<EarningsHistoryYtd> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EarningsHistoryYtd() Initialises a new empoty EarningsHistoryYtd. public EarningsHistoryYtd() Properties Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. public ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry>"
  },
  "api/Paytools.Payroll.Model.Employee.html": {
    "href": "api/Paytools.Payroll.Model.Employee.html",
    "title": "Class Employee | Paytools",
    "keywords": "Class Employee Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employee for payroll purposes. public record Employee : IEmployee, INamedPerson, IEquatable<Employee> Inheritance object Employee Implements IEmployee INamedPerson IEquatable<Employee> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth Gets the individual's date of birth. public DateOnly DateOfBirth { get; init; } Property Value DateOnly EmailAddress Gets or sets the employee's email address, if known. public MailAddress? EmailAddress { get; set; } Property Value MailAddress FirstName Gets the individual's first (also known as \"given\" or \"Christian\") name. public string? FirstName { get; init; } Property Value string Gender Gets the individual's \"official\" gender as recognised by HMRC for payroll purposes. public Gender Gender { get; init; } Property Value Gender HasMiddleName Gets a value indicating whether the individual has supplied a middle name. public bool HasMiddleName { get; } Property Value bool Initials Gets a list of the individual's initials as an array. Note that this property is only used if the individual's first name is not known, and its use is mutually exclusive with FirstName and MiddleNames. public string[]? Initials { get; init; } Property Value string[] InitialsAsString Gets any initials provided as a space separated string. Will be null if a FirstName has been provided. public string? InitialsAsString { get; init; } Property Value string LastName Gets the individual's last (also known as \"family\") name. public string LastName { get; init; } Property Value string MiddleNames Gets the middle names of the individual, space separated. Note that this property is optional, as some people do not have middle names, or they choose not to disclose them. public string? MiddleNames { get; init; } Property Value string NiNumber Gets the individual's National Insurance number. public NiNumber NiNumber { get; init; } Property Value NiNumber PostalAddress Gets or sets the employee's postal address. public PostalAddress PostalAddress { get; set; } Property Value PostalAddress Title Gets the individual's title, e.g., Mr, Mrs, Miss, Dr., etc. public Title? Title { get; init; } Property Value Title?"
  },
  "api/Paytools.Payroll.Model.EmployeePayrollHistoryYtd.html": {
    "href": "api/Paytools.Payroll.Model.EmployeePayrollHistoryYtd.html",
    "title": "Class EmployeePayrollHistoryYtd | Paytools",
    "keywords": "Class EmployeePayrollHistoryYtd Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents the historical set of information for an employee's payroll for the current tax year. public record EmployeePayrollHistoryYtd : IEmployeePayrollHistoryYtd, IEquatable<EmployeePayrollHistoryYtd> Inheritance object EmployeePayrollHistoryYtd Implements IEmployeePayrollHistoryYtd IEquatable<EmployeePayrollHistoryYtd> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IEmployeePayrollHistoryYtdExtensions.Add(IEmployeePayrollHistoryYtd, IEmployeePayrunResult) Constructors EmployeePayrollHistoryYtd() Initialises a new empty instance of EmployeePayrollHistoryYtd. public EmployeePayrollHistoryYtd() EmployeePayrollHistoryYtd(IEmployeePayrunResult) Initialises a new instance of EmployeePayrollHistoryYtd with the supplied payrun result for a given employee. This constructor is intended for use to create the first history record from the first payrun of the tax year. public EmployeePayrollHistoryYtd(IEmployeePayrunResult initialResult) Parameters initialResult IEmployeePayrunResult Payrun calculation result for the given employee. Properties DeductionHistoryYtd Gets the employee's deduction history for the tax year to date. public IDeductionHistoryYtd DeductionHistoryYtd { get; init; } Property Value IDeductionHistoryYtd EarningsHistoryYtd Gets the employee's earnings history for the tax year to date. public IEarningsHistoryYtd EarningsHistoryYtd { get; init; } Property Value IEarningsHistoryYtd EmployeeNiHistoryEntries Gets the National Insurance payment history for the current tax year. Employees may transition between NI categories during the tax year and each NI category's payment record must be retained. public NiYtdHistory EmployeeNiHistoryEntries { get; init; } Property Value NiYtdHistory EmployeePensionContributionsUnderNpaYtd Gets the total employee pension contributions made under a net pay arrangement to date this tax year. public decimal EmployeePensionContributionsUnderNpaYtd { get; init; } Property Value decimal EmployeePensionContributionsUnderRasYtd Gets the total employee pension contributions made under relief at source to date this tax year. public decimal EmployeePensionContributionsUnderRasYtd { get; init; } Property Value decimal EmployerPensionContributionsYtd Gets the total employer pension contributions made to date this tax year. public decimal EmployerPensionContributionsYtd { get; init; } Property Value decimal GraduateLoanRepaymentsYtd Gets the graduate loan deductions made to date this tax year. public decimal GraduateLoanRepaymentsYtd { get; init; } Property Value decimal GrossPayYtd Gets the gross pay paid to date this tax year. public decimal GrossPayYtd { get; init; } Property Value decimal NicablePayYtd Gets the NI-able pay paid to date this tax year. public decimal NicablePayYtd { get; init; } Property Value decimal PayrolledBenefitsYtd Gets the amount accrued against payrolled benefits to date this tax year. public decimal PayrolledBenefitsYtd { get; init; } Property Value decimal SharedParentalPayYtd Gets any statutory shared parental pay paid to date this tax year. public decimal SharedParentalPayYtd { get; init; } Property Value decimal StatutoryAdoptionPayYtd Gets any statutory adoption pay paid to date this tax year. public decimal StatutoryAdoptionPayYtd { get; init; } Property Value decimal StatutoryMaternityPayYtd Gets any statutory maternity pay paid to date this tax year. public decimal StatutoryMaternityPayYtd { get; init; } Property Value decimal StatutoryParentalBereavementPayYtd Gets any statutory parental bereavement pay paid to date this tax year. public decimal StatutoryParentalBereavementPayYtd { get; init; } Property Value decimal StatutoryPaternityPayYtd Gets any statutory paternity pay paid to date this tax year. public decimal StatutoryPaternityPayYtd { get; init; } Property Value decimal StudentLoanRepaymentsYtd Gets the student loan deductions made to date this tax year. public decimal StudentLoanRepaymentsYtd { get; init; } Property Value decimal TaxablePayYtd Gets the taxable pay paid to date this tax year. public decimal TaxablePayYtd { get; init; } Property Value decimal TaxPaidYtd Gets the income tax paid to date this tax year. public decimal TaxPaidYtd { get; init; } Property Value decimal TaxUnpaidDueToRegulatoryLimit Gets the tax that it has not been possible to collect so far this tax year due to the regulatory limit on income tax deductions. public decimal TaxUnpaidDueToRegulatoryLimit { get; init; } Property Value decimal"
  },
  "api/Paytools.Payroll.Model.EmployeePayrunInputEntry.html": {
    "href": "api/Paytools.Payroll.Model.EmployeePayrunInputEntry.html",
    "title": "Class EmployeePayrunInputEntry | Paytools",
    "keywords": "Class EmployeePayrunInputEntry Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. public record EmployeePayrunInputEntry : IEmployeePayrunInputEntry, IEquatable<EmployeePayrunInputEntry> Inheritance object EmployeePayrunInputEntry Implements IEmployeePayrunInputEntry IEquatable<EmployeePayrunInputEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmployeePayrunInputEntry(IEmployee, IEmployment, ImmutableList<IEarningsEntry>, ImmutableList<IDeductionEntry>, ImmutableList<IPayrolledBenefitForPeriod>, IPensionContributionLevels) Initialises a new instance of EmployeePayrunInputEntry. public EmployeePayrunInputEntry(IEmployee employee, IEmployment employment, ImmutableList<IEarningsEntry> earnings, ImmutableList<IDeductionEntry> deductions, ImmutableList<IPayrolledBenefitForPeriod> payrolledBenefits, IPensionContributionLevels pensionContributionLevels) Parameters employee IEmployee Employee details. employment IEmployment Employment details. earnings ImmutableList<IEarningsEntry> List of applicable earnings, if any. Empty list if none. deductions ImmutableList<IDeductionEntry> List of applicable deductions, if any. Empty list if none. payrolledBenefits ImmutableList<IPayrolledBenefitForPeriod> List of payrolled benefits, if any. Empty list if none. pensionContributionLevels IPensionContributionLevels Pension contribtuion levels to be applied. Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty. public ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry> Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. public ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry> Employee Gets the employee details for this entry. public IEmployee Employee { get; } Property Value IEmployee Employment Gets the employment details for the employee for this entry. public IEmployment Employment { get; } Property Value IEmployment PayrolledBenefits Gets the list of payrolled benefits for this employee for a given payrun. Empty if the employee has no payrolled benefits. public ImmutableList<IPayrolledBenefitForPeriod> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefitForPeriod> PensionContributionLevels Gets the pension contributions to apply for this pay period. public IPensionContributionLevels PensionContributionLevels { get; } Property Value IPensionContributionLevels"
  },
  "api/Paytools.Payroll.Model.EmployeePayrunResult.html": {
    "href": "api/Paytools.Payroll.Model.EmployeePayrunResult.html",
    "title": "Class EmployeePayrunResult | Paytools",
    "keywords": "Class EmployeePayrunResult Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents a payrun entry for one employee for a specific payrun. public record EmployeePayrunResult : IEmployeePayrunResult, IEquatable<EmployeePayrunResult> Inheritance object EmployeePayrunResult Implements IEmployeePayrunResult IEquatable<EmployeePayrunResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmployeePayrunResult(IEmployee, bool, ref ITaxCalculationResult, ref INiCalculationResult, ref IStudentLoanCalculationResult, ref IPensionContributionCalculationResult, decimal, decimal, decimal, decimal, ref IEmployeePayrollHistoryYtd) Initialises a new instance of EmployeePayrunResult. public EmployeePayrunResult(IEmployee employee, bool isLeaverInThisPayrun, ref ITaxCalculationResult taxCalculationResult, ref INiCalculationResult niCalculationResult, ref IStudentLoanCalculationResult studentLoanCalculationResult, ref IPensionContributionCalculationResult pensionContributionCalculation, decimal totalGrossPay, decimal workingGrossPay, decimal taxablePay, decimal nicablePay, ref IEmployeePayrollHistoryYtd employeePayrollHistoryYtd) Parameters employee IEmployee Employee details. isLeaverInThisPayrun bool True if the employee is being marked as left in this payrun. taxCalculationResult ITaxCalculationResult Result of income tax calculation. niCalculationResult INiCalculationResult Result of National Insurance calculation. studentLoanCalculationResult IStudentLoanCalculationResult Optional result of student loan calculation. Null if the employee does not have any outstanding student or post-graduate loans. pensionContributionCalculation IPensionContributionCalculationResult Optional result of pension calculation. Null if the employee is not a member of one of the company's schemes. totalGrossPay decimal Total gross pay. workingGrossPay decimal Total gross pay less any deductions that reduce taxable/Nicable pay and should be deducted before calculating net pay. taxablePay decimal Pay subject to income tax. nicablePay decimal Pay subject to National Insurance. employeePayrollHistoryYtd IEmployeePayrollHistoryYtd Historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. Properties Employee Gets the employee's details. public IEmployee Employee { get; } Property Value IEmployee EmployeePayrollHistoryYtd Gets the historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. public ref IEmployeePayrollHistoryYtd EmployeePayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd IsLeaverInThisPayrun Gets a value indicating whether this employee is being recorded as left employment in this payrun. Note that the employee's leaving date may be before the start of the pay period for this payrun. public bool IsLeaverInThisPayrun { get; } Property Value bool NetPay Gets the employee's final net pay. public decimal NetPay { get; } Property Value decimal NicablePay Gets the employee's total pay that is subject to National Insurance. public decimal NicablePay { get; } Property Value decimal NiCalculationResult Gets the results of this employee's National Insurance calculation for this payrun. public ref INiCalculationResult NiCalculationResult { get; } Property Value INiCalculationResult PayrunInfo Gets information about this payrun. public ref IPayrunInfo PayrunInfo { get; } Property Value IPayrunInfo PensionContributionCalculationResult Gets the results of this employee's pension calculation for this payrun, if applicable.; null otherwise. public ref IPensionContributionCalculationResult PensionContributionCalculationResult { get; } Property Value IPensionContributionCalculationResult StudentLoanCalculationResult Gets the results of this employee's student loan calculation for this payrun, if applicable; null otherwise. public ref IStudentLoanCalculationResult StudentLoanCalculationResult { get; } Property Value IStudentLoanCalculationResult TaxablePay Gets the employee's total taxable pay, before the application of any tax-free pay. public decimal TaxablePay { get; } Property Value decimal TaxCalculationResult Gets the results of this employee's income tax calculation for this payrun. public ref ITaxCalculationResult TaxCalculationResult { get; } Property Value ITaxCalculationResult TotalGrossPay Gets the employee's total gross pay. public decimal TotalGrossPay { get; } Property Value decimal WorkingGrossPay Gets the employee's working gross pay, the figure used as the starting point for calculating take-home pay. public decimal WorkingGrossPay { get; } Property Value decimal"
  },
  "api/Paytools.Payroll.Model.Employer.html": {
    "href": "api/Paytools.Payroll.Model.Employer.html",
    "title": "Class Employer | Paytools",
    "keywords": "Class Employer Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employer for payroll purposes. public record Employer : IEmployer, IEquatable<Employer> Inheritance object Employer Implements IEmployer IEquatable<Employer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountsOfficeReference Gets or sets the employer's HMRC Accounts Office reference, if known. public HmrcAccountsOfficeReference? AccountsOfficeReference { get; set; } Property Value HmrcAccountsOfficeReference BusinessLegalName Gets or sets the legal name of the business, including any legally required suffix, e.g., Ltd, LLP, etc. public string BusinessLegalName { get; set; } Property Value string HmrcPayeReference Gets or sets the employer's HMRC PAYE reference, if known. public HmrcPayeReference? HmrcPayeReference { get; set; } Property Value HmrcPayeReference?"
  },
  "api/Paytools.Payroll.Model.Employment.html": {
    "href": "api/Paytools.Payroll.Model.Employment.html",
    "title": "Class Employment | Paytools",
    "keywords": "Class Employment Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employee's employment for payroll purposes. public record Employment : IEmployment, IEquatable<Employment> Inheritance object Employment Implements IEmployment IEquatable<Employment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Employment(in IEmployeePayrollHistoryYtd) Initialises a new instance of Employment. public Employment(in IEmployeePayrollHistoryYtd payrollHistoryYtd) Parameters payrollHistoryYtd IEmployeePayrollHistoryYtd Employee's year-to-date payroll history. Properties DefaultPensionContributionLevels Gets the default pension contributions to apply in each pay period, unless overridden by employee or employer instruction for that pay period. public IPensionContributionLevels DefaultPensionContributionLevels { get; init; } Property Value IPensionContributionLevels DirectorsNiCalculationMethod Gets the method for calculating National Insurance contributions. Applicable only for directors; null otherwise. public DirectorsNiCalculationMethod? DirectorsNiCalculationMethod { get; init; } Property Value DirectorsNiCalculationMethod? EmploymentEndDate Gets the employee's official employment termination date, i.e., their last working day. Null if the employee is still employed. public DateOnly? EmploymentEndDate { get; init; } Property Value DateOnly? EmploymentStartDate Gets the employee's official employment start date. public DateOnly EmploymentStartDate { get; init; } Property Value DateOnly IsDirector Gets a value indicating whether the employee is a company director. public bool IsDirector { get; init; } Property Value bool NiCategory Gets the employee's NI category. public NiCategory NiCategory { get; init; } Property Value NiCategory PayrolledBenefits Gets the list of payrolled benefits that apply to this employment. public ImmutableList<IPayrolledBenefit> PayrolledBenefits { get; init; } Property Value ImmutableList<IPayrolledBenefit> PayrollHistoryYtd Gets the key figures from the employee's payroll history for the tax year to date. public ref IEmployeePayrollHistoryYtd PayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd PayrollId Gets the employee's payroll ID, as reported to HMRC. Sometimes known as \"works number\". public PayrollId PayrollId { get; init; } Property Value PayrollId PensionScheme Gets the pension scheme that the employee is a member of. Null if they are not a member of any scheme. public IPensionScheme? PensionScheme { get; init; } Property Value IPensionScheme PrimaryPayStructure Gets the employee's primary pay structure. public IEmployeePayStructure PrimaryPayStructure { get; init; } Property Value IEmployeePayStructure RecurringDeductions Gets the list of recurring deductions for an employee. public ImmutableList<IRecurringDeduction> RecurringDeductions { get; init; } Property Value ImmutableList<IRecurringDeduction> RecurringEarnings Gets the list of recurring earnings elements for an employee. public ImmutableList<IRecurringEarnings> RecurringEarnings { get; init; } Property Value ImmutableList<IRecurringEarnings> StudentLoanStatus Gets the employee's current student loan status. public StudentLoanStatus? StudentLoanStatus { get; init; } Property Value StudentLoanStatus? TaxCode Gets the employee's tax code. public TaxCode TaxCode { get; init; } Property Value TaxCode"
  },
  "api/Paytools.Payroll.Model.GenericDeduction.html": {
    "href": "api/Paytools.Payroll.Model.GenericDeduction.html",
    "title": "Class GenericDeduction | Paytools",
    "keywords": "Class GenericDeduction Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents the various types of deduction that can be made from payroll. public record GenericDeduction : IDeductionDetails, IEquatable<GenericDeduction> Inheritance object GenericDeduction Implements IDeductionDetails IEquatable<GenericDeduction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsUnderSalaryExchangeArrangement Gets or sets a value indicating whether this type of deduction is made as part of a salary exchange (aka salary sacrifice) arrangement. Note that when this flag is set, ReducesGrossPay, ReducesTaxablePay and ReducesNicablePay will also normally be set to true. public bool IsUnderSalaryExchangeArrangement { get; set; } Property Value bool Remarks This property is primarily included to assist when it is time to show the deduction on the payslip, enabling all salary exchange deductions including pensions to be grouped together. Name Gets or sets the full name of this type of deduction. public string Name { get; set; } Property Value string ReducesGrossPay Gets a value indicating whether this type of deduction reduces the gross pay figure used to calculate take-home . public bool ReducesGrossPay { get; } Property Value bool ReducesNicablePay Gets or sets a value indicating whether this type of deduction affects pay for National Insurance purposes. public bool ReducesNicablePay { get; set; } Property Value bool ReducesPensionablePay Gets or sets a value indicating whether this type of deduction affects pay for pension purposes. public bool ReducesPensionablePay { get; set; } Property Value bool ReducesTaxablePay Gets or sets a value indicating whether this type of deduction is applied before or after tax. public bool ReducesTaxablePay { get; set; } Property Value bool ShortName Gets or sets the short name for this type of deduction. public string ShortName { get; set; } Property Value string Units Gets or sets the units for this deduction type, if applicable. Null if not applicable. public PayRateUnits? Units { get; set; } Property Value PayRateUnits?"
  },
  "api/Paytools.Payroll.Model.GenericEarnings.html": {
    "href": "api/Paytools.Payroll.Model.GenericEarnings.html",
    "title": "Class GenericEarnings | Paytools",
    "keywords": "Class GenericEarnings Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents a generic pay component (e.g., salary, bonus, sick pay, etc.). public class GenericEarnings : IEarningsDetails Inheritance object GenericEarnings Implements IEarningsDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the unique ID for this pay component. public Guid Id { get; set; } Property Value Guid IsNetToGross Gets or sets a value indicating whether this pay component refers to a net amount that should be \"grossed up\", ensuring the employee receives the net amount in their take-home pay. public bool IsNetToGross { get; set; } Property Value bool IsPensionable Gets or sets a value indicating whether this pay component should be included in the employee's pensionable salary. public bool IsPensionable { get; set; } Property Value bool IsSubjectToNi Gets or sets a value indicating whether this pay component is subject to National Insurance. public bool IsSubjectToNi { get; set; } Property Value bool IsSubjectToTax Gets or sets a value indicating whether this pay component is subject to tax. public bool IsSubjectToTax { get; set; } Property Value bool IsTreatedAsOvertime Gets or sets a value indicating whether this pay component should be treated as overtime for the purposes of average overtime calculations. public bool IsTreatedAsOvertime { get; set; } Property Value bool Name Gets or sets the full name of this pay component. public string Name { get; set; } Property Value string ShortName Gets or sets the short name for this pay component. public string ShortName { get; set; } Property Value string Units Gets or sets the units for this pay component, if applicable. Null if not applicable. public PayRateUnits? Units { get; set; } Property Value PayRateUnits?"
  },
  "api/Paytools.Payroll.Model.html": {
    "href": "api/Paytools.Payroll.Model.html",
    "title": "Namespace Paytools.Payroll.Model | Paytools",
    "keywords": "Namespace Paytools.Payroll.Model Classes DeductionEntry Represents a deduction from payroll. EarningsEntry Represents an element of an employee's pay. EarningsHistoryYtd Represents an employee's earnings history for the tax year to date. Employee Represents an employee for payroll purposes. EmployeePayrollHistoryYtd Represents the historical set of information for an employee's payroll for the current tax year. EmployeePayrunInputEntry Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. EmployeePayrunResult Represents a payrun entry for one employee for a specific payrun. Employer Represents an employer for payroll purposes. Employment Represents an employee's employment for payroll purposes. GenericDeduction Represents the various types of deduction that can be made from payroll. GenericEarnings Represents a generic pay component (e.g., salary, bonus, sick pay, etc.). PayrolledBenefitForPeriod Represents a payrolled benefit as applicable to one payroll period. PayrunResult Represents the output of a payrun. PensionContributionLevels Defines the levels to be applied for contributions into an employee's pension. Interfaces IEmployeePayrunInputEntry Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. IEmployeePayrunResult Interface that represents a payrun entry for one employee for a specific payrun. IPayrolledBenefitForPeriod Interface that represents the effect of a payrolled on a given pay reference period. IPayrunInfo Not sure what goes here. IPayrunResult Interface that represents the output of a given payrun."
  },
  "api/Paytools.Payroll.Model.IEmployeePayrunInputEntry.html": {
    "href": "api/Paytools.Payroll.Model.IEmployeePayrunInputEntry.html",
    "title": "Interface IEmployeePayrunInputEntry | Paytools",
    "keywords": "Interface IEmployeePayrunInputEntry Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents an employee payrun entry, i.e., all the information needed to prepare the payroll record for the employee for the pay period in question. public interface IEmployeePayrunInputEntry Properties Deductions Gets the list of deductions for this employee for a given payrun. May be empty. ImmutableList<IDeductionEntry> Deductions { get; } Property Value ImmutableList<IDeductionEntry> Earnings Gets the list of pay components for this employee for a given payrun. May be empty but usually not. ImmutableList<IEarningsEntry> Earnings { get; } Property Value ImmutableList<IEarningsEntry> Employee Gets the employee details for this entry. IEmployee Employee { get; } Property Value IEmployee Employment Gets the employment details for the employee for this entry. IEmployment Employment { get; } Property Value IEmployment PayrolledBenefits Gets the list of payrolled benefits for this employee for a given payrun. Empty if the employee has no payrolled benefits. ImmutableList<IPayrolledBenefitForPeriod> PayrolledBenefits { get; } Property Value ImmutableList<IPayrolledBenefitForPeriod> PensionContributionLevels Gets the pension contributions to apply for this pay period. IPensionContributionLevels PensionContributionLevels { get; } Property Value IPensionContributionLevels"
  },
  "api/Paytools.Payroll.Model.IEmployeePayrunResult.html": {
    "href": "api/Paytools.Payroll.Model.IEmployeePayrunResult.html",
    "title": "Interface IEmployeePayrunResult | Paytools",
    "keywords": "Interface IEmployeePayrunResult Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Interface that represents a payrun entry for one employee for a specific payrun. public interface IEmployeePayrunResult Properties Employee Gets the employee's details. IEmployee Employee { get; } Property Value IEmployee EmployeePayrollHistoryYtd Gets the historical set of information for an employee's payroll for the current tax year, not including the effect of this payrun. ref IEmployeePayrollHistoryYtd EmployeePayrollHistoryYtd { get; } Property Value IEmployeePayrollHistoryYtd IsLeaverInThisPayrun Gets a value indicating whether this employee is being recorded as left employment in this payrun. Note that the employee's leaving date may be before the start of the pay period for this payrun. bool IsLeaverInThisPayrun { get; } Property Value bool NetPay Gets the employee's final net pay. decimal NetPay { get; } Property Value decimal NicablePay Gets the employee's total pay that is subject to National Insurance. decimal NicablePay { get; } Property Value decimal NiCalculationResult Gets the results of this employee's National Insurance calculation for this payrun. ref INiCalculationResult NiCalculationResult { get; } Property Value INiCalculationResult PayrunInfo Gets information about this payrun. ref IPayrunInfo PayrunInfo { get; } Property Value IPayrunInfo PensionContributionCalculationResult Gets the results of this employee's pension calculation for this payrun, if applicable.; null otherwise. ref IPensionContributionCalculationResult PensionContributionCalculationResult { get; } Property Value IPensionContributionCalculationResult StudentLoanCalculationResult Gets the results of this employee's student loan calculation for this payrun, if applicable; null otherwise. ref IStudentLoanCalculationResult StudentLoanCalculationResult { get; } Property Value IStudentLoanCalculationResult TaxablePay Gets the employee's total taxable pay, before the application of any tax-free pay. decimal TaxablePay { get; } Property Value decimal TaxCalculationResult Gets the results of this employee's income tax calculation for this payrun. ref ITaxCalculationResult TaxCalculationResult { get; } Property Value ITaxCalculationResult TotalGrossPay Gets the employee's total gross pay. decimal TotalGrossPay { get; } Property Value decimal"
  },
  "api/Paytools.Payroll.Model.IPayrolledBenefitForPeriod.html": {
    "href": "api/Paytools.Payroll.Model.IPayrolledBenefitForPeriod.html",
    "title": "Interface IPayrolledBenefitForPeriod | Paytools",
    "keywords": "Interface IPayrolledBenefitForPeriod Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Interface that represents the effect of a payrolled on a given pay reference period. public interface IPayrolledBenefitForPeriod : IPayrolledBenefit Properties AmountForPeriod Gets the amount of benefit to apply for the period. decimal AmountForPeriod { get; } Property Value decimal"
  },
  "api/Paytools.Payroll.Model.IPayrunInfo.html": {
    "href": "api/Paytools.Payroll.Model.IPayrunInfo.html",
    "title": "Interface IPayrunInfo | Paytools",
    "keywords": "Interface IPayrunInfo Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Not sure what goes here. public interface IPayrunInfo"
  },
  "api/Paytools.Payroll.Model.IPayrunResult.html": {
    "href": "api/Paytools.Payroll.Model.IPayrunResult.html",
    "title": "Interface IPayrunResult | Paytools",
    "keywords": "Interface IPayrunResult Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Interface that represents the output of a given payrun. public interface IPayrunResult : IEmployerInfoProvider Inherited Members IEmployerInfoProvider.Employer Properties EmployeePayrunEntries Gets the list of employee payrun entries. List<IEmployeePayrunResult> EmployeePayrunEntries { get; } Property Value List<IEmployeePayrunResult> PayDate Gets the pay date for this payrun. PayDate PayDate { get; } Property Value PayDate"
  },
  "api/Paytools.Payroll.Model.PayrolledBenefitForPeriod.html": {
    "href": "api/Paytools.Payroll.Model.PayrolledBenefitForPeriod.html",
    "title": "Class PayrolledBenefitForPeriod | Paytools",
    "keywords": "Class PayrolledBenefitForPeriod Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents a payrolled benefit as applicable to one payroll period. public record PayrolledBenefitForPeriod : IPayrolledBenefitForPeriod, IPayrolledBenefit, IEquatable<PayrolledBenefitForPeriod> Inheritance object PayrolledBenefitForPeriod Implements IPayrolledBenefitForPeriod IPayrolledBenefit IEquatable<PayrolledBenefitForPeriod> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrolledBenefitForPeriod(decimal) Initialises a new instance of PayrolledBenefitForPeriod. public PayrolledBenefitForPeriod(decimal amountForPeriod) Parameters amountForPeriod decimal Amount of the benefit for the period. Properties AmountForPeriod Gets the amount of benefit to apply for the period. public decimal AmountForPeriod { get; } Property Value decimal"
  },
  "api/Paytools.Payroll.Model.PayrunResult.html": {
    "href": "api/Paytools.Payroll.Model.PayrunResult.html",
    "title": "Class PayrunResult | Paytools",
    "keywords": "Class PayrunResult Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Represents the output of a payrun. public record PayrunResult : IPayrunResult, IEmployerInfoProvider, IEquatable<PayrunResult> Inheritance object PayrunResult Implements IPayrunResult IEmployerInfoProvider IEquatable<PayrunResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EmployeePayrunEntries Gets the list of employee payrun entries. public List<IEmployeePayrunResult> EmployeePayrunEntries { get; init; } Property Value List<IEmployeePayrunResult> Employer Gets the employer that this payrun refers to. public IEmployer Employer { get; init; } Property Value IEmployer PayDate Gets the pay date for this payrun. public PayDate PayDate { get; init; } Property Value PayDate"
  },
  "api/Paytools.Payroll.Model.PensionContributionLevels.html": {
    "href": "api/Paytools.Payroll.Model.PensionContributionLevels.html",
    "title": "Class PensionContributionLevels | Paytools",
    "keywords": "Class PensionContributionLevels Namespace Paytools.Payroll.Model Assembly Paytools.Payroll.dll Defines the levels to be applied for contributions into an employee's pension. public record PensionContributionLevels : IPensionContributionLevels, IEquatable<PensionContributionLevels> Inheritance object PensionContributionLevels Implements IPensionContributionLevels IEquatable<PensionContributionLevels> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvcForPeriod Gets any Additional Voluntary Contribution (AVC) on the part of the employee. public decimal? AvcForPeriod { get; init; } Property Value decimal? EmployeeContribution Gets the employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. public decimal EmployeeContribution { get; init; } Property Value decimal EmployeeContributionIsFixedAmount Gets a value indicating whether EmployeeContribution should be treated as a fixed amount. True if the employee contribution figure sshould be treated as a fixed amount; false if it should be treated as a percentage. public bool EmployeeContributionIsFixedAmount { get; init; } Property Value bool EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. public decimal EmployerContributionPercentage { get; init; } Property Value decimal EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. public decimal? EmployersNiReinvestmentPercentage { get; init; } Property Value decimal? SalaryExchangeApplied Gets a value indicating whether salary exchange should be applied. public bool SalaryExchangeApplied { get; init; } Property Value bool SalaryForMaternityPurposes Gets the value used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. public decimal? SalaryForMaternityPurposes { get; init; } Property Value decimal?"
  },
  "api/Paytools.Payroll.Payruns.html": {
    "href": "api/Paytools.Payroll.Payruns.html",
    "title": "Namespace Paytools.Payroll.Payruns | Paytools",
    "keywords": "Namespace Paytools.Payroll.Payruns Classes PayrunEntryProcessor Represents the calculator that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. PayrunProcessor Represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. PayrunProcessorFactory Represents a factory object that creates payrun calculator instances that implement IPayrunEntryProcessor. Interfaces IPayrunEntryProcessor Interface that represent types that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. IPayrunProcessor Interface that represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. IPayrunProcessorFactory Interface that represents factory objects that create instances that implement IPayrunProcessor."
  },
  "api/Paytools.Payroll.Payruns.IPayrunEntryProcessor.html": {
    "href": "api/Paytools.Payroll.Payruns.IPayrunEntryProcessor.html",
    "title": "Interface IPayrunEntryProcessor | Paytools",
    "keywords": "Interface IPayrunEntryProcessor Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Interface that represent types that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. public interface IPayrunEntryProcessor Properties PayDate Gets the pay date for this payrun calculator. PayDate PayDate { get; } Property Value PayDate PayPeriod Gets the pay period for this payrun calculator. PayReferencePeriod PayPeriod { get; } Property Value PayReferencePeriod Methods Process(IEmployeePayrunInputEntry, out IEmployeePayrunResult) Processes the supplied payrun entry calculating all the earnings and deductions, income tax, national insurance and other statutory deductions, and generating a result structure which includes the final net pay. void Process(IEmployeePayrunInputEntry entry, out IEmployeePayrunResult result) Parameters entry IEmployeePayrunInputEntry Instance of IEmployeePayrunInputEntry containing all the necessary input data for the payroll calculation. result IEmployeePayrunResult An instance of IEmployeePayrunResult containing the results of the payroll calculations."
  },
  "api/Paytools.Payroll.Payruns.IPayrunProcessor.html": {
    "href": "api/Paytools.Payroll.Payruns.IPayrunProcessor.html",
    "title": "Interface IPayrunProcessor | Paytools",
    "keywords": "Interface IPayrunProcessor Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Interface that represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. public interface IPayrunProcessor Methods Process(List<IEmployeePayrunInputEntry>, out IPayrunResult) Processes this payrun. void Process(List<IEmployeePayrunInputEntry> employeePayrunEntries, out IPayrunResult result) Parameters employeePayrunEntries List<IEmployeePayrunInputEntry> List of payrun information for each employee in the payrun. result IPayrunResult An instance of a class that implements IPayrunResult containing the results of this payrun."
  },
  "api/Paytools.Payroll.Payruns.IPayrunProcessorFactory.html": {
    "href": "api/Paytools.Payroll.Payruns.IPayrunProcessorFactory.html",
    "title": "Interface IPayrunProcessorFactory | Paytools",
    "keywords": "Interface IPayrunProcessorFactory Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Interface that represents factory objects that create instances that implement IPayrunProcessor. public interface IPayrunProcessorFactory Methods GetProcessorAsync(IEmployer, PayDate, PayReferencePeriod) Gets a payrun processor for specified pay date and pay period. Task<IPayrunProcessor> GetProcessorAsync(IEmployer employer, PayDate payDate, PayReferencePeriod payPeriod) Parameters employer IEmployer Employer for this payrun processor. payDate PayDate Applicable pay date for the required payrun processor. payPeriod PayReferencePeriod Applicable pay period for required payrun processor. Returns Task<IPayrunProcessor> An implementation of IPayrunProcessor for the specified pay date and pay period."
  },
  "api/Paytools.Payroll.Payruns.PayrunEntryProcessor.html": {
    "href": "api/Paytools.Payroll.Payruns.PayrunEntryProcessor.html",
    "title": "Class PayrunEntryProcessor | Paytools",
    "keywords": "Class PayrunEntryProcessor Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Represents the calculator that can process an employee's set of input payroll data and provide the results of the calculations in the form of an IEmployeePayrunResult. public class PayrunEntryProcessor : IPayrunEntryProcessor Inheritance object PayrunEntryProcessor Implements IPayrunEntryProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunEntryProcessor(ITaxCalculatorFactory, INiCalculatorFactory, IPensionContributionCalculatorFactory, IStudentLoanCalculatorFactory, PayDate, PayReferencePeriod) Initialises a new instance of PayrunEntryProcessor with the supplied factories and specified pay date. public PayrunEntryProcessor(ITaxCalculatorFactory incomeTaxCalcFactory, INiCalculatorFactory niCalcFactory, IPensionContributionCalculatorFactory pensionCalcFactory, IStudentLoanCalculatorFactory studentLoanCalcFactory, PayDate payDate, PayReferencePeriod payPeriod) Parameters incomeTaxCalcFactory ITaxCalculatorFactory Income tax calculator factory. niCalcFactory INiCalculatorFactory calculator factory. pensionCalcFactory IPensionContributionCalculatorFactory Pension contributions calculator factory. studentLoanCalcFactory IStudentLoanCalculatorFactory Student loan calculator factory. payDate PayDate Pay date for this payrun. payPeriod PayReferencePeriod Applicable pay period for this calculator. Properties PayDate Gets the pay date for this payrun calculator. public PayDate PayDate { get; } Property Value PayDate PayPeriod Gets the pay period for this payrun calculator. public PayReferencePeriod PayPeriod { get; } Property Value PayReferencePeriod Methods Process(IEmployeePayrunInputEntry, out IEmployeePayrunResult) Processes the supplied payrun entry calculating all the earnings and deductions, income tax, national insurance and other statutory deductions, and generating a result structure which includes the final net pay. public void Process(IEmployeePayrunInputEntry entry, out IEmployeePayrunResult result) Parameters entry IEmployeePayrunInputEntry Instance of IEmployeePayrunInputEntry containing all the necessary input data for the payroll calculation. result IEmployeePayrunResult An instance of IEmployeePayrunResult containing the results of the payroll calculations."
  },
  "api/Paytools.Payroll.Payruns.PayrunProcessor.html": {
    "href": "api/Paytools.Payroll.Payruns.PayrunProcessor.html",
    "title": "Class PayrunProcessor | Paytools",
    "keywords": "Class PayrunProcessor Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Represents a payrun, i.e., the running of payroll for a single pay reference period on a single pay date for a predefined set of employees within one employer's employment. public class PayrunProcessor : IPayrunProcessor Inheritance object PayrunProcessor Implements IPayrunProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunProcessor(IPayrunEntryProcessor, IEmployer) Initialises a new instance of PayrunProcessor with the supplied calculator. public PayrunProcessor(IPayrunEntryProcessor calculator, IEmployer employer) Parameters calculator IPayrunEntryProcessor Calculator to be used to calculate earnings, deductions and net pay. employer IEmployer Employer that this payrun processor relates to. Methods Process(List<IEmployeePayrunInputEntry>, out IPayrunResult) Processes this payrun. public void Process(List<IEmployeePayrunInputEntry> employeePayrunEntries, out IPayrunResult result) Parameters employeePayrunEntries List<IEmployeePayrunInputEntry> List of payrun information for each employee in the payrun. result IPayrunResult An instance of a class that implements IPayrunResult containing the results of this payrun."
  },
  "api/Paytools.Payroll.Payruns.PayrunProcessorFactory.html": {
    "href": "api/Paytools.Payroll.Payruns.PayrunProcessorFactory.html",
    "title": "Class PayrunProcessorFactory | Paytools",
    "keywords": "Class PayrunProcessorFactory Namespace Paytools.Payroll.Payruns Assembly Paytools.Payroll.dll Represents a factory object that creates payrun calculator instances that implement IPayrunEntryProcessor. public class PayrunProcessorFactory : IPayrunProcessorFactory Inheritance object PayrunProcessorFactory Implements IPayrunProcessorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayrunProcessorFactory(in IHmrcReferenceDataProvider) Initialises a new instance of PayrunProcessorFactory. public PayrunProcessorFactory(in IHmrcReferenceDataProvider hmrcReferenceDataProvider) Parameters hmrcReferenceDataProvider IHmrcReferenceDataProvider HMRC reference data provider. PayrunProcessorFactory(in IHmrcReferenceDataProviderFactory, in Uri) Initialises a new instance of PayrunProcessorFactory. public PayrunProcessorFactory(in IHmrcReferenceDataProviderFactory hmrcReferenceDataProviderFactory, in Uri referenceDataEndpoint) Parameters hmrcReferenceDataProviderFactory IHmrcReferenceDataProviderFactory HMRC reference data provider factory. referenceDataEndpoint Uri HTTP(S) endpoint to retrieve reference data from. Methods GetProcessorAsync(IEmployer, PayDate, PayReferencePeriod) Gets a payrun processor for specified pay date and pay period. public Task<IPayrunProcessor> GetProcessorAsync(IEmployer employer, PayDate payDate, PayReferencePeriod payPeriod) Parameters employer IEmployer Employer for this payrun processor. payDate PayDate Applicable pay date for the required payrun processor. payPeriod PayReferencePeriod Applicable pay period for required payrun processor. Returns Task<IPayrunProcessor> An implementation of IPayrunProcessor for the specified pay date and pay period."
  },
  "api/Paytools.Pensions.html": {
    "href": "api/Paytools.Pensions.html",
    "title": "Namespace Paytools.Pensions | Paytools",
    "keywords": "Namespace Paytools.Pensions Paytools.Pensions.Model Paytools.Pensions.ReferenceData Classes PensionablePaySetCalculator Represents a pension contribution calculator for Pensionable Pay Set 1, 2 and 3. PensionContributionCalculator Abstract class that represents different types of pension contribution calculators. PensionContributionCalculatorFactory Factory to generate IPensionContributionCalculator implementations that are for a given pay date, pay frequency, earnings basis and tax treatment. QualifyingEarningsContributionsCalculator Represents a pension contribution calculator for Qualifying Earnings. Interfaces IPensionContributionCalculator Interface for types that provide calculation of pension contributions, both under normal arrangements and under salary exchange (aka salary sacrifice). IPensionContributionCalculatorFactory Interface that represents factories that can generate IPensionContributionCalculator implementations."
  },
  "api/Paytools.Pensions.IPensionContributionCalculator.html": {
    "href": "api/Paytools.Pensions.IPensionContributionCalculator.html",
    "title": "Interface IPensionContributionCalculator | Paytools",
    "keywords": "Interface IPensionContributionCalculator Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Interface for types that provide calculation of pension contributions, both under normal arrangements and under salary exchange (aka salary sacrifice). public interface IPensionContributionCalculator Methods Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. void Calculate(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates, but under salary exchange arrangements. Here the output employee contribution will always be zero. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. void CalculateUnderSalaryExchange(decimal pensionableSalary, decimal employerContributionPercentage, decimal employerNiSavings, decimal employerNiSavingsReinvestmentPercentage, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employerNiSavings decimal Savings in employer's NI due to the salary exchanged. employerNiSavingsReinvestmentPercentage decimal Percentage of employer NI savings to be reinvested in the employee's pension, expressed in percentage points (i.e., 100% = 100.0m). employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. GetSalaryExchangedAmount(decimal, decimal, bool) Gets the absolute amount of employee salary exchanged, either as a result of a fixed amount being passed in, or as a percentage of pensionable salary (banded in the case of Qualifying Earnings. decimal GetSalaryExchangedAmount(decimal pensionableSalary, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. Returns decimal Value of employee salary being exchanged."
  },
  "api/Paytools.Pensions.IPensionContributionCalculatorFactory.html": {
    "href": "api/Paytools.Pensions.IPensionContributionCalculatorFactory.html",
    "title": "Interface IPensionContributionCalculatorFactory | Paytools",
    "keywords": "Interface IPensionContributionCalculatorFactory Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Interface that represents factories that can generate IPensionContributionCalculator implementations. public interface IPensionContributionCalculatorFactory Methods GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, PayDate) Gets a new IPensionContributionCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds (Qualifying Earnings only) and rates to use, noting that these may change in-year. IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, PayDate payDate) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). payDate PayDate Applicable pay date. Returns IPensionContributionCalculator A new calculator instance. GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, TaxYear, PayFrequency, int) Gets a new IPensionContributionCalculator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may change in-year. IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IPensionContributionCalculator A new calculator instance."
  },
  "api/Paytools.Pensions.Model.html": {
    "href": "api/Paytools.Pensions.Model.html",
    "title": "Namespace Paytools.Pensions.Model | Paytools",
    "keywords": "Namespace Paytools.Pensions.Model Classes PensionScheme Represents a workplace pension scheme. Structs PensionContributionCalculationResult Represents a pension contribution calculation result. Interfaces IPensionContributionCalculationResult Interface for types that model pension contribution calculation results. IPensionContributionLevels Interface that defines the levels to be applied for contributions into an employee's pension. IPensionScheme Interface for types that represent pension schemes."
  },
  "api/Paytools.Pensions.Model.IPensionContributionCalculationResult.html": {
    "href": "api/Paytools.Pensions.Model.IPensionContributionCalculationResult.html",
    "title": "Interface IPensionContributionCalculationResult | Paytools",
    "keywords": "Interface IPensionContributionCalculationResult Namespace Paytools.Pensions.Model Assembly Paytools.Pensions.dll Interface for types that model pension contribution calculation results. public interface IPensionContributionCalculationResult Properties BandedEarnings Gets the portion of earnings used to calculate the employee and employer contributions under Qualifying Earnings. Null for pensionable pay. decimal? BandedEarnings { get; } Property Value decimal? CalculatedEmployeeContributionAmount Gets the employee contribution amount resulting from the calculation. Will be zero if SalaryExchangeApplied is true. decimal CalculatedEmployeeContributionAmount { get; } Property Value decimal CalculatedEmployerContributionAmount Gets the employer contribution amount resulting from the calculation. IfSalaryExchangeApplied is true, includes both calculated amounts for employer and employee contributions and any NI reinvestment to be applied (based on the value of EmployersNiReinvestmentPercentage). decimal CalculatedEmployerContributionAmount { get; } Property Value decimal EarningsBasis Gets the earnings basis for the pension calculation (e.g., Qualifying Earnings). PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis EmployeeAvcAmount Gets any Additional Voluntary Contribution (AVC) made by the employee. decimal? EmployeeAvcAmount { get; } Property Value decimal? EmployeeContributionFixedAmount Gets the employee's fixed contribution amount, if applicable. If supplied, overrides EmployeeContributionPercentage. decimal? EmployeeContributionFixedAmount { get; } Property Value decimal? EmployeeContributionPercentage Gets the employee contribution percentage, expressed in percentage points, i.e., 5% = 5.0m. decimal? EmployeeContributionPercentage { get; } Property Value decimal? EmployerContributionAmountBeforeSalaryExchange Gets the portion of the total employer-only contribution made under salary exchange that pertains to the employer's contribution. decimal? EmployerContributionAmountBeforeSalaryExchange { get; } Property Value decimal? EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. decimal EmployerContributionPercentage { get; } Property Value decimal EmployerNiSavingsToReinvest Gets the amount of any employer NI savings that are to be re-invested in the employee's pension, adjusted by the value of EmployersNiReinvestmentPercentage. Only applies under salary exchange. decimal? EmployerNiSavingsToReinvest { get; } Property Value decimal? EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. decimal? EmployersNiReinvestmentPercentage { get; } Property Value decimal? PensionableSalaryInPeriod Gets the pensionable salary for the period. decimal PensionableSalaryInPeriod { get; } Property Value decimal SalaryExchangeApplied Gets a value indicating whether salary exchange has been applied. bool SalaryExchangeApplied { get; } Property Value bool SalaryExchangedAmount Gets the amount the employee's gross salary exchanged under a salary exchange arrangement. decimal? SalaryExchangedAmount { get; } Property Value decimal? TaxTreatment Gets the pension tax treatment to be applied, i.e., relief at source vs net pay arrangement. PensionTaxTreatment TaxTreatment { get; } Property Value PensionTaxTreatment"
  },
  "api/Paytools.Pensions.Model.IPensionContributionLevels.html": {
    "href": "api/Paytools.Pensions.Model.IPensionContributionLevels.html",
    "title": "Interface IPensionContributionLevels | Paytools",
    "keywords": "Interface IPensionContributionLevels Namespace Paytools.Pensions.Model Assembly Paytools.Pensions.dll Interface that defines the levels to be applied for contributions into an employee's pension. public interface IPensionContributionLevels Properties AvcForPeriod Gets any Additional Voluntary Contribution (AVC) on the part of the employee. decimal? AvcForPeriod { get; } Property Value decimal? EmployeeContribution Gets the employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. decimal EmployeeContribution { get; } Property Value decimal EmployeeContributionIsFixedAmount Gets a value indicating whether EmployeeContribution should be treated as a fixed amount. True if the employee contribution figure sshould be treated as a fixed amount; false if it should be treated as a percentage. bool EmployeeContributionIsFixedAmount { get; } Property Value bool EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. decimal EmployerContributionPercentage { get; } Property Value decimal EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. decimal? EmployersNiReinvestmentPercentage { get; } Property Value decimal? SalaryExchangeApplied Gets a value indicating whether salary exchange should be applied. bool SalaryExchangeApplied { get; } Property Value bool SalaryForMaternityPurposes Gets the value used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. decimal? SalaryForMaternityPurposes { get; } Property Value decimal?"
  },
  "api/Paytools.Pensions.Model.IPensionScheme.html": {
    "href": "api/Paytools.Pensions.Model.IPensionScheme.html",
    "title": "Interface IPensionScheme | Paytools",
    "keywords": "Interface IPensionScheme Namespace Paytools.Pensions.Model Assembly Paytools.Pensions.dll Interface for types that represent pension schemes. public interface IPensionScheme Remarks A IPensionScheme instance refers to a pension scheme with a specific provider, with specific tax treatment and earnings basis. Whilst it is not common for pension schemes to change tax treatment, it is quite possible for an employer to operate more than one type of earnings basis across its employee base. In this case, two (or more) instances of this type would be required, one for each earnings basis in use, even though all contributions might be flowing to a single scheme with the same provider. Properties EarningsBasis Gets the earnings basis for this pension scheme. PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis TaxTreatment Gets the tax treatment for this pension scheme. PensionTaxTreatment TaxTreatment { get; } Property Value PensionTaxTreatment"
  },
  "api/Paytools.Pensions.Model.PensionContributionCalculationResult.html": {
    "href": "api/Paytools.Pensions.Model.PensionContributionCalculationResult.html",
    "title": "Struct PensionContributionCalculationResult | Paytools",
    "keywords": "Struct PensionContributionCalculationResult Namespace Paytools.Pensions.Model Assembly Paytools.Pensions.dll Represents a pension contribution calculation result. public readonly struct PensionContributionCalculationResult : IPensionContributionCalculationResult Implements IPensionContributionCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties BandedEarnings Gets the portion of earnings used to calculate the employee and employer contributions under Qualifying Earnings. Null for pensionable pay. public decimal? BandedEarnings { get; init; } Property Value decimal? CalculatedEmployeeContributionAmount Gets the employee contribution amount resulting from the calculation. Will be zero if SalaryExchangeApplied is true. public decimal CalculatedEmployeeContributionAmount { get; init; } Property Value decimal CalculatedEmployerContributionAmount Gets the employer contribution amount resulting from the calculation. IfSalaryExchangeApplied is true, includes both calculated amounts for employer and employee contributions and any NI reinvestment to be applied (based on the value of EmployersNiReinvestmentPercentage). public decimal CalculatedEmployerContributionAmount { get; init; } Property Value decimal EarningsBasis Gets the earnings basis for the pension calculation (e.g., Qualifying Earnings). public PensionsEarningsBasis EarningsBasis { get; init; } Property Value PensionsEarningsBasis EmployeeAvcAmount Gets any Additional Voluntary Contribution (AVC) made by the employee. public decimal? EmployeeAvcAmount { get; init; } Property Value decimal? EmployeeContributionFixedAmount Gets the employee's fixed contribution amount, if applicable. If supplied, overrides EmployeeContributionPercentage. public decimal? EmployeeContributionFixedAmount { get; init; } Property Value decimal? EmployeeContributionPercentage Gets the employee contribution percentage, expressed in percentage points, i.e., 5% = 5.0m. public decimal? EmployeeContributionPercentage { get; init; } Property Value decimal? EmployerContributionAmountBeforeSalaryExchange Gets the portion of the total employer-only contribution made under salary exchange that pertains to the employer's contribution. public decimal? EmployerContributionAmountBeforeSalaryExchange { get; init; } Property Value decimal? EmployerContributionPercentage Gets the employer contribution percentage, expressed in percentage points, i.e., 3% = 3.0m. public decimal EmployerContributionPercentage { get; init; } Property Value decimal EmployerNiSavingsToReinvest Gets the amount of any employer NI savings that are to be re-invested in the employee's pension, adjusted by the value of EmployersNiReinvestmentPercentage. Only applies under salary exchange. public decimal? EmployerNiSavingsToReinvest { get; init; } Property Value decimal? EmployersNiReinvestmentPercentage Gets the percentage of employer's NI saving to be re-invested into the employee's pension as an employer-only contribution, expressed in percentage points, i.e., 50% = 50.0m. Only applies under salary exchange. public decimal? EmployersNiReinvestmentPercentage { get; init; } Property Value decimal? NoPensionApplicable Gets an empty PensionContributionCalculationResult that indicates that no pension is applicable. public static IPensionContributionCalculationResult NoPensionApplicable { get; } Property Value IPensionContributionCalculationResult PensionableSalaryInPeriod Gets the pensionable salary for the period. public decimal PensionableSalaryInPeriod { get; init; } Property Value decimal SalaryExchangeApplied Gets a value indicating whether salary exchange has been applied. public bool SalaryExchangeApplied { get; init; } Property Value bool SalaryExchangedAmount Gets the amount the employee's gross salary exchanged under a salary exchange arrangement. public decimal? SalaryExchangedAmount { get; init; } Property Value decimal? TaxTreatment Gets the pension tax treatment to be applied, i.e., relief at source vs net pay arrangement. public PensionTaxTreatment TaxTreatment { get; init; } Property Value PensionTaxTreatment"
  },
  "api/Paytools.Pensions.Model.PensionScheme.html": {
    "href": "api/Paytools.Pensions.Model.PensionScheme.html",
    "title": "Class PensionScheme | Paytools",
    "keywords": "Class PensionScheme Namespace Paytools.Pensions.Model Assembly Paytools.Pensions.dll Represents a workplace pension scheme. public record PensionScheme : IPensionScheme, IEquatable<PensionScheme> Inheritance object PensionScheme Implements IPensionScheme IEquatable<PensionScheme> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EarningsBasis Gets the earnings basis for this pension scheme. public PensionsEarningsBasis EarningsBasis { get; init; } Property Value PensionsEarningsBasis TaxTreatment Gets the tax treatment for this pension scheme. public PensionTaxTreatment TaxTreatment { get; init; } Property Value PensionTaxTreatment"
  },
  "api/Paytools.Pensions.PensionablePaySetCalculator.html": {
    "href": "api/Paytools.Pensions.PensionablePaySetCalculator.html",
    "title": "Class PensionablePaySetCalculator | Paytools",
    "keywords": "Class PensionablePaySetCalculator Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Represents a pension contribution calculator for Pensionable Pay Set 1, 2 and 3. public class PensionablePaySetCalculator : PensionContributionCalculator, IPensionContributionCalculator Inheritance object PensionContributionCalculator PensionablePaySetCalculator Implements IPensionContributionCalculator Inherited Members PensionContributionCalculator.TaxReliefFactor PensionContributionCalculator.Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.GetSalaryExchangedAmount(decimal, decimal, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionablePaySetCalculator(PensionsEarningsBasis, PensionTaxTreatment, decimal?) Initialises a new instance of PensionablePaySetCalculator for the specified earnings basic and tax treatment. public PensionablePaySetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, decimal? basicRateOfTax = null) Parameters earningsBasis PensionsEarningsBasis Sepcifies the earnings basis for this calculator. Must be one of Pensionable Pay Set 1, Pensionable Pay Set 2 or Pensionable Pay Set 3. taxTreatment PensionTaxTreatment Tax treatment for the target pension, i.e., net pay arrangement vs relief at source. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Exceptions ArgumentException Thrown if an invalid earnings basis is supplied. Properties EarningsBasis Gets the earnings basis of this pension contribution calculator i.e., Qualifying Earnings vs Pensionable Pay Set X. public override PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis Methods CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected override (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount = false, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected override decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation."
  },
  "api/Paytools.Pensions.PensionContributionCalculator.html": {
    "href": "api/Paytools.Pensions.PensionContributionCalculator.html",
    "title": "Class PensionContributionCalculator | Paytools",
    "keywords": "Class PensionContributionCalculator Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Abstract class that represents different types of pension contribution calculators. public abstract class PensionContributionCalculator : IPensionContributionCalculator Inheritance object PensionContributionCalculator Implements IPensionContributionCalculator Derived PensionablePaySetCalculator QualifyingEarningsContributionsCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionContributionCalculator(PensionTaxTreatment, decimal?) Initialises a new instance of PensionContributionCalculator with the supplied tax treatment and optional basic rate of tax (needed for relief at source pensions only). public PensionContributionCalculator(PensionTaxTreatment taxTreatment, decimal? basicRateOfTax = null) Parameters taxTreatment PensionTaxTreatment Tax treatment i.e., relief at source vs net pay arrangement. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Optional. Exceptions ArgumentException Thrown if no basic rate of tax is supplied for a relief at source pension. Properties EarningsBasis Gets the earnings basis of this pension contribution calculator i.e., Qualifying Earnings vs Pensionable Pay Set X. public abstract PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis TaxReliefFactor Gets the tax relief factor to apply for relief at source pensions. For example, if the basic rate of tax is 20%, then the tax relief factor is 0.8. protected decimal TaxReliefFactor { get; } Property Value decimal Methods Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. public virtual void Calculate(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected abstract (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) Calculates the appropriate employee and employer pension contributions based on the supplied employer and employee rates, but under salary exchange arrangements. Here the output employee contribution will always be zero. Also supports the ability to supply a fixed employee contribution as an alternative to an employee percentage rate. public void CalculateUnderSalaryExchange(decimal pensionableSalary, decimal employerContributionPercentage, decimal employerNiSavings, decimal employerNiSavingsReinvestmentPercentage, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount, decimal? avcForPeriod, decimal? salaryForMaternityPurposes, out IPensionContributionCalculationResult result) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employerNiSavings decimal Savings in employer's NI due to the salary exchanged. employerNiSavingsReinvestmentPercentage decimal Percentage of employer NI savings to be reinvested in the employee's pension, expressed in percentage points (i.e., 100% = 100.0m). employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. avcForPeriod decimal? Any Additional Voluntary Contribution (AVC) on the part of the employee. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. result IPensionContributionCalculationResult An instance of a IPensionContributionCalculationResult implementation that contains the results of the calculation. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected abstract decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation. GetSalaryExchangedAmount(decimal, decimal, bool) Gets the absolute amount of employee salary exchanged, either as a result of a fixed amount being passed in, or as a percentage of pensionable salary (banded in the case of Qualifying Earnings. public decimal GetSalaryExchangedAmount(decimal pensionableSalary, decimal employeeSalaryExchanged, bool employeeSalaryExchangedIsFixedAmount) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employeeSalaryExchanged decimal The level of employee's salary forgone as set out in the salary exchange arrangements. Expressed either as a percentage in percentage points (e.g., 5% = 5.0m), or as a fixed amount, as indicated by the following parameter. NB If fixed amount is given, it relates to the pay period (as opposed to annually). employeeSalaryExchangedIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. Returns decimal Value of employee salary being exchanged."
  },
  "api/Paytools.Pensions.PensionContributionCalculatorFactory.html": {
    "href": "api/Paytools.Pensions.PensionContributionCalculatorFactory.html",
    "title": "Class PensionContributionCalculatorFactory | Paytools",
    "keywords": "Class PensionContributionCalculatorFactory Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Factory to generate IPensionContributionCalculator implementations that are for a given pay date, pay frequency, earnings basis and tax treatment. public class PensionContributionCalculatorFactory : IPensionContributionCalculatorFactory Inheritance object PensionContributionCalculatorFactory Implements IPensionContributionCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PensionContributionCalculatorFactory(IPensionsReferenceDataProvider) Initialises a new instance of PensionContributionCalculatorFactory with the supplied reference data provider. public PensionContributionCalculatorFactory(IPensionsReferenceDataProvider provider) Parameters provider IPensionsReferenceDataProvider Reference data provider for pensions. Methods GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, PayDate) Gets a new IPensionContributionCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of thresholds (Qualifying Earnings only) and rates to use, noting that these may change in-year. public IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, PayDate payDate) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). payDate PayDate Applicable pay date. Returns IPensionContributionCalculator A new calculator instance. Exceptions ArgumentException Thrown if an unsupported earnings basis is provided. GetCalculator(PensionsEarningsBasis, PensionTaxTreatment, TaxYear, PayFrequency, int) Gets a new IPensionContributionCalculator based on the specified tax year, pay frequency and pay period, along with the applicable number of tax periods. The tax year, pay frequency and pay period are provided in order to determine which set of thresholds and rates to use, noting that these may (but rarely do) change in-year. public IPensionContributionCalculator GetCalculator(PensionsEarningsBasis earningsBasis, PensionTaxTreatment taxTreatment, TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters earningsBasis PensionsEarningsBasis Earnings basis for pension calculation (Qualifying Earnings vs Pensionable Pay Set x. taxTreatment PensionTaxTreatment Tax treatment (net pay arrangement vs relief at source). taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IPensionContributionCalculator A new calculator instance. Exceptions ArgumentException Thrown if an unsupported earnings basis is provided."
  },
  "api/Paytools.Pensions.QualifyingEarningsContributionsCalculator.html": {
    "href": "api/Paytools.Pensions.QualifyingEarningsContributionsCalculator.html",
    "title": "Class QualifyingEarningsContributionsCalculator | Paytools",
    "keywords": "Class QualifyingEarningsContributionsCalculator Namespace Paytools.Pensions Assembly Paytools.Pensions.dll Represents a pension contribution calculator for Qualifying Earnings. public class QualifyingEarningsContributionsCalculator : PensionContributionCalculator, IPensionContributionCalculator Inheritance object PensionContributionCalculator QualifyingEarningsContributionsCalculator Implements IPensionContributionCalculator Inherited Members PensionContributionCalculator.TaxReliefFactor PensionContributionCalculator.Calculate(decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.CalculateUnderSalaryExchange(decimal, decimal, decimal, decimal, decimal, bool, decimal?, decimal?, out IPensionContributionCalculationResult) PensionContributionCalculator.GetSalaryExchangedAmount(decimal, decimal, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QualifyingEarningsContributionsCalculator(PensionTaxTreatment, decimal, decimal, decimal?) Initialises a new instance of QualifyingEarningsContributionsCalculator with the specified tax treatment, using the lower and upper thresholds supplied. public QualifyingEarningsContributionsCalculator(PensionTaxTreatment taxTreatment, decimal lowerLevelForQualifyingEarnings, decimal upperLevelForQualifyingEarnings, decimal? basicRateOfTax = null) Parameters taxTreatment PensionTaxTreatment Tax treatment for the target pension, i.e., net pay arrangement vs relief at source. lowerLevelForQualifyingEarnings decimal HMRC/TPR-supplied lower level for qualifying earnings. upperLevelForQualifyingEarnings decimal HMRC/TPR-supplied upper level for qualifying earnings. basicRateOfTax decimal? Basic rate of tax to use for relief at source pensions. Properties EarningsBasis Gets the earnings basis for this calculator. Always returns QualifyingEarnings. public override PensionsEarningsBasis EarningsBasis { get; } Property Value PensionsEarningsBasis Methods CalculateContributions(decimal, decimal, decimal, bool, decimal?) Abstract method signature for calculating pension contributions based on the supplied inputs. protected override (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) CalculateContributions(decimal pensionableSalary, decimal employerContributionPercentage, decimal employeeContribution, bool employeeContributionIsFixedAmount = false, decimal? salaryForMaternityPurposes = null) Parameters pensionableSalary decimal Pensionable salary to be used for calculation. employerContributionPercentage decimal Employer contribution level, expressed in percentage points (i.e., 3% = 3.0m). employeeContribution decimal Employee contribution level, either expressed in percentage points (i.e., 5% = 5.0m) or as a fixed amount (i.e. £500.00), as indicated by the following parameter. employeeContributionIsFixedAmount bool True if the previous parameter should be treated as a fixed amount; false if it should be treated as a percentage. salaryForMaternityPurposes decimal? Used to override the employer contribution when an individual is on maternity leave and should be paid employer contributions based on their contracted salary rather than their pensionable pay. Returns (decimal earningsForPensionCalculation, decimal employerContribution, decimal employeeContribution) A tuple containing the earnings used for the calculation (employee only if maternity override applies), and the employer and employee contribution levels. GetEarningsForPensionCalculation(decimal) Gets the earnings to be used for the pensionable salary calculation. For Pensionable Pay Set X, this is the same as the earnings; for QualifyingEarnings, this is the banded amount. protected override decimal GetEarningsForPensionCalculation(decimal pensionableSalary) Parameters pensionableSalary decimal Original pensionable salary. Returns decimal Earnings to be used for the pensionable salary calculation."
  },
  "api/Paytools.Pensions.ReferenceData.html": {
    "href": "api/Paytools.Pensions.ReferenceData.html",
    "title": "Namespace Paytools.Pensions.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.Pensions.ReferenceData Interfaces IPensionsReferenceDataProvider Interface that classes implement in order to provide access to pensions reference data, i.e., rates and thresholds. IPensionsReferenceDataSet Interface that classes must implement to provide access to pensions reference data, for example, lower and upper thesholds for Qualifying Earnings. IPensionsThresholdEntry Interface for types that provide access to a given set of pensions threshold values."
  },
  "api/Paytools.Pensions.ReferenceData.IPensionsReferenceDataProvider.html": {
    "href": "api/Paytools.Pensions.ReferenceData.IPensionsReferenceDataProvider.html",
    "title": "Interface IPensionsReferenceDataProvider | Paytools",
    "keywords": "Interface IPensionsReferenceDataProvider Namespace Paytools.Pensions.ReferenceData Assembly Paytools.Pensions.dll Interface that classes implement in order to provide access to pensions reference data, i.e., rates and thresholds. public interface IPensionsReferenceDataProvider Methods GetBasicRateOfTaxForTaxRelief(TaxYear, PayFrequency, int) Gets the basic rate of tax applicable across all tax regimes for relief at source pension contributions, for the specified tax year. (As at the time of writing, one basic rate of tax is used across all jurisdictions in spite of the fact that some have a lower basic rate of tax.) decimal GetBasicRateOfTaxForTaxRelief(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. Only used if there has been an in-year change. taxPeriod int Applicable tax period. Only used if there has been an in-year change. Returns decimal Basic rate of tax applicable for the tax year. GetThresholdsForQualifyingEarnings(TaxYear, PayFrequency, int) Gets the thresholds for Qualifying Earnings for the specified tax year and tax period, as denoted by the supplied pay frequency and pay period. (decimal LowerLimit, decimal UpperLimit) GetThresholdsForQualifyingEarnings(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns (decimal employeeTotal, decimal employerTotal) A tuple containing the lower and upper thresholds for the specified pay frequency and point in time."
  },
  "api/Paytools.Pensions.ReferenceData.IPensionsReferenceDataSet.html": {
    "href": "api/Paytools.Pensions.ReferenceData.IPensionsReferenceDataSet.html",
    "title": "Interface IPensionsReferenceDataSet | Paytools",
    "keywords": "Interface IPensionsReferenceDataSet Namespace Paytools.Pensions.ReferenceData Assembly Paytools.Pensions.dll Interface that classes must implement to provide access to pensions reference data, for example, lower and upper thesholds for Qualifying Earnings. public interface IPensionsReferenceDataSet Properties EarningsTriggerForAutoEnrolment Gets the earnings trigger for Auto-Enrolment for each pay frequency. IPensionsThresholdEntry EarningsTriggerForAutoEnrolment { get; } Property Value IPensionsThresholdEntry LowerLevelForQualifyingEarnings Gets the lower level for Qualifying Earnings for each pay frequency. IPensionsThresholdEntry LowerLevelForQualifyingEarnings { get; } Property Value IPensionsThresholdEntry UpperLevelForQualifyingEarnings Gets the upper level for Qualifying Earnings for each pay frequency. IPensionsThresholdEntry UpperLevelForQualifyingEarnings { get; } Property Value IPensionsThresholdEntry"
  },
  "api/Paytools.Pensions.ReferenceData.IPensionsThresholdEntry.html": {
    "href": "api/Paytools.Pensions.ReferenceData.IPensionsThresholdEntry.html",
    "title": "Interface IPensionsThresholdEntry | Paytools",
    "keywords": "Interface IPensionsThresholdEntry Namespace Paytools.Pensions.ReferenceData Assembly Paytools.Pensions.dll Interface for types that provide access to a given set of pensions threshold values. public interface IPensionsThresholdEntry Properties ThresholdValuePerFourWeeks Gets the per 4-week value of the threshold. decimal ThresholdValuePerFourWeeks { get; } Property Value decimal ThresholdValuePerHalfYear Gets the per half-year value of the threshold. decimal ThresholdValuePerHalfYear { get; } Property Value decimal ThresholdValuePerMonth Gets the per month value of the threshold. decimal ThresholdValuePerMonth { get; } Property Value decimal ThresholdValuePerQuarter Gets the per quarter value of the threshold. decimal ThresholdValuePerQuarter { get; } Property Value decimal ThresholdValuePerTwoWeeks Gets the per 2-week value of the threshold. decimal ThresholdValuePerTwoWeeks { get; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. decimal ThresholdValuePerWeek { get; } Property Value decimal ThresholdValuePerYear Gets the per annum value of the threshold. decimal ThresholdValuePerYear { get; } Property Value decimal"
  },
  "api/Paytools.ReferenceData.Calendar.CountryEntry.html": {
    "href": "api/Paytools.ReferenceData.Calendar.CountryEntry.html",
    "title": "Class CountryEntry | Paytools",
    "keywords": "Class CountryEntry Namespace Paytools.ReferenceData.Calendar Assembly Paytools.ReferenceData.dll Represents a data set of public holiday data for a specific country or countries within the UK. public class CountryEntry Inheritance object CountryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Division Gets the country division this data set applies to. [JsonPropertyName(\"division\")] public string Division { get; init; } Property Value string Events Gets a list of public holiday \"events\" as an array. [JsonPropertyName(\"events\")] public Event[] Events { get; init; } Property Value Event[]"
  },
  "api/Paytools.ReferenceData.Calendar.Event.html": {
    "href": "api/Paytools.ReferenceData.Calendar.Event.html",
    "title": "Class Event | Paytools",
    "keywords": "Class Event Namespace Paytools.ReferenceData.Calendar Assembly Paytools.ReferenceData.dll Represents a public holiday \"event\". public class Event Inheritance object Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Bunting Gets a value indicating whether \"bunting\" for this public holiday event is true or false. Who knows what this means... [JsonPropertyName(\"bunting\")] public bool Bunting { get; init; } Property Value bool Date Gets the date of this public holiday event. [JsonPropertyName(\"date\")] public DateOnly Date { get; init; } Property Value DateOnly Description Gets the description of this public holiday event. [JsonPropertyName(\"title\")] public string Description { get; init; } Property Value string Notes Gets any notes associated with this public holiday event. [JsonPropertyName(\"notes\")] public string Notes { get; init; } Property Value string"
  },
  "api/Paytools.ReferenceData.Calendar.html": {
    "href": "api/Paytools.ReferenceData.Calendar.html",
    "title": "Namespace Paytools.ReferenceData.Calendar | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.Calendar Classes CountryEntry Represents a data set of public holiday data for a specific country or countries within the UK. Event Represents a public holiday \"event\". PublicHolidaysCatalog Used to deserialise the public holiday dataset from gov.uk available at https://www.gov.uk/bank-holidays.json."
  },
  "api/Paytools.ReferenceData.Calendar.PublicHolidaysCatalog.html": {
    "href": "api/Paytools.ReferenceData.Calendar.PublicHolidaysCatalog.html",
    "title": "Class PublicHolidaysCatalog | Paytools",
    "keywords": "Class PublicHolidaysCatalog Namespace Paytools.ReferenceData.Calendar Assembly Paytools.ReferenceData.dll Used to deserialise the public holiday dataset from gov.uk available at https://www.gov.uk/bank-holidays.json. public record PublicHolidaysCatalog : IEquatable<PublicHolidaysCatalog> Inheritance object PublicHolidaysCatalog Implements IEquatable<PublicHolidaysCatalog> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglandAndWales Gets the public holiday information for England and Wales. [JsonPropertyName(\"england-and-wales\")] public CountryEntry EnglandAndWales { get; init; } Property Value CountryEntry NorthernIreland Gets the public holiday information for Scotland. [JsonPropertyName(\"northern-ireland\")] public CountryEntry NorthernIreland { get; init; } Property Value CountryEntry Scotland Gets the public holiday information for Scotland. [JsonPropertyName(\"scotland\")] public CountryEntry Scotland { get; init; } Property Value CountryEntry"
  },
  "api/Paytools.ReferenceData.HmrcReferenceDataProviderFactory.html": {
    "href": "api/Paytools.ReferenceData.HmrcReferenceDataProviderFactory.html",
    "title": "Class HmrcReferenceDataProviderFactory | Paytools",
    "keywords": "Class HmrcReferenceDataProviderFactory Namespace Paytools.ReferenceData Assembly Paytools.ReferenceData.dll Factory class that is used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. public class HmrcReferenceDataProviderFactory : IHmrcReferenceDataProviderFactory Inheritance object HmrcReferenceDataProviderFactory Implements IHmrcReferenceDataProviderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HmrcReferenceDataProviderFactory(ILogger<HmrcReferenceDataProviderFactory>?) Initialises a new instance of HmrcReferenceDataProviderFactory for use with Streams; do not use this constructor if accessing HMRC reference data over HTTP(S) is required. public HmrcReferenceDataProviderFactory(ILogger<HmrcReferenceDataProviderFactory>? logger = null) Parameters logger ILogger<HmrcReferenceDataProviderFactory> An implementation of ILogger<TCategoryName> used for logging. HmrcReferenceDataProviderFactory(IHttpClientFactory, ILogger<HmrcReferenceDataProviderFactory>?) Initialises a new instance of HmrcReferenceDataProviderFactory. An IHttpClientFactory is required to provide HttpClient instances to retrieve the reference data from the cloud. public HmrcReferenceDataProviderFactory(IHttpClientFactory httpClientFactory, ILogger<HmrcReferenceDataProviderFactory>? logger = null) Parameters httpClientFactory IHttpClientFactory Implementation of IHttpClientFactory. logger ILogger<HmrcReferenceDataProviderFactory> An implementation of ILogger<TCategoryName> used for logging. Methods CreateProviderAsync(Stream[]) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data loaded from an array of streams. public Task<IHmrcReferenceDataProvider> CreateProviderAsync(Stream[] referenceDataStreams) Parameters referenceDataStreams Stream[] Array of data streams to load HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to load reference data from the supplied set of streams. CreateProviderAsync(Uri) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data returned from an HTTP(S) endpoint. public Task<IHmrcReferenceDataProvider> CreateProviderAsync(Uri referenceDataEndpoint) Parameters referenceDataEndpoint Uri The HTTP(S) endpoint to retrieve HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to retrieve reference data from the supplied endpoint. InvalidOperationException Thrown if this factory was created without a valid IHttpClientFactory instance."
  },
  "api/Paytools.ReferenceData.HmrcTaxYearReferenceDataSet.html": {
    "href": "api/Paytools.ReferenceData.HmrcTaxYearReferenceDataSet.html",
    "title": "Class HmrcTaxYearReferenceDataSet | Paytools",
    "keywords": "Class HmrcTaxYearReferenceDataSet Namespace Paytools.ReferenceData Assembly Paytools.ReferenceData.dll Data structure used to represent HMRC reference data for a given tax year. public class HmrcTaxYearReferenceDataSet Inheritance object HmrcTaxYearReferenceDataSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableTaxYearEnding Gets the tax year to which this data set applies. public TaxYearEnding ApplicableTaxYearEnding { get; init; } Property Value TaxYearEnding IncomeTax Gets a set of IncomeTaxReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<IncomeTaxReferenceDataEntry> IncomeTax { get; init; } Property Value List<IncomeTaxReferenceDataEntry> LatestUpdateTimestamp Gets the latest update timestamp for this data set. public DateTime LatestUpdateTimestamp { get; init; } Property Value DateTime NationalInsurance Gets a set of NiReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<NiReferenceDataEntry> NationalInsurance { get; init; } Property Value List<NiReferenceDataEntry> NationalMinimumWage Gets a set of NmwReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<NmwReferenceDataEntry> NationalMinimumWage { get; init; } Property Value List<NmwReferenceDataEntry> Pensions Gets a set of PensionsReferenceDataSets, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<PensionsReferenceDataSet> Pensions { get; init; } Property Value List<PensionsReferenceDataSet> StudentLoans Gets a set of StudentLoanReferenceDataEntrys, each entry applicable to a portion of the tax year. Where the same regime applies across the entire tax year, this set contains only one entry. public List<StudentLoanReferenceDataEntry> StudentLoans { get; init; } Property Value List<StudentLoanReferenceDataEntry> Version Gets the version of this data set. Every time the data set is updated centrally, the version number is incremented. public string Version { get; init; } Property Value string"
  },
  "api/Paytools.ReferenceData.html": {
    "href": "api/Paytools.ReferenceData.html",
    "title": "Namespace Paytools.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.ReferenceData Paytools.ReferenceData.Calendar Paytools.ReferenceData.IncomeTax Paytools.ReferenceData.NationalInsurance Paytools.ReferenceData.NationalMinimumWage Paytools.ReferenceData.Pensions Paytools.ReferenceData.Serialization Paytools.ReferenceData.StudentLoans Classes HmrcReferenceDataProviderFactory Factory class that is used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. HmrcTaxYearReferenceDataSet Data structure used to represent HMRC reference data for a given tax year. Interfaces IHmrcReferenceDataProvider Interface that HMRC reference data providers must implement. IHmrcReferenceDataProviderFactory Interface for factory classes that are used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider."
  },
  "api/Paytools.ReferenceData.IHmrcReferenceDataProvider.html": {
    "href": "api/Paytools.ReferenceData.IHmrcReferenceDataProvider.html",
    "title": "Interface IHmrcReferenceDataProvider | Paytools",
    "keywords": "Interface IHmrcReferenceDataProvider Namespace Paytools.ReferenceData Assembly Paytools.ReferenceData.dll Interface that HMRC reference data providers must implement. public interface IHmrcReferenceDataProvider : ITaxReferenceDataProvider, INiReferenceDataProvider, IPensionsReferenceDataProvider, INmwReferenceDataProvider, IStudentLoanReferenceDataProvider Inherited Members ITaxReferenceDataProvider.GetTaxBandsForTaxYearAndPeriod(TaxYear, PayFrequency, int) INiReferenceDataProvider.GetNiThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) INiReferenceDataProvider.GetNiRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) INiReferenceDataProvider.GetDirectorsNiRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) IPensionsReferenceDataProvider.GetThresholdsForQualifyingEarnings(TaxYear, PayFrequency, int) IPensionsReferenceDataProvider.GetBasicRateOfTaxForTaxRelief(TaxYear, PayFrequency, int) INmwReferenceDataProvider.GetNmwLevelsForTaxYearAndPeriod(TaxYear, PayFrequency, int) IStudentLoanReferenceDataProvider.GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) IStudentLoanReferenceDataProvider.GetStudentLoanRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Properties Health Gets the human-readable 'health' of this reference data provider. string Health { get; } Property Value string"
  },
  "api/Paytools.ReferenceData.IHmrcReferenceDataProviderFactory.html": {
    "href": "api/Paytools.ReferenceData.IHmrcReferenceDataProviderFactory.html",
    "title": "Interface IHmrcReferenceDataProviderFactory | Paytools",
    "keywords": "Interface IHmrcReferenceDataProviderFactory Namespace Paytools.ReferenceData Assembly Paytools.ReferenceData.dll Interface for factory classes that are used to create new HMRC reference data providers that implement IHmrcReferenceDataProvider. public interface IHmrcReferenceDataProviderFactory Remarks If the CreateProviderAsync method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Methods CreateProviderAsync(Stream[]) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data loaded from an array of streams. Task<IHmrcReferenceDataProvider> CreateProviderAsync(Stream[] referenceDataStreams) Parameters referenceDataStreams Stream[] Array of data streams to load HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. CreateProviderAsync(Uri) Creates a new HMRC reference data that implements IHmrcReferenceDataProvider using reference data returned from an HTTP(S) endpoint. Task<IHmrcReferenceDataProvider> CreateProviderAsync(Uri referenceDataEndpoint) Parameters referenceDataEndpoint Uri The HTTP(S) endpoint to retrieve HMRC reference data from. Returns Task<IHmrcReferenceDataProvider> An instance of a type that implements IHmrcReferenceDataProvider. Remarks If the method completes successfully, the Health property of the created IHmrcReferenceDataProvider provides human-readable information on the status of each tax year loaded. Exceptions InvalidReferenceDataException Thrown if it was not possible to retrieve reference data from the supplied endpoint. InvalidOperationException Thrown if this factory was created without a valid IHttpClientFactory instance."
  },
  "api/Paytools.ReferenceData.IncomeTax.html": {
    "href": "api/Paytools.ReferenceData.IncomeTax.html",
    "title": "Namespace Paytools.ReferenceData.IncomeTax | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.IncomeTax Classes IncomeTaxBandEntry Record that represents a set of tax bands for a given tax regime (as specified by the ApplicableCountries property). IncomeTaxDeductionBand Record that details a single tax band for a given tax regime. IncomeTaxReferenceDataEntry Represents a set of tax bands for a given tax regime for a period, typically a full tax year. Structs PersonalAllowance Represents a given personal allowance value for a specific pay frequency."
  },
  "api/Paytools.ReferenceData.IncomeTax.IncomeTaxBandEntry.html": {
    "href": "api/Paytools.ReferenceData.IncomeTax.IncomeTaxBandEntry.html",
    "title": "Class IncomeTaxBandEntry | Paytools",
    "keywords": "Class IncomeTaxBandEntry Namespace Paytools.ReferenceData.IncomeTax Assembly Paytools.ReferenceData.dll Record that represents a set of tax bands for a given tax regime (as specified by the ApplicableCountries property). public record IncomeTaxBandEntry : IEquatable<IncomeTaxBandEntry> Inheritance object IncomeTaxBandEntry Implements IEquatable<IncomeTaxBandEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableCountries Gets the set of countries within the UK that this set of tax bands refer to. public CountriesForTaxPurposes ApplicableCountries { get; init; } Property Value CountriesForTaxPurposes PersonalAllowances Gets the set of personal allowances applicable to this tax regime. public ImmutableArray<PersonalAllowance> PersonalAllowances { get; init; } Property Value ImmutableArray<PersonalAllowance> TaxBands Gets the set of tax bands applicable. public ImmutableArray<IncomeTaxDeductionBand> TaxBands { get; init; } Property Value ImmutableArray<IncomeTaxDeductionBand> Methods GetTaxBandwidthEntries() Gets an array of TaxBandwidthEntrys that correspond to the elements of the TaxBands property. public TaxBandwidthEntry[] GetTaxBandwidthEntries() Returns TaxBandwidthEntry[] Tax bandwidth entries as an array of TaxBandwidthEntrys."
  },
  "api/Paytools.ReferenceData.IncomeTax.IncomeTaxDeductionBand.html": {
    "href": "api/Paytools.ReferenceData.IncomeTax.IncomeTaxDeductionBand.html",
    "title": "Class IncomeTaxDeductionBand | Paytools",
    "keywords": "Class IncomeTaxDeductionBand Namespace Paytools.ReferenceData.IncomeTax Assembly Paytools.ReferenceData.dll Record that details a single tax band for a given tax regime. public record IncomeTaxDeductionBand : IEquatable<IncomeTaxDeductionBand> Inheritance object IncomeTaxDeductionBand Implements IEquatable<IncomeTaxDeductionBand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Gets the description of this tax band. public string Description { get; init; } Property Value string From Gets the taxable earnings threshold from which this tax band applies. public decimal? From { get; init; } Property Value decimal? IsBottomRate Gets a value indicating whether this band refers to the bottom rate of tax. public bool IsBottomRate { get; } Property Value bool IsTopRate Gets a value indicating whether this band refers to the top rate of tax. public bool IsTopRate { get; } Property Value bool Rate Gets the applicable tax rate. NB Tax rates are normally expressed as percentages; values here are fractional i.e., 20% = 0.2m. public decimal Rate { get; init; } Property Value decimal To Gets the taxable earnings threshold up to which this tax band applies. public decimal? To { get; init; } Property Value decimal?"
  },
  "api/Paytools.ReferenceData.IncomeTax.IncomeTaxReferenceDataEntry.html": {
    "href": "api/Paytools.ReferenceData.IncomeTax.IncomeTaxReferenceDataEntry.html",
    "title": "Class IncomeTaxReferenceDataEntry | Paytools",
    "keywords": "Class IncomeTaxReferenceDataEntry Namespace Paytools.ReferenceData.IncomeTax Assembly Paytools.ReferenceData.dll Represents a set of tax bands for a given tax regime for a period, typically a full tax year. public record IncomeTaxReferenceDataEntry : IApplicableFromTill, IEquatable<IncomeTaxReferenceDataEntry> Inheritance object IncomeTaxReferenceDataEntry Implements IApplicableFromTill IEquatable<IncomeTaxReferenceDataEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly TaxEntries Gets a read-only list of applicable tax bands. public ImmutableList<IncomeTaxBandEntry> TaxEntries { get; init; } Property Value ImmutableList<IncomeTaxBandEntry>"
  },
  "api/Paytools.ReferenceData.IncomeTax.PersonalAllowance.html": {
    "href": "api/Paytools.ReferenceData.IncomeTax.PersonalAllowance.html",
    "title": "Struct PersonalAllowance | Paytools",
    "keywords": "Struct PersonalAllowance Namespace Paytools.ReferenceData.IncomeTax Assembly Paytools.ReferenceData.dll Represents a given personal allowance value for a specific pay frequency. public readonly struct PersonalAllowance Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties PayFrequency Gets the pay frequency applicable to this personal allowance value. public PayFrequency PayFrequency { get; init; } Property Value PayFrequency Value Gets the personal allowance value for this pay frequency. public decimal Value { get; init; } Property Value decimal"
  },
  "api/Paytools.ReferenceData.NationalInsurance.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.html",
    "title": "Namespace Paytools.ReferenceData.NationalInsurance | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.NationalInsurance Classes NiCategoryRatesEntry Represents a set of National Insurance rates applicable to a specific NI category. NiCategoryRateSet Represents a set of National Insurance rates across all NI categories. Each NI category specifies its own set rate of rates across the various NI thresholds. NiEmployeeRatesEntry Record that represents the employee NI rates to be applied at various earnings thresholds. NiEmployerRatesEntry Record that represents the employee NI rates to be applied at various earnings thresholds. NiReferenceDataEntry Represents a set of Ni thresholds and rates for a period; where there have been in-year changes, then there may be several such entries for a given tax year. NiReferenceDataThresholdEntry Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only."
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiCategoryRatesEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiCategoryRatesEntry.html",
    "title": "Class NiCategoryRatesEntry | Paytools",
    "keywords": "Class NiCategoryRatesEntry Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Represents a set of National Insurance rates applicable to a specific NI category. public record NiCategoryRatesEntry : INiCategoryRatesEntry, IEquatable<NiCategoryRatesEntry> Inheritance object NiCategoryRatesEntry Implements INiCategoryRatesEntry IEquatable<NiCategoryRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NiCategoryRatesEntry(NiCategory) Initialises a new instance of NiCategoryRatesEntry for the specified NI category. public NiCategoryRatesEntry(NiCategory category) Parameters category NiCategory NI category for this NiCategoryRatesEntry. Properties Category Gets the applicable National Insurance Category. public NiCategory Category { get; } Property Value NiCategory EmployeeRateAboveUEL Gets or sets the employee rate for balance of earnings above upper earnings limit. public decimal EmployeeRateAboveUEL { get; set; } Property Value decimal EmployeeRatePTToUEL Gets or sets the employee rate for earnings above the primary threshold up to and including upper earnings limit. public decimal EmployeeRatePTToUEL { get; set; } Property Value decimal EmployeeRateToPT Gets or sets the employee rate for earnings at or above lower earnings limit up to and including primary threshold. public decimal EmployeeRateToPT { get; set; } Property Value decimal EmployerRateAboveUEL Gets or sets the employer rate for balance of earnings above upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. public decimal EmployerRateAboveUEL { get; set; } Property Value decimal EmployerRateFUSTtoUEL Gets or sets the employer rate for earnings above Freeport upper secondary threshold up to and including upper earnings limit, upper secondary thresholds for under 21s, apprentices and veterans. public decimal EmployerRateFUSTtoUEL { get; set; } Property Value decimal EmployerRateLELtoST Gets or sets the employer rate for earnings at or above lower earnings limit up to and including secondary threshold,. public decimal EmployerRateLELtoST { get; set; } Property Value decimal EmployerRateSTtoFUST Gets or sets the employer rate for earnings above secondary threshold up to and including Freeport upper secondary threshold. public decimal EmployerRateSTtoFUST { get; set; } Property Value decimal Methods ToString() Gets a string representation of this NiCategoryRatesEntry. public override string ToString() Returns string String representation of this instance."
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiCategoryRateSet.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiCategoryRateSet.html",
    "title": "Class NiCategoryRateSet | Paytools",
    "keywords": "Class NiCategoryRateSet Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Represents a set of National Insurance rates across all NI categories. Each NI category specifies its own set rate of rates across the various NI thresholds. public record NiCategoryRateSet : IEquatable<NiCategoryRateSet> Inheritance object NiCategoryRateSet Implements IEquatable<NiCategoryRateSet> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NiCategoryRateSet() Initialises a new instance of NiCategoryRateSet. public NiCategoryRateSet() Methods GetRatesForCategory(NiCategory) Gets the set of NI rates applicable to the specified NiCategory. public INiCategoryRatesEntry GetRatesForCategory(NiCategory category) Parameters category NiCategory NI category to retrieve the applicable rates for. Returns INiCategoryRatesEntry Set of rates applicable to the specified NI category."
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiEmployeeRatesEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiEmployeeRatesEntry.html",
    "title": "Class NiEmployeeRatesEntry | Paytools",
    "keywords": "Class NiEmployeeRatesEntry Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Record that represents the employee NI rates to be applied at various earnings thresholds. public record NiEmployeeRatesEntry : IEquatable<NiEmployeeRatesEntry> Inheritance object NiEmployeeRatesEntry Implements IEquatable<NiEmployeeRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ForEarningsAbovePTUpToAndIncludingUEL Gets the employee rate applicable for earnings between the Primary Threshold and the Upper Earnings Limit. public decimal ForEarningsAbovePTUpToAndIncludingUEL { get; init; } Property Value decimal ForEarningsAboveUEL Gets the employee rate applicable for earnings above the Upper Earnings Limit. public decimal ForEarningsAboveUEL { get; init; } Property Value decimal ForEarningsAtOrAboveLELUpTAndIncludingPT Gets the employee rate applicable for earnings between the Lower Earnings Limit and the Primary Threshold. public decimal ForEarningsAtOrAboveLELUpTAndIncludingPT { get; init; } Property Value decimal NiCategories Gets the list of applicable NI categories for this rates entry. public ImmutableList<NiCategory> NiCategories { get; init; } Property Value ImmutableList<NiCategory>"
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiEmployerRatesEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiEmployerRatesEntry.html",
    "title": "Class NiEmployerRatesEntry | Paytools",
    "keywords": "Class NiEmployerRatesEntry Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Record that represents the employee NI rates to be applied at various earnings thresholds. public record NiEmployerRatesEntry : IEquatable<NiEmployerRatesEntry> Inheritance object NiEmployerRatesEntry Implements IEquatable<NiEmployerRatesEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ForEarningsAboveFUSTUpToAndIncludingUELOrUST Gets the employer rate applicable for earnings between the Freeport Upper Secondary Threshold and the Upper Earnings Limit or any applicable Upper Secondary Threshold. public decimal ForEarningsAboveFUSTUpToAndIncludingUELOrUST { get; init; } Property Value decimal ForEarningsAboveSTUpToAndIncludingFUST Gets the employer rate applicable for earnings between the Secondary Threshold and the Freeport Upper Secondary Threshold. public decimal ForEarningsAboveSTUpToAndIncludingFUST { get; init; } Property Value decimal ForEarningsAboveUELOrUST Gets the employer rate applicable for earnings above the Upper Earnings Limit. public decimal ForEarningsAboveUELOrUST { get; init; } Property Value decimal ForEarningsAtOrAboveLELUpToAndIncludingST Gets the employer rate applicable for earnings between the Lower Earnings Limit and the Secondary Threshold. public decimal ForEarningsAtOrAboveLELUpToAndIncludingST { get; init; } Property Value decimal NiCategories Gets the list of applicable NI categories for this rates entry. public ImmutableList<NiCategory> NiCategories { get; init; } Property Value ImmutableList<NiCategory>"
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiReferenceDataEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiReferenceDataEntry.html",
    "title": "Class NiReferenceDataEntry | Paytools",
    "keywords": "Class NiReferenceDataEntry Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Represents a set of Ni thresholds and rates for a period; where there have been in-year changes, then there may be several such entries for a given tax year. public class NiReferenceDataEntry : IApplicableFromTill Inheritance object NiReferenceDataEntry Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly BasicRateOfTaxForTaxRelief Gets the basic rate of tax to be applied for tax relief on employee pension contributions for relief at source pensions. public decimal BasicRateOfTaxForTaxRelief { get; init; } Property Value decimal DirectorEmployeeRates Gets applicable employee NI rates for directors. Only applicable when there has been an in-year change to National Insurance rates. public ImmutableList<NiEmployeeRatesEntry>? DirectorEmployeeRates { get; init; } Property Value ImmutableList<NiEmployeeRatesEntry> DirectorEmployerRates Gets applicable employer NI rates for directors. Only applicable when there has been an in-year change to National Insurance rates. public ImmutableList<NiEmployerRatesEntry>? DirectorEmployerRates { get; init; } Property Value ImmutableList<NiEmployerRatesEntry> EmployeeRates Gets applicable NI rates for employees. public ImmutableList<NiEmployeeRatesEntry> EmployeeRates { get; init; } Property Value ImmutableList<NiEmployeeRatesEntry> EmployerRates Gets applicable NI rates for employees. public ImmutableList<NiEmployerRatesEntry> EmployerRates { get; init; } Property Value ImmutableList<NiEmployerRatesEntry> NiThresholds Gets a read-only list of applicable NI thresholds. public ImmutableList<NiReferenceDataThresholdEntry> NiThresholds { get; init; } Property Value ImmutableList<NiReferenceDataThresholdEntry>"
  },
  "api/Paytools.ReferenceData.NationalInsurance.NiReferenceDataThresholdEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalInsurance.NiReferenceDataThresholdEntry.html",
    "title": "Class NiReferenceDataThresholdEntry | Paytools",
    "keywords": "Class NiReferenceDataThresholdEntry Namespace Paytools.ReferenceData.NationalInsurance Assembly Paytools.ReferenceData.dll Record that represents a given National Insurance threshold across various pay frequencies. Note that HMRC guidance is that only the annual threshold should be used for calculations; weekly and monthly thresholds are given for information only. public record NiReferenceDataThresholdEntry : INiThresholdEntry, IEquatable<NiReferenceDataThresholdEntry> Inheritance object NiReferenceDataThresholdEntry Implements INiThresholdEntry IEquatable<NiReferenceDataThresholdEntry> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ThresholdType Gets the applicable threshold's name. This name is mapped to the relevant NiThresholdType as part of the deserialisation process. [JsonPropertyName(\"thresholdName\")] public NiThresholdType ThresholdType { get; init; } Property Value NiThresholdType ThresholdValuePerMonth Gets the per month value of the threshold. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per year value of the threshold. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal"
  },
  "api/Paytools.ReferenceData.NationalMinimumWage.html": {
    "href": "api/Paytools.ReferenceData.NationalMinimumWage.html",
    "title": "Namespace Paytools.ReferenceData.NationalMinimumWage | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.NationalMinimumWage Classes NmwReferenceDataEntry Represents the set of NMW/NLW levels for a given tax year (and potentially pay frequency/pay period combination."
  },
  "api/Paytools.ReferenceData.NationalMinimumWage.NmwReferenceDataEntry.html": {
    "href": "api/Paytools.ReferenceData.NationalMinimumWage.NmwReferenceDataEntry.html",
    "title": "Class NmwReferenceDataEntry | Paytools",
    "keywords": "Class NmwReferenceDataEntry Namespace Paytools.ReferenceData.NationalMinimumWage Assembly Paytools.ReferenceData.dll Represents the set of NMW/NLW levels for a given tax year (and potentially pay frequency/pay period combination. public class NmwReferenceDataEntry : INmwLevelSet, IApplicableFromTill Inheritance object NmwReferenceDataEntry Implements INmwLevelSet IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Age18To20Level Gets the NMW level for employees aged between 18 and 20. public decimal Age18To20Level { get; init; } Property Value decimal Age21To22Level Gets the NMW level for employees aged between 21 and 22. public decimal Age21To22Level { get; init; } Property Value decimal Age23AndAboveLevel Gets the NLW (rather than NMW) level for employees aged 23 and over. public decimal Age23AndAboveLevel { get; init; } Property Value decimal ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly ApprenticeLevel Gets the NMW level for apprentices under 19 or apprentices aged 19 and over in the first year of their apprenticeship. public decimal ApprenticeLevel { get; init; } Property Value decimal Under18Level Gets the NMW level for employees under the age of 18 (but over the school leaving age). public decimal Under18Level { get; init; } Property Value decimal"
  },
  "api/Paytools.ReferenceData.Pensions.html": {
    "href": "api/Paytools.ReferenceData.Pensions.html",
    "title": "Namespace Paytools.ReferenceData.Pensions | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.Pensions Classes PensionsReferenceDataSet Represents the reference data for pensions for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. Structs PensionsThresholdEntry Represents a given set of pensions threshold values."
  },
  "api/Paytools.ReferenceData.Pensions.PensionsReferenceDataSet.html": {
    "href": "api/Paytools.ReferenceData.Pensions.PensionsReferenceDataSet.html",
    "title": "Class PensionsReferenceDataSet | Paytools",
    "keywords": "Class PensionsReferenceDataSet Namespace Paytools.ReferenceData.Pensions Assembly Paytools.ReferenceData.dll Represents the reference data for pensions for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. public class PensionsReferenceDataSet : IApplicableFromTill Inheritance object PensionsReferenceDataSet Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AeEarningsTrigger Gets the set of earnings triggers for Automatic Enrolment (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry AeEarningsTrigger { get; init; } Property Value PensionsThresholdEntry ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly BasicRateOfTaxForTaxRelief Gets the basic rate of tax applicable across all tax regimes for relief at source pension contributions, for the specified tax year. (As at the time of writing, one basic rate of tax is used across all jurisdictions in spite of the fact that some have a lower basic rate of tax.) public decimal BasicRateOfTaxForTaxRelief { get; init; } Property Value decimal QualifyingEarningsLowerLevel Gets the lower set of earnings thresholds for Qualifying Earnings (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry QualifyingEarningsLowerLevel { get; init; } Property Value PensionsThresholdEntry QualifyingEarningsUpperLevel Gets the upper set of earnings thresholds for Qualifying Earnings (i.e., per week, per 2-weeks, etc.). public PensionsThresholdEntry QualifyingEarningsUpperLevel { get; init; } Property Value PensionsThresholdEntry"
  },
  "api/Paytools.ReferenceData.Pensions.PensionsThresholdEntry.html": {
    "href": "api/Paytools.ReferenceData.Pensions.PensionsThresholdEntry.html",
    "title": "Struct PensionsThresholdEntry | Paytools",
    "keywords": "Struct PensionsThresholdEntry Namespace Paytools.ReferenceData.Pensions Assembly Paytools.ReferenceData.dll Represents a given set of pensions threshold values. public readonly struct PensionsThresholdEntry : IPensionsThresholdEntry Implements IPensionsThresholdEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ThresholdValuePerFourWeeks Gets the per 4-week value of the threshold. [JsonPropertyName(\"perFourWeeks\")] public decimal ThresholdValuePerFourWeeks { get; init; } Property Value decimal ThresholdValuePerHalfYear Gets the per half-year value of the threshold. [JsonPropertyName(\"perHalfYear\")] public decimal ThresholdValuePerHalfYear { get; init; } Property Value decimal ThresholdValuePerMonth Gets the per month value of the threshold. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerQuarter Gets the per quarter value of the threshold. [JsonPropertyName(\"perQuarter\")] public decimal ThresholdValuePerQuarter { get; init; } Property Value decimal ThresholdValuePerTwoWeeks Gets the per 2-week value of the threshold. [JsonPropertyName(\"perTwoWeeks\")] public decimal ThresholdValuePerTwoWeeks { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week value of the threshold. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per annum value of the threshold. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal Methods GetThresholdForPayFrequency(PayFrequency) Gets the applicable threshold value for the supplied pay frequency. public decimal GetThresholdForPayFrequency(PayFrequency payFrequency) Parameters payFrequency PayFrequency Applicable pay frequency. Returns decimal Applicable threshold value for the supplied pay frequency."
  },
  "api/Paytools.ReferenceData.Serialization.html": {
    "href": "api/Paytools.ReferenceData.Serialization.html",
    "title": "Namespace Paytools.ReferenceData.Serialization | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.Serialization Classes NiCategoryJsonTypeConverter JSON Converter for the NiCategory enumeration. NiThresholdTypeJsonConverter JSON Converter for instances of NiThresholdType types."
  },
  "api/Paytools.ReferenceData.Serialization.NiCategoryJsonTypeConverter.html": {
    "href": "api/Paytools.ReferenceData.Serialization.NiCategoryJsonTypeConverter.html",
    "title": "Class NiCategoryJsonTypeConverter | Paytools",
    "keywords": "Class NiCategoryJsonTypeConverter Namespace Paytools.ReferenceData.Serialization Assembly Paytools.ReferenceData.dll JSON Converter for the NiCategory enumeration. public class NiCategoryJsonTypeConverter : JsonConverter<NiCategory> Inheritance object JsonConverter JsonConverter<NiCategory> NiCategoryJsonTypeConverter Inherited Members JsonConverter<NiCategory>.CanConvert(Type) JsonConverter<NiCategory>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<NiCategory>.WriteAsPropertyName(Utf8JsonWriter, NiCategory, JsonSerializerOptions) JsonConverter<NiCategory>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a NiCategory enumerated value in string format and converts to the appropriate enum value. public override NiCategory Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns NiCategory PayFrequency value. Write(Utf8JsonWriter, NiCategory, JsonSerializerOptions) Writes a NiCategory enum value, converted to its string equivalent, to the JSON stream. public override void Write(Utf8JsonWriter writer, NiCategory value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value NiCategory Enum value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.ReferenceData.Serialization.NiThresholdTypeJsonConverter.html": {
    "href": "api/Paytools.ReferenceData.Serialization.NiThresholdTypeJsonConverter.html",
    "title": "Class NiThresholdTypeJsonConverter | Paytools",
    "keywords": "Class NiThresholdTypeJsonConverter Namespace Paytools.ReferenceData.Serialization Assembly Paytools.ReferenceData.dll JSON Converter for instances of NiThresholdType types. public class NiThresholdTypeJsonConverter : JsonConverter<NiThresholdType> Inheritance object JsonConverter JsonConverter<NiThresholdType> NiThresholdTypeJsonConverter Inherited Members JsonConverter<NiThresholdType>.CanConvert(Type) JsonConverter<NiThresholdType>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<NiThresholdType>.WriteAsPropertyName(Utf8JsonWriter, NiThresholdType, JsonSerializerOptions) JsonConverter<NiThresholdType>.HandleNull object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads a National Insurance threshold element in string format and converts to the appropriate NiThresholdType value. public override NiThresholdType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader JSON reader (UTF-8 format). typeToConvert Type Type to convert (unused). options JsonSerializerOptions JSON serializer options (unused). Returns NiThresholdType NiThresholdType value. Write(Utf8JsonWriter, NiThresholdType, JsonSerializerOptions) Writes a NiThresholdType value to the JSON stream in long form string format, e.g., \"Lower Earnings Limit\". public override void Write(Utf8JsonWriter writer, NiThresholdType value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter JSON writer (UTF-8 format). value NiThresholdType NiThresholdType value to convert. options JsonSerializerOptions JSON serializer options (unused)."
  },
  "api/Paytools.ReferenceData.StudentLoans.html": {
    "href": "api/Paytools.ReferenceData.StudentLoans.html",
    "title": "Namespace Paytools.ReferenceData.StudentLoans | Paytools",
    "keywords": "Namespace Paytools.ReferenceData.StudentLoans Classes StudentLoanReferenceDataEntry Represents the reference data for student loans for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. Structs StudentLoanRatesSet Represents the set of deduction rates to be applied for student and post-graduate loans. StudentLoanThresholdsEntry Represents a set of student loan thresholds, expressed per week, per month and per year."
  },
  "api/Paytools.ReferenceData.StudentLoans.StudentLoanRatesSet.html": {
    "href": "api/Paytools.ReferenceData.StudentLoans.StudentLoanRatesSet.html",
    "title": "Struct StudentLoanRatesSet | Paytools",
    "keywords": "Struct StudentLoanRatesSet Namespace Paytools.ReferenceData.StudentLoans Assembly Paytools.ReferenceData.dll Represents the set of deduction rates to be applied for student and post-graduate loans. public readonly struct StudentLoanRatesSet : IStudentLoanRateSet Implements IStudentLoanRateSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties PostGrad Gets the deduction rate for post-graduate student loan deductions. public decimal PostGrad { get; init; } Property Value decimal Student Gets the deduction rate for Plan 1, 2 and 4 student loan deductions. public decimal Student { get; init; } Property Value decimal"
  },
  "api/Paytools.ReferenceData.StudentLoans.StudentLoanReferenceDataEntry.html": {
    "href": "api/Paytools.ReferenceData.StudentLoans.StudentLoanReferenceDataEntry.html",
    "title": "Class StudentLoanReferenceDataEntry | Paytools",
    "keywords": "Class StudentLoanReferenceDataEntry Namespace Paytools.ReferenceData.StudentLoans Assembly Paytools.ReferenceData.dll Represents the reference data for student loans for a period; where there have been in-year changes, then there may be several such entries for a given tax year, although this is very uncommon. public class StudentLoanReferenceDataEntry : IApplicableFromTill Inheritance object StudentLoanReferenceDataEntry Implements IApplicableFromTill Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicableFrom Gets the start date (i.e., the first full day) for applicability. public DateOnly ApplicableFrom { get; init; } Property Value DateOnly ApplicableTill Gets the end date (i.e., the last full day) for applicability. public DateOnly ApplicableTill { get; init; } Property Value DateOnly DeductionRates Gets the set of rates to be used for student and post-graduate loan deductions. public StudentLoanRatesSet DeductionRates { get; init; } Property Value StudentLoanRatesSet Plan1Thresholds Gets the weekly, monthly and annual threshold for Plan 1 student loan deductions. public StudentLoanThresholdsEntry Plan1Thresholds { get; init; } Property Value StudentLoanThresholdsEntry Plan2Thresholds Gets the weekly, monthly and annual threshold for Plan 2 student loan deductions. public StudentLoanThresholdsEntry Plan2Thresholds { get; init; } Property Value StudentLoanThresholdsEntry Plan4Thresholds Gets the weekly, monthly and annual threshold for Plan 4 student loan deductions. public StudentLoanThresholdsEntry Plan4Thresholds { get; init; } Property Value StudentLoanThresholdsEntry PostGradThresholds Gets the weekly, monthly and annual threshold for post-graduate student loan deductions. public StudentLoanThresholdsEntry PostGradThresholds { get; init; } Property Value StudentLoanThresholdsEntry"
  },
  "api/Paytools.ReferenceData.StudentLoans.StudentLoanThresholdsEntry.html": {
    "href": "api/Paytools.ReferenceData.StudentLoans.StudentLoanThresholdsEntry.html",
    "title": "Struct StudentLoanThresholdsEntry | Paytools",
    "keywords": "Struct StudentLoanThresholdsEntry Namespace Paytools.ReferenceData.StudentLoans Assembly Paytools.ReferenceData.dll Represents a set of student loan thresholds, expressed per week, per month and per year. public readonly struct StudentLoanThresholdsEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ThresholdValuePerMonth Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perMonth\")] public decimal ThresholdValuePerMonth { get; init; } Property Value decimal ThresholdValuePerWeek Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perWeek\")] public decimal ThresholdValuePerWeek { get; init; } Property Value decimal ThresholdValuePerYear Gets the per week threshold for student or post-grad loan deductions. [JsonPropertyName(\"perYear\")] public decimal ThresholdValuePerYear { get; init; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.html": {
    "href": "api/Paytools.StudentLoans.html",
    "title": "Namespace Paytools.StudentLoans | Paytools",
    "keywords": "Namespace Paytools.StudentLoans Paytools.StudentLoans.Model Paytools.StudentLoans.ReferenceData Classes StudentLoanCalculator Represents a student loan calculator that implements IStudentLoanCalculator. StudentLoanCalculatorFactory Factory to generate IStudentLoanCalculator implementations that are for a given pay date. Interfaces IStudentLoanCalculator Interface that student loan calculators must implement. IStudentLoanCalculatorFactory Interface that represents factories that can generate IStudentLoanCalculator implementations."
  },
  "api/Paytools.StudentLoans.IStudentLoanCalculator.html": {
    "href": "api/Paytools.StudentLoans.IStudentLoanCalculator.html",
    "title": "Interface IStudentLoanCalculator | Paytools",
    "keywords": "Interface IStudentLoanCalculator Namespace Paytools.StudentLoans Assembly Paytools.StudentLoans.dll Interface that student loan calculators must implement. public interface IStudentLoanCalculator Methods Calculate(decimal, StudentLoanType?, bool, out IStudentLoanCalculationResult) Calculates the necessary student loan deduction based on the input salary, the student loan type (if applicable) and indication of whether to apply post-graduate loan deductions. void Calculate(decimal grossSalary, StudentLoanType? studentLoanType, bool hasPostGradLoan, out IStudentLoanCalculationResult result) Parameters grossSalary decimal Gross salary. studentLoanType StudentLoanType? Optional student loan type. Null if no student loan applies. hasPostGradLoan bool True if post-graduate loan deductions should be applied; false otherwise. result IStudentLoanCalculationResult An implementation of IStudentLoanCalculationResult containing the results of the calculation."
  },
  "api/Paytools.StudentLoans.IStudentLoanCalculatorFactory.html": {
    "href": "api/Paytools.StudentLoans.IStudentLoanCalculatorFactory.html",
    "title": "Interface IStudentLoanCalculatorFactory | Paytools",
    "keywords": "Interface IStudentLoanCalculatorFactory Namespace Paytools.StudentLoans Assembly Paytools.StudentLoans.dll Interface that represents factories that can generate IStudentLoanCalculator implementations. public interface IStudentLoanCalculatorFactory Methods GetCalculator(PayDate) Gets a new IStudentLoanCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. IStudentLoanCalculator GetCalculator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns IStudentLoanCalculator A new calculator instance. Remarks The supplied PayDate is also used to calculate the appropriate period threshold to apply, from the PayFrequency property, e.g., weekly, monthly, etc."
  },
  "api/Paytools.StudentLoans.Model.html": {
    "href": "api/Paytools.StudentLoans.Model.html",
    "title": "Namespace Paytools.StudentLoans.Model | Paytools",
    "keywords": "Namespace Paytools.StudentLoans.Model Structs StudentLoanCalculationResult Represents the result of a student loan calculation. Interfaces IStudentLoanCalculationResult Interface that types implement to provide access to the results of a student loan calculation."
  },
  "api/Paytools.StudentLoans.Model.IStudentLoanCalculationResult.html": {
    "href": "api/Paytools.StudentLoans.Model.IStudentLoanCalculationResult.html",
    "title": "Interface IStudentLoanCalculationResult | Paytools",
    "keywords": "Interface IStudentLoanCalculationResult Namespace Paytools.StudentLoans.Model Assembly Paytools.StudentLoans.dll Interface that types implement to provide access to the results of a student loan calculation. public interface IStudentLoanCalculationResult Properties HasPostGradLoan Gets a value indicating whether post-graduate loan deductions were applied. bool HasPostGradLoan { get; } Property Value bool PostGradLoanThresholdUsed Gets the post-graduate loan threshold for the period used in calculating student loan (but not student loan) deductions. decimal? PostGradLoanThresholdUsed { get; } Property Value decimal? PostGraduateLoanDeduction Gets the post-graduate loan deduction applied. amounts. decimal PostGraduateLoanDeduction { get; } Property Value decimal StudentLoanDeduction Gets the student loan deduction applied (excluding post-grad loan deductions). amounts. decimal StudentLoanDeduction { get; } Property Value decimal StudentLoanThresholdUsed Gets the student loan threshold for the period used in calculating student loan (but not post-graduate loan) deductions. decimal? StudentLoanThresholdUsed { get; } Property Value decimal? StudentLoanType Gets the optional student loan type. Null if no student loan applied. (Post-graduate loans are treated separately via HasPostGradLoan. StudentLoanType? StudentLoanType { get; } Property Value StudentLoanType? TotalDeduction Gets the total deduction to be made, the sum of any student and post-graduate loan deduction amounts. decimal TotalDeduction { get; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.Model.StudentLoanCalculationResult.html": {
    "href": "api/Paytools.StudentLoans.Model.StudentLoanCalculationResult.html",
    "title": "Struct StudentLoanCalculationResult | Paytools",
    "keywords": "Struct StudentLoanCalculationResult Namespace Paytools.StudentLoans.Model Assembly Paytools.StudentLoans.dll Represents the result of a student loan calculation. public readonly struct StudentLoanCalculationResult : IStudentLoanCalculationResult Implements IStudentLoanCalculationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasPostGradLoan Gets a value indicating whether post-graduate loan deductions were applied. public bool HasPostGradLoan { get; init; } Property Value bool NoStudentLoanApplicable Gets an empty StudentLoanCalculationResult that indicates that no pension is applicable. public static StudentLoanCalculationResult NoStudentLoanApplicable { get; } Property Value StudentLoanCalculationResult PostGradLoanThresholdUsed Gets the post-graduate loan threshold for the period used in calculating student loan (but not student loan) deductions. public decimal? PostGradLoanThresholdUsed { get; init; } Property Value decimal? PostGraduateLoanDeduction Gets the post-graduate loan deduction applied. amounts. public decimal PostGraduateLoanDeduction { get; init; } Property Value decimal StudentLoanDeduction Gets the student loan deduction applied (excluding post-grad loan deductions). amounts. public decimal StudentLoanDeduction { get; init; } Property Value decimal StudentLoanThresholdUsed Gets the student loan threshold for the period used in calculating student loan (but not post-graduate loan) deductions. public decimal? StudentLoanThresholdUsed { get; init; } Property Value decimal? StudentLoanType Gets the optional student loan type. Null if no student loan applied. (Post-graduate loans are treated separately via HasPostGradLoan. public StudentLoanType? StudentLoanType { get; init; } Property Value StudentLoanType? TotalDeduction Gets the total deduction to be made, the sum of any student and post-graduate loan deduction amounts. public decimal TotalDeduction { get; init; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.ReferenceData.html": {
    "href": "api/Paytools.StudentLoans.ReferenceData.html",
    "title": "Namespace Paytools.StudentLoans.ReferenceData | Paytools",
    "keywords": "Namespace Paytools.StudentLoans.ReferenceData Structs StudentLoanThresholdSet Type that provides access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. Interfaces IStudentLoanRateSet Interface for types that detail the various HMRC-published student loan deduction rates. IStudentLoanReferenceDataProvider Interface that classes implement in order to provide access to student loan reference data. IStudentLoanThresholdSet Interface for types that provide access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period."
  },
  "api/Paytools.StudentLoans.ReferenceData.IStudentLoanRateSet.html": {
    "href": "api/Paytools.StudentLoans.ReferenceData.IStudentLoanRateSet.html",
    "title": "Interface IStudentLoanRateSet | Paytools",
    "keywords": "Interface IStudentLoanRateSet Namespace Paytools.StudentLoans.ReferenceData Assembly Paytools.StudentLoans.dll Interface for types that detail the various HMRC-published student loan deduction rates. public interface IStudentLoanRateSet Properties PostGrad Gets the deduction rate for post-graduate student loan deductions. decimal PostGrad { get; } Property Value decimal Student Gets the deduction rate for Plan 1, 2 and 4 student loan deductions. decimal Student { get; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.ReferenceData.IStudentLoanReferenceDataProvider.html": {
    "href": "api/Paytools.StudentLoans.ReferenceData.IStudentLoanReferenceDataProvider.html",
    "title": "Interface IStudentLoanReferenceDataProvider | Paytools",
    "keywords": "Interface IStudentLoanReferenceDataProvider Namespace Paytools.StudentLoans.ReferenceData Assembly Paytools.StudentLoans.dll Interface that classes implement in order to provide access to student loan reference data. public interface IStudentLoanReferenceDataProvider Methods GetStudentLoanRatesForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the student and post graduate deduction rates for the specified tax year and tax period, as denoted by the supplied pay frequency. and pay period. IStudentLoanRateSet GetStudentLoanRatesForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IStudentLoanRateSet An instance of IStudentLoanRateSet containing the rates for the specified point in time. GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear, PayFrequency, int) Gets the set of annual thresholds to be applied for a given tax year and tax period. IStudentLoanThresholdSet GetStudentLoanThresholdsForTaxYearAndPeriod(TaxYear taxYear, PayFrequency payFrequency, int taxPeriod) Parameters taxYear TaxYear Applicable tax year. payFrequency PayFrequency Applicable pay frequency. taxPeriod int Applicable tax period. Returns IStudentLoanThresholdSet An implementation of IStudentLoanThresholdSet that provides the appropriate set of annual thresholds for the specified point."
  },
  "api/Paytools.StudentLoans.ReferenceData.IStudentLoanThresholdSet.html": {
    "href": "api/Paytools.StudentLoans.ReferenceData.IStudentLoanThresholdSet.html",
    "title": "Interface IStudentLoanThresholdSet | Paytools",
    "keywords": "Interface IStudentLoanThresholdSet Namespace Paytools.StudentLoans.ReferenceData Assembly Paytools.StudentLoans.dll Interface for types that provide access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. public interface IStudentLoanThresholdSet Properties Plan1PerPeriodThreshold Gets the period threshold for Plan 1 student loan deductions. decimal Plan1PerPeriodThreshold { get; } Property Value decimal Plan2PerPeriodThreshold Gets the period threshold for Plan 2 student loan deductions. decimal Plan2PerPeriodThreshold { get; } Property Value decimal Plan4PerPeriodThreshold Gets the period threshold for Plan 4 student loan deductions. decimal Plan4PerPeriodThreshold { get; } Property Value decimal PostGradPerPeriodThreshold Gets the period threshold for post-graduate student loan deductions. decimal PostGradPerPeriodThreshold { get; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.ReferenceData.StudentLoanThresholdSet.html": {
    "href": "api/Paytools.StudentLoans.ReferenceData.StudentLoanThresholdSet.html",
    "title": "Struct StudentLoanThresholdSet | Paytools",
    "keywords": "Struct StudentLoanThresholdSet Namespace Paytools.StudentLoans.ReferenceData Assembly Paytools.StudentLoans.dll Type that provides access to a specific set of student (and post-grad) loan thresholds for a given plan type and specific period. public readonly struct StudentLoanThresholdSet : IStudentLoanThresholdSet Implements IStudentLoanThresholdSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Plan1PerPeriodThreshold Gets the period threshold for Plan 1 student loan deductions. public decimal Plan1PerPeriodThreshold { get; init; } Property Value decimal Plan2PerPeriodThreshold Gets the period threshold for Plan 2 student loan deductions. public decimal Plan2PerPeriodThreshold { get; init; } Property Value decimal Plan4PerPeriodThreshold Gets the period threshold for Plan 4 student loan deductions. public decimal Plan4PerPeriodThreshold { get; init; } Property Value decimal PostGradPerPeriodThreshold Gets the period threshold for post-graduate student loan deductions. public decimal PostGradPerPeriodThreshold { get; init; } Property Value decimal"
  },
  "api/Paytools.StudentLoans.StudentLoanCalculator.html": {
    "href": "api/Paytools.StudentLoans.StudentLoanCalculator.html",
    "title": "Class StudentLoanCalculator | Paytools",
    "keywords": "Class StudentLoanCalculator Namespace Paytools.StudentLoans Assembly Paytools.StudentLoans.dll Represents a student loan calculator that implements IStudentLoanCalculator. public class StudentLoanCalculator : IStudentLoanCalculator Inheritance object StudentLoanCalculator Implements IStudentLoanCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StudentLoanCalculator(IStudentLoanThresholdSet, IStudentLoanRateSet) Initialises a new instance of a StudentLoanCalculator with the supplied thresholds and rates. Note that supplied thresholds have been adjusted to correspond to the appropriate pay frequency for this calculator instance. public StudentLoanCalculator(IStudentLoanThresholdSet thresholds, IStudentLoanRateSet rates) Parameters thresholds IStudentLoanThresholdSet Thresholds adjusted to match pay frequency for this calculator. rates IStudentLoanRateSet Student and post-grad loan deduction rates. Methods Calculate(decimal, StudentLoanType?, bool, out IStudentLoanCalculationResult) Calculates the necessary student loan deduction based on the input salary, the student loan type (if applicable) and indication of whether to apply post-graduate loan deductions. public void Calculate(decimal grossSalary, StudentLoanType? studentLoanType, bool hasPostGradLoan, out IStudentLoanCalculationResult result) Parameters grossSalary decimal Gross salary. studentLoanType StudentLoanType? Optional student loan type. Null if no student loan applies. hasPostGradLoan bool True if post-graduate loan deductions should be applied; false otherwise. result IStudentLoanCalculationResult An implementation of IStudentLoanCalculationResult containing the results of the calculation."
  },
  "api/Paytools.StudentLoans.StudentLoanCalculatorFactory.html": {
    "href": "api/Paytools.StudentLoans.StudentLoanCalculatorFactory.html",
    "title": "Class StudentLoanCalculatorFactory | Paytools",
    "keywords": "Class StudentLoanCalculatorFactory Namespace Paytools.StudentLoans Assembly Paytools.StudentLoans.dll Factory to generate IStudentLoanCalculator implementations that are for a given pay date. public class StudentLoanCalculatorFactory : IStudentLoanCalculatorFactory Inheritance object StudentLoanCalculatorFactory Implements IStudentLoanCalculatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StudentLoanCalculatorFactory(IStudentLoanReferenceDataProvider) Initialises a new instance of StudentLoanCalculator using the supplied reference data provider. public StudentLoanCalculatorFactory(IStudentLoanReferenceDataProvider referenceDataProvider) Parameters referenceDataProvider IStudentLoanReferenceDataProvider Reference data provider that provides access to HMRC-published thresholds and rates for student loan deductions. Methods GetCalculator(PayDate) Gets a new IStudentLoanCalculator based on the specified pay date and number of tax periods. The pay date is provided in order to determine which set of levels to use, noting that these may (but rarely do) change in-year. public IStudentLoanCalculator GetCalculator(PayDate payDate) Parameters payDate PayDate Applicable pay date. Returns IStudentLoanCalculator A new calculator instance."
  },
  "articles/Architecture.html": {
    "href": "articles/Architecture.html",
    "title": "Paytools Architecture | Paytools",
    "keywords": "Paytools Architecture In any significant software system, there are a bunch of factors that drive design and architecture. For Paytools, they are as follows, in no particular order: Run anywhere - while there is probably no demand for payroll on the Raspberry Pi, the design should at least not preclude Paytools running on any of the popular platforms, which at the time of writing look like: Microsoft Windows MacOS iOS (more iPad than iPhone) Linux (although it isn't clear how much demand there actually is for this) Web/Cloud Be super-responsive - it is ironic that Sage's Payroll 50 (\"cloud\") desktop-based application is faster to use than many current cloud-based payroll solutions, as the code and the data are all local to the user - the goal should be to achieve desktop-level responsiveness, even for large payrolls, regardless of the data architecture Safe - there should be no way for anyone to lose data, or for their data to fall into the wrong hands Scalable - both in terms of number of businesses/number of employees, but also in terms of target platform (see first bullet) Client/Server Architecture Although it isn't fashionable these days to talk of client/server architectures, the Paytools payroll engine is fundamentally a server. By this we mean that it is something that can operate \"standalone\", servicing requests and performing actions on behalf of clients. That said, there is no reason why the engine and the client cannot run on the same device, and indeed, for lower spec devices, there is no reason why both components cannot be part of the same executable. However, for devices that do not allow proper background processing, and also devices that are not necessary \"always on\" (particularly with respect to their Internet connectivity), it may make sense to offload portions of the workload (e.g., RTI processing) to a true server-side component. Use of .NET Technology There are plenty of cross-platform development options (most notably JavaScript/Typescript, Go, Rust, Java/Scala, etc.) but the choice of C# and .NET Core as the language and platform for Paytools was driven in part by the creators long experience with the technology, but also by its demonstrable efficacy in the cross-platform world. Paytools' authors don't assume that all client-side implementations will be written in C# or use the .NET ecosystem; the engine APIs need to support non-.NET clients, either through dedicated libraries, or through open (most likely REST-based) APIs."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Paytools",
    "keywords": "Add your introductions here!"
  },
  "get-started/get-started.html": {
    "href": "get-started/get-started.html",
    "title": "Get started! | Paytools",
    "keywords": "Get started!"
  },
  "how-to-guides/how-to.html": {
    "href": "how-to-guides/how-to.html",
    "title": "How to! | Paytools",
    "keywords": "How to!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | Paytools",
    "keywords": "Introduction Payetools is the first library of its kind to bring open-source capabilities to UK payroll processing via a robust, cross-platform framework written in C#. Payetools contains support for calculating the following: UK Income Tax (all jurisdictions) National Insurance Student Loans Pensions using Qualifying Earnings and Pensionable Pay earnings bases (under both Relief at Source and Net Pay Arrangement tax treatments) Compliance with National Minimum/Living Wage regulations The code passes HMRC tests for income tax, National Insurance, student loans and National Minimum Wage. Tests are included for 2022-2023 and 2023-2024 tax year rates and thresholds. Documentation This documentation is a work in progress. It is currently limited to the API reference, which is itself auto-generated from the XML comments in the Payetools source code. Further work to expand the set of examples and sample code will be provided in due course. Expand the Reference menu on the left hand side to view the individual namespaces within the Payetools library."
  }
}